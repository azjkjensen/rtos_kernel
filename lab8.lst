 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [86080000]                |         dd      reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [8C080000]                |         dd      tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [AD080000]                |         dd      keypress ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | [CE080000]                |         dd      gameOver ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | [E1080000]                |         dd      newPiece ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | [F4080000]                |         dd      received ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | [07090000]                |         dd      touchdown ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | [1A090000]                |         dd      clear ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E97915                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E9B512                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | CPU	8086
  1112 |          |                           | align	2
  1113 |          |                           | 
  1114 |          |                           | reset:
  1115 |          |                           | 
  1116 | 00000886 | 55                        |     push bp
  1117 | 00000887 | 89E5                      |     mov bp, sp
  1118 | 00000889 | E8AA00                    |     call resetHandler
  1119 |          |                           | 
  1120 |          |                           | 
  1121 |          |                           | tick:
  1122 |          |                           | 
  1123 |          |                           |     ;Save context
  1124 | 0000088C | 50                        |     push ax
  1125 | 0000088D | 53                        |     push bx
  1126 | 0000088E | 51                        |     push cx
  1127 | 0000088F | 52                        |     push dx
  1128 | 00000890 | 56                        |     push si
  1129 | 00000891 | 57                        |     push di
  1130 | 00000892 | 55                        |     push bp
  1131 | 00000893 | 06                        |     push es
  1132 | 00000894 | 1E                        |     push ds
  1133 |          |                           | 
  1134 | 00000895 | E8C603                    |     call YKEnterISR
  1135 |          |                           | 
  1136 |          |                           |     ;Enable interrupts
  1137 | 00000898 | FB                        |     sti
  1138 | 00000899 | E8B200                    |     call tickHandler
  1139 | 0000089C | FA                        |     cli
  1140 | 0000089D | E82AFB                    |     call signalEOI
  1141 |          |                           | 
  1142 | 000008A0 | E8CB03                    |     call YKExitISR
  1143 |          |                           | 
  1144 | 000008A3 | 1F                        |     pop ds
  1145 | 000008A4 | 07                        |     pop es
  1146 | 000008A5 | 5D                        |     pop bp
  1147 | 000008A6 | 5F                        |     pop di
  1148 | 000008A7 | 5E                        |     pop si
  1149 | 000008A8 | 5A                        |     pop dx
  1150 | 000008A9 | 59                        |     pop cx
  1151 | 000008AA | 5B                        |     pop bx
  1152 | 000008AB | 58                        |     pop ax
  1153 |          |                           |     
  1154 | 000008AC | CF                        |     iret
  1155 |          |                           | 
  1156 |          |                           | keypress:
  1157 |          |                           | 
  1158 |          |                           |     ;Save context
  1159 | 000008AD | 50                        |     push ax
  1160 | 000008AE | 53                        |     push bx
  1161 | 000008AF | 51                        |     push cx
  1162 | 000008B0 | 52                        |     push dx
  1163 | 000008B1 | 56                        |     push si
  1164 | 000008B2 | 57                        |     push di
  1165 | 000008B3 | 55                        |     push bp
  1166 | 000008B4 | 06                        |     push es
  1167 | 000008B5 | 1E                        |     push ds
  1168 |          |                           |     ;Enable interrupts
  1169 | 000008B6 | E8A503                    |     call YKEnterISR
  1170 | 000008B9 | FB                        |     sti
  1171 | 000008BA | E8D300                    |     call keypressHandler
  1172 | 000008BD | FA                        |     cli
  1173 | 000008BE | E809FB                    |     call signalEOI
  1174 | 000008C1 | E8AA03                    |     call YKExitISR
  1175 |          |                           | 
  1176 | 000008C4 | 1F                        |     pop ds
  1177 | 000008C5 | 07                        |     pop es
  1178 | 000008C6 | 5D                        |     pop bp
  1179 | 000008C7 | 5F                        |     pop di
  1180 | 000008C8 | 5E                        |     pop si
  1181 | 000008C9 | 5A                        |     pop dx
  1182 | 000008CA | 59                        |     pop cx
  1183 | 000008CB | 5B                        |     pop bx
  1184 | 000008CC | 58                        |     pop ax
  1185 |          |                           |     
  1186 | 000008CD | CF                        |     iret
  1187 |          |                           | 
  1188 |          |                           | gameOver:
  1189 | 000008CE | 50                        |     push ax
  1190 | 000008CF | 53                        |     push bx
  1191 | 000008D0 | 51                        |     push cx
  1192 | 000008D1 | 52                        |     push dx
  1193 | 000008D2 | 56                        |     push si
  1194 | 000008D3 | 57                        |     push di
  1195 | 000008D4 | 55                        |     push bp
  1196 | 000008D5 | 06                        |     push es
  1197 | 000008D6 | 1E                        |     push ds
  1198 |          |                           | 
  1199 | 000008D7 | 1F                        |     pop ds
  1200 | 000008D8 | 07                        |     pop es
  1201 | 000008D9 | 5D                        |     pop bp
  1202 | 000008DA | 5F                        |     pop di
  1203 | 000008DB | 5E                        |     pop si
  1204 | 000008DC | 5A                        |     pop dx
  1205 | 000008DD | 59                        |     pop cx
  1206 | 000008DE | 5B                        |     pop bx
  1207 | 000008DF | 58                        |     pop ax
  1208 |          |                           |     
  1209 | 000008E0 | CF                        |     iret
  1210 |          |                           |     
  1211 |          |                           | newPiece:
  1212 | 000008E1 | 50                        |     push ax
  1213 | 000008E2 | 53                        |     push bx
  1214 | 000008E3 | 51                        |     push cx
  1215 | 000008E4 | 52                        |     push dx
  1216 | 000008E5 | 56                        |     push si
  1217 | 000008E6 | 57                        |     push di
  1218 | 000008E7 | 55                        |     push bp
  1219 | 000008E8 | 06                        |     push es
  1220 | 000008E9 | 1E                        |     push ds
  1221 |          |                           | 
  1222 | 000008EA | 1F                        |     pop ds
  1223 | 000008EB | 07                        |     pop es
  1224 | 000008EC | 5D                        |     pop bp
  1225 | 000008ED | 5F                        |     pop di
  1226 | 000008EE | 5E                        |     pop si
  1227 | 000008EF | 5A                        |     pop dx
  1228 | 000008F0 | 59                        |     pop cx
  1229 | 000008F1 | 5B                        |     pop bx
  1230 | 000008F2 | 58                        |     pop ax
  1231 |          |                           |     
  1232 | 000008F3 | CF                        |     iret
  1233 |          |                           | received:
  1234 | 000008F4 | 50                        |     push ax
  1235 | 000008F5 | 53                        |     push bx
  1236 | 000008F6 | 51                        |     push cx
  1237 | 000008F7 | 52                        |     push dx
  1238 | 000008F8 | 56                        |     push si
  1239 | 000008F9 | 57                        |     push di
  1240 | 000008FA | 55                        |     push bp
  1241 | 000008FB | 06                        |     push es
  1242 | 000008FC | 1E                        |     push ds
  1243 |          |                           | 
  1244 | 000008FD | 1F                        |     pop ds
  1245 | 000008FE | 07                        |     pop es
  1246 | 000008FF | 5D                        |     pop bp
  1247 | 00000900 | 5F                        |     pop di
  1248 | 00000901 | 5E                        |     pop si
  1249 | 00000902 | 5A                        |     pop dx
  1250 | 00000903 | 59                        |     pop cx
  1251 | 00000904 | 5B                        |     pop bx
  1252 | 00000905 | 58                        |     pop ax
  1253 |          |                           |     
  1254 | 00000906 | CF                        |     iret 
  1255 |          |                           | touchdown:
  1256 | 00000907 | 50                        |     push ax
  1257 | 00000908 | 53                        |     push bx
  1258 | 00000909 | 51                        |     push cx
  1259 | 0000090A | 52                        |     push dx
  1260 | 0000090B | 56                        |     push si
  1261 | 0000090C | 57                        |     push di
  1262 | 0000090D | 55                        |     push bp
  1263 | 0000090E | 06                        |     push es
  1264 | 0000090F | 1E                        |     push ds
  1265 |          |                           | 
  1266 | 00000910 | 1F                        |     pop ds
  1267 | 00000911 | 07                        |     pop es
  1268 | 00000912 | 5D                        |     pop bp
  1269 | 00000913 | 5F                        |     pop di
  1270 | 00000914 | 5E                        |     pop si
  1271 | 00000915 | 5A                        |     pop dx
  1272 | 00000916 | 59                        |     pop cx
  1273 | 00000917 | 5B                        |     pop bx
  1274 | 00000918 | 58                        |     pop ax
  1275 |          |                           |     
  1276 | 00000919 | CF                        |     iret
  1277 |          |                           | clear:
  1278 | 0000091A | 50                        |     push ax
  1279 | 0000091B | 53                        |     push bx
  1280 | 0000091C | 51                        |     push cx
  1281 | 0000091D | 52                        |     push dx
  1282 | 0000091E | 56                        |     push si
  1283 | 0000091F | 57                        |     push di
  1284 | 00000920 | 55                        |     push bp
  1285 | 00000921 | 06                        |     push es
  1286 | 00000922 | 1E                        |     push ds
  1287 |          |                           | 
  1288 | 00000923 | 1F                        |     pop ds
  1289 | 00000924 | 07                        |     pop es
  1290 | 00000925 | 5D                        |     pop bp
  1291 | 00000926 | 5F                        |     pop di
  1292 | 00000927 | 5E                        |     pop si
  1293 | 00000928 | 5A                        |     pop dx
  1294 | 00000929 | 59                        |     pop cx
  1295 | 0000092A | 5B                        |     pop bx
  1296 | 0000092B | 58                        |     pop ax
  1297 |          |                           |     
  1298 | 0000092C | CF                        |     iret
  1299 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1300 |          |                           | 	CPU	8086
  1301 | 0000092D | 90                        | 	ALIGN	2
  1302 | 0000092E | E94B0D                    | 	jmp	main	; Jump to program start
  1303 | 00000931 | 90                        | 	ALIGN	2
  1304 |          |                           | tickCount:
  1305 | 00000932 | 0100                      | 	DW	1
  1306 |          |                           | L_myinth_1:
  1307 | 00000934 | 0000                      | 	DW	0
  1308 |          |                           | 	ALIGN	2
  1309 |          |                           | resetHandler:
  1310 |          |                           | 	; >>>>> Line:	15
  1311 |          |                           | 	; >>>>> void resetHandler(){ 
  1312 | 00000936 | EB0D                      | 	jmp	L_myinth_2
  1313 |          |                           | L_myinth_3:
  1314 |          |                           | 	; >>>>> Line:	17
  1315 |          |                           | 	; >>>>> exit(0); 
  1316 | 00000938 | 30C0                      | 	xor	al, al
  1317 | 0000093A | 50                        | 	push	ax
  1318 | 0000093B | E89CFA                    | 	call	exit
  1319 | 0000093E | 83C402                    | 	add	sp, 2
  1320 | 00000941 | 89EC                      | 	mov	sp, bp
  1321 | 00000943 | 5D                        | 	pop	bp
  1322 | 00000944 | C3                        | 	ret
  1323 |          |                           | L_myinth_2:
  1324 | 00000945 | 55                        | 	push	bp
  1325 | 00000946 | 89E5                      | 	mov	bp, sp
  1326 | 00000948 | EBEE                      | 	jmp	L_myinth_3
  1327 |          |                           | 	ALIGN	2
  1328 |          |                           | L_myinth_5:
  1329 | 0000094A | 0000                      | 	DW	0
  1330 |          |                           | L_myinth_6:
  1331 | 0000094C | 0000                      | 	DW	0
  1332 |          |                           | 	ALIGN	2
  1333 |          |                           | tickHandler:
  1334 |          |                           | 	; >>>>> Line:	20
  1335 |          |                           | 	; >>>>> void tickHandler(){ 
  1336 | 0000094E | EB18                      | 	jmp	L_myinth_7
  1337 |          |                           | L_myinth_8:
  1338 |          |                           | 	; >>>>> Line:	26
  1339 |          |                           | 	; >>>>> data = (data + 89) % 100; 
  1340 | 00000950 | A1[4C09]                  | 	mov	ax, word [L_myinth_6]
  1341 | 00000953 | 83C059                    | 	add	ax, 89
  1342 | 00000956 | 99                        | 	cwd
  1343 | 00000957 | B96400                    | 	mov	cx, 100
  1344 | 0000095A | F7F9                      | 	idiv	cx
  1345 | 0000095C | 89D0                      | 	mov	ax, dx
  1346 | 0000095E | A3[4C09]                  | 	mov	word [L_myinth_6], ax
  1347 |          |                           | 	; >>>>> Line:	41
  1348 |          |                           | 	; >>>>> YKTickHandler(); 
  1349 | 00000961 | E82C03                    | 	call	YKTickHandler
  1350 | 00000964 | 89EC                      | 	mov	sp, bp
  1351 | 00000966 | 5D                        | 	pop	bp
  1352 | 00000967 | C3                        | 	ret
  1353 |          |                           | L_myinth_7:
  1354 | 00000968 | 55                        | 	push	bp
  1355 | 00000969 | 89E5                      | 	mov	bp, sp
  1356 | 0000096B | EBE3                      | 	jmp	L_myinth_8
  1357 | 0000096D | 90                        | 	ALIGN	2
  1358 |          |                           | loopLikeABoss:
  1359 |          |                           | 	; >>>>> Line:	44
  1360 |          |                           | 	; >>>>> void loopLikeABoss(){ 
  1361 | 0000096E | EB19                      | 	jmp	L_myinth_10
  1362 |          |                           | L_myinth_11:
  1363 |          |                           | 	; >>>>> Line:	46
  1364 |          |                           | 	; >>>>> for(; i < 5001; i++){ 
  1365 | 00000970 | C746FE0000                | 	mov	word [bp-2], 0
  1366 |          |                           | 	; >>>>> Line:	46
  1367 |          |                           | 	; >>>>> for(; i < 5001; i++){ 
  1368 | 00000975 | EB07                      | 	jmp	L_myinth_13
  1369 |          |                           | L_myinth_12:
  1370 |          |                           | 	; >>>>> Line:	47
  1371 |          |                           | 	; >>>>> someLocalVariable++; 
  1372 | 00000977 | FF06[3409]                | 	inc	word [L_myinth_1]
  1373 |          |                           | L_myinth_15:
  1374 | 0000097B | FF46FE                    | 	inc	word [bp-2]
  1375 |          |                           | L_myinth_13:
  1376 | 0000097E | 817EFE8913                | 	cmp	word [bp-2], 5001
  1377 | 00000983 | 7CF2                      | 	jl	L_myinth_12
  1378 |          |                           | L_myinth_14:
  1379 | 00000985 | 89EC                      | 	mov	sp, bp
  1380 | 00000987 | 5D                        | 	pop	bp
  1381 | 00000988 | C3                        | 	ret
  1382 |          |                           | L_myinth_10:
  1383 | 00000989 | 55                        | 	push	bp
  1384 | 0000098A | 89E5                      | 	mov	bp, sp
  1385 | 0000098C | 51                        | 	push	cx
  1386 | 0000098D | EBE1                      | 	jmp	L_myinth_11
  1387 | 0000098F | 90                        | 	ALIGN	2
  1388 |          |                           | keypressHandler:
  1389 |          |                           | 	; >>>>> Line:	51
  1390 |          |                           | 	; >>>>> void keypressHandler(){ 
  1391 | 00000990 | EB0A                      | 	jmp	L_myinth_17
  1392 |          |                           | L_myinth_18:
  1393 |          |                           | 	; >>>>> Line:	54
  1394 |          |                           | 	; >>>>> c = KeyBuffer; 
  1395 | 00000992 | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1396 | 00000995 | 8846FF                    | 	mov	byte [bp-1], al
  1397 | 00000998 | 89EC                      | 	mov	sp, bp
  1398 | 0000099A | 5D                        | 	pop	bp
  1399 | 0000099B | C3                        | 	ret
  1400 |          |                           | L_myinth_17:
  1401 | 0000099C | 55                        | 	push	bp
  1402 | 0000099D | 89E5                      | 	mov	bp, sp
  1403 | 0000099F | 51                        | 	push	cx
  1404 | 000009A0 | EBF0                      | 	jmp	L_myinth_18
  1405 |          |                           | 
  1406 |          |                           | YKEnterMutex:
  1407 | 000009A2 | FA                        |     cli
  1408 | 000009A3 | C3                        |     ret
  1409 |          |                           |     
  1410 |          |                           | YKExitMutex:
  1411 | 000009A4 | FB                        |     sti
  1412 | 000009A5 | C3                        |     ret
  1413 |          |                           |     
  1414 |          |                           | contextSaver:
  1415 | 000009A6 | 9C                        |     pushf ; Flags
  1416 | 000009A7 | 0E                        |     push cs
  1417 | 000009A8 | FF7602                    |     push word[bp+2] ; IP
  1418 |          |                           |     
  1419 | 000009AB | 50                        |     push ax
  1420 | 000009AC | 53                        |     push bx
  1421 | 000009AD | 51                        |     push cx
  1422 | 000009AE | 52                        |     push dx
  1423 | 000009AF | 56                        |     push si
  1424 | 000009B0 | 57                        |     push di
  1425 | 000009B1 | 55                        |     push bp
  1426 | 000009B2 | 06                        |     push es
  1427 | 000009B3 | 1E                        |     push ds
  1428 |          |                           | 
  1429 | 000009B4 | 8B1E[E609]                |     mov bx, [saveContextTask]
  1430 | 000009B8 | 8927                      |     mov [bx], sp
  1431 |          |                           | 
  1432 | 000009BA | EB0C                      |     jmp contextRestorer
  1433 |          |                           | 
  1434 |          |                           | YKDispatcher: ; Dispatches the next task, and saves context if necessary.
  1435 | 000009BC | 55                        |     push bp					
  1436 | 000009BD | 89E5                      | 	mov bp, sp
  1437 | 000009BF | 50                        | 	push ax
  1438 | 000009C0 | 8B4604                    | 	mov ax, word[bp+4]
  1439 | 000009C3 | 3C01                      | 	cmp	al, 1
  1440 | 000009C5 | 58                        | 	pop ax
  1441 | 000009C6 | 74DE                      | 	je 	contextSaver
  1442 |          |                           | 
  1443 |          |                           | contextRestorer:   
  1444 | 000009C8 | 8B1E[8E13]                |     mov bx, [taskToRun]
  1445 | 000009CC | 8B27                      |     mov sp, [bx]
  1446 |          |                           | 
  1447 | 000009CE | 1F                        |     pop ds
  1448 | 000009CF | 07                        |     pop es
  1449 | 000009D0 | 5D                        |     pop bp
  1450 | 000009D1 | 5F                        |     pop di
  1451 | 000009D2 | 5E                        |     pop si
  1452 | 000009D3 | 5A                        |     pop dx
  1453 | 000009D4 | 59                        |     pop cx
  1454 | 000009D5 | 5B                        |     pop bx
  1455 | 000009D6 | 58                        |     pop ax
  1456 |          |                           | 
  1457 | 000009D7 | CF                        |     iret; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1458 |          |                           | 	CPU	8086
  1459 |          |                           | 	ALIGN	2
  1460 | 000009D8 | E9A10C                    | 	jmp	main	; Jump to program start
  1461 | 000009DB | 90                        | 	ALIGN	2
  1462 |          |                           | YKCtxSwCount:
  1463 | 000009DC | 0000                      | 	DW	0
  1464 |          |                           | YKIdleCount:
  1465 | 000009DE | 0000                      | 	DW	0
  1466 |          |                           | YKISRCallDepth:
  1467 | 000009E0 | 0000                      | 	DW	0
  1468 |          |                           | YKTickNum:
  1469 | 000009E2 | 0100                      | 	DW	1
  1470 |          |                           | currentTask:
  1471 | 000009E4 | 0000                      | 	DW	0
  1472 |          |                           | saveContextTask:
  1473 | 000009E6 | 0000                      | 	DW	0
  1474 |          |                           | running:
  1475 | 000009E8 | 00                        | 	DB	0
  1476 | 000009E9 | 90                        | 	ALIGN	2
  1477 |          |                           | TCBi:
  1478 | 000009EA | 0000                      | 	DW	0
  1479 |          |                           | semi:
  1480 | 000009EC | 0000                      | 	DW	0
  1481 |          |                           | Qi:
  1482 | 000009EE | 0000                      | 	DW	0
  1483 |          |                           | eventIndex:
  1484 | 000009F0 | 0000                      | 	DW	0
  1485 |          |                           | 	ALIGN	2
  1486 |          |                           | YKInitialize:
  1487 |          |                           | 	; >>>>> Line:	50
  1488 |          |                           | 	; >>>>> void YKInitialize(){ 
  1489 | 000009F2 | EB18                      | 	jmp	L_yakc_1
  1490 |          |                           | L_yakc_2:
  1491 |          |                           | 	; >>>>> Line:	51
  1492 |          |                           | 	; >>>>> YKEnterMutex(); 
  1493 | 000009F4 | E8ABFF                    | 	call	YKEnterMutex
  1494 |          |                           | 	; >>>>> Line:	54
  1495 |          |                           | 	; >>>>> YKNewTask(YKIdleTask,(void*)&YKIdleTasks[256], 100); 
  1496 | 000009F7 | B064                      | 	mov	al, 100
  1497 | 000009F9 | 50                        | 	push	ax
  1498 | 000009FA | B8[9015]                  | 	mov	ax, (YKIdleTasks+512)
  1499 | 000009FD | 50                        | 	push	ax
  1500 | 000009FE | B8[120A]                  | 	mov	ax, YKIdleTask
  1501 | 00000A01 | 50                        | 	push	ax
  1502 | 00000A02 | E82700                    | 	call	YKNewTask
  1503 | 00000A05 | 83C406                    | 	add	sp, 6
  1504 | 00000A08 | 89EC                      | 	mov	sp, bp
  1505 | 00000A0A | 5D                        | 	pop	bp
  1506 | 00000A0B | C3                        | 	ret
  1507 |          |                           | L_yakc_1:
  1508 | 00000A0C | 55                        | 	push	bp
  1509 | 00000A0D | 89E5                      | 	mov	bp, sp
  1510 | 00000A0F | EBE3                      | 	jmp	L_yakc_2
  1511 | 00000A11 | 90                        | 	ALIGN	2
  1512 |          |                           | YKIdleTask:
  1513 |          |                           | 	; >>>>> Line:	61
  1514 |          |                           | 	; >>>>> void YKIdleTask(void){ 
  1515 | 00000A12 | EB12                      | 	jmp	L_yakc_4
  1516 |          |                           | L_yakc_5:
  1517 |          |                           | 	; >>>>> Line:	63
  1518 |          |                           | 	; >>>>> while(1){ 
  1519 | 00000A14 | EB0A                      | 	jmp	L_yakc_7
  1520 |          |                           | L_yakc_6:
  1521 |          |                           | 	; >>>>> Line:	66
  1522 |          |                           | 	; >>>>> ackPointer[10] 
  1523 | 00000A16 | E889FF                    | 	call	YKEnterMutex
  1524 |          |                           | 	; >>>>> Line:	67
  1525 |          |                           | 	; >>>>> YKIdleCount++; 
  1526 | 00000A19 | FF06[DE09]                | 	inc	word [YKIdleCount]
  1527 |          |                           | 	; >>>>> Line:	69
  1528 |          |                           | 	; >>>>> YKExitMutex(); 
  1529 | 00000A1D | E884FF                    | 	call	YKExitMutex
  1530 |          |                           | L_yakc_7:
  1531 | 00000A20 | EBF4                      | 	jmp	L_yakc_6
  1532 |          |                           | L_yakc_8:
  1533 | 00000A22 | 89EC                      | 	mov	sp, bp
  1534 | 00000A24 | 5D                        | 	pop	bp
  1535 | 00000A25 | C3                        | 	ret
  1536 |          |                           | L_yakc_4:
  1537 | 00000A26 | 55                        | 	push	bp
  1538 | 00000A27 | 89E5                      | 	mov	bp, sp
  1539 | 00000A29 | EBE9                      | 	jmp	L_yakc_5
  1540 | 00000A2B | 90                        | 	ALIGN	2
  1541 |          |                           | YKNewTask:
  1542 |          |                           | 	; >>>>> Line:	73
  1543 |          |                           | 	; >>>>> void YKNewTask(void (*task)(void), void* taskStack, unsigned char priority){ 
  1544 | 00000A2C | E97101                    | 	jmp	L_yakc_10
  1545 |          |                           | L_yakc_11:
  1546 |          |                           | 	; >>>>> Line:	77
  1547 |          |                           | 	; >>>>> YKEnterMutex(); 
  1548 | 00000A2F | E870FF                    | 	call	YKEnterMutex
  1549 |          |                           | 	; >>>>> Line:	78
  1550 |          |                           | 	; >>>>> YKTCBs[TCBi].state = 1; 
  1551 | 00000A32 | A1[EA09]                  | 	mov	ax, word [TCBi]
  1552 | 00000A35 | B91200                    | 	mov	cx, 18
  1553 | 00000A38 | F7E9                      | 	imul	cx
  1554 | 00000A3A | 05[AC11]                  | 	add	ax, YKTCBs
  1555 | 00000A3D | 89C6                      | 	mov	si, ax
  1556 | 00000A3F | 83C602                    | 	add	si, 2
  1557 | 00000A42 | C60401                    | 	mov	byte [si], 1
  1558 |          |                           | 	; >>>>> Line:	79
  1559 |          |                           | 	; >>>>> YKTCBs[TCBi].priority = priority; 
  1560 | 00000A45 | A1[EA09]                  | 	mov	ax, word [TCBi]
  1561 | 00000A48 | B91200                    | 	mov	cx, 18
  1562 | 00000A4B | F7E9                      | 	imul	cx
  1563 | 00000A4D | 05[AC11]                  | 	add	ax, YKTCBs
  1564 | 00000A50 | 89C6                      | 	mov	si, ax
  1565 | 00000A52 | 83C603                    | 	add	si, 3
  1566 | 00000A55 | 8A4608                    | 	mov	al, byte [bp+8]
  1567 | 00000A58 | 8804                      | 	mov	byte [si], al
  1568 |          |                           | 	; >>>>> Line:	80
  1569 |          |                           | 	; >>>>> YKTCBs[TCBi].delay = 0; 
  1570 | 00000A5A | A1[EA09]                  | 	mov	ax, word [TCBi]
  1571 | 00000A5D | B91200                    | 	mov	cx, 18
  1572 | 00000A60 | F7E9                      | 	imul	cx
  1573 | 00000A62 | 05[AC11]                  | 	add	ax, YKTCBs
  1574 | 00000A65 | 89C6                      | 	mov	si, ax
  1575 | 00000A67 | 83C606                    | 	add	si, 6
  1576 | 00000A6A | C7040000                  | 	mov	word [si], 0
  1577 |          |                           | 	; >>>>> Line:	82
  1578 |          |                           | 	; >>>>> newStackPointer = (unsigned*)taskStack - 11; 
  1579 | 00000A6E | 8B4606                    | 	mov	ax, word [bp+6]
  1580 | 00000A71 | 83E816                    | 	sub	ax, 22
  1581 | 00000A74 | 8946FE                    | 	mov	word [bp-2], ax
  1582 |          |                           | 	; >>>>> Line:	84
  1583 |          |                           | 	; >>>>> for(i = 0; i < 8; i++){ 
  1584 | 00000A77 | C746FC0000                | 	mov	word [bp-4], 0
  1585 | 00000A7C | EB11                      | 	jmp	L_yakc_13
  1586 |          |                           | L_yakc_12:
  1587 |          |                           | 	; >>>>> Line:	85
  1588 |          |                           | 	; >>>>> newStackPointer[i] = 0; 
  1589 | 00000A7E | 8B46FC                    | 	mov	ax, word [bp-4]
  1590 | 00000A81 | D1E0                      | 	shl	ax, 1
  1591 | 00000A83 | 89C6                      | 	mov	si, ax
  1592 | 00000A85 | 0376FE                    | 	add	si, word [bp-2]
  1593 | 00000A88 | C7040000                  | 	mov	word [si], 0
  1594 |          |                           | L_yakc_15:
  1595 | 00000A8C | FF46FC                    | 	inc	word [bp-4]
  1596 |          |                           | L_yakc_13:
  1597 | 00000A8F | 837EFC08                  | 	cmp	word [bp-4], 8
  1598 | 00000A93 | 7CE9                      | 	jl	L_yakc_12
  1599 |          |                           | L_yakc_14:
  1600 |          |                           | 	; >>>>> Line:	88
  1601 |          |                           | 	; >>>>> newStackPointer[8] = (unsigned) task; 
  1602 | 00000A95 | 8B76FE                    | 	mov	si, word [bp-2]
  1603 | 00000A98 | 83C610                    | 	add	si, 16
  1604 | 00000A9B | 8B4604                    | 	mov	ax, word [bp+4]
  1605 | 00000A9E | 8904                      | 	mov	word [si], ax
  1606 |          |                           | 	; >>>>> Line:	89
  1607 |          |                           | 	; >>>>> newStackPointer[9] = 0; 
  1608 | 00000AA0 | 8B76FE                    | 	mov	si, word [bp-2]
  1609 | 00000AA3 | 83C612                    | 	add	si, 18
  1610 | 00000AA6 | C7040000                  | 	mov	word [si], 0
  1611 |          |                           | 	; >>>>> Line:	90
  1612 |          |                           | 	; >>>>> newStackPointer[10] 
  1613 | 00000AAA | 8B76FE                    | 	mov	si, word [bp-2]
  1614 | 00000AAD | 83C614                    | 	add	si, 20
  1615 | 00000AB0 | C7040002                  | 	mov	word [si], 512
  1616 |          |                           | 	; >>>>> Line:	93
  1617 |          |                           | 	; >>>>> YKTCBs[TCBi].stackPtr = newStackPointer - 1; 
  1618 | 00000AB4 | 8B46FE                    | 	mov	ax, word [bp-2]
  1619 | 00000AB7 | 83E802                    | 	sub	ax, 2
  1620 | 00000ABA | 50                        | 	push	ax
  1621 | 00000ABB | A1[EA09]                  | 	mov	ax, word [TCBi]
  1622 | 00000ABE | B91200                    | 	mov	cx, 18
  1623 | 00000AC1 | F7E9                      | 	imul	cx
  1624 | 00000AC3 | 89C2                      | 	mov	dx, ax
  1625 | 00000AC5 | 89D6                      | 	mov	si, dx
  1626 | 00000AC7 | 81C6[AC11]                | 	add	si, YKTCBs
  1627 | 00000ACB | 58                        | 	pop	ax
  1628 | 00000ACC | 8904                      | 	mov	word [si], ax
  1629 |          |                           | 	; >>>>> Line:	95
  1630 |          |                           | 	; >>>>> if(TCBi == 0){ 
  1631 | 00000ACE | A1[EA09]                  | 	mov	ax, word [TCBi]
  1632 | 00000AD1 | 85C0                      | 	test	ax, ax
  1633 | 00000AD3 | 7525                      | 	jne	L_yakc_16
  1634 |          |                           | 	; >>>>> Line:	96
  1635 |          |                           | 	; >>>>> readyRoot = &YKTCBs[TCBi]; 
  1636 | 00000AD5 | A1[EA09]                  | 	mov	ax, word [TCBi]
  1637 | 00000AD8 | B91200                    | 	mov	cx, 18
  1638 | 00000ADB | F7E9                      | 	imul	cx
  1639 | 00000ADD | 05[AC11]                  | 	add	ax, YKTCBs
  1640 | 00000AE0 | A3[8C13]                  | 	mov	word [readyRoot], ax
  1641 |          |                           | 	; >>>>> Line:	97
  1642 |          |                           | 	; >>>>> YKTCBs[TCBi].next = 0; 
  1643 | 00000AE3 | A1[EA09]                  | 	mov	ax, word [TCBi]
  1644 | 00000AE6 | B91200                    | 	mov	cx, 18
  1645 | 00000AE9 | F7E9                      | 	imul	cx
  1646 | 00000AEB | 05[AC11]                  | 	add	ax, YKTCBs
  1647 | 00000AEE | 89C6                      | 	mov	si, ax
  1648 | 00000AF0 | 83C604                    | 	add	si, 4
  1649 | 00000AF3 | C7040000                  | 	mov	word [si], 0
  1650 | 00000AF7 | E98E00                    | 	jmp	L_yakc_17
  1651 |          |                           | L_yakc_16:
  1652 |          |                           | 	; >>>>> Line:	99
  1653 |          |                           | 	; >>>>> if(priority < readyRoot->priority){ 
  1654 | 00000AFA | 8B36[8C13]                | 	mov	si, word [readyRoot]
  1655 | 00000AFE | 83C603                    | 	add	si, 3
  1656 | 00000B01 | 8A4608                    | 	mov	al, byte [bp+8]
  1657 | 00000B04 | 3A04                      | 	cmp	al, byte [si]
  1658 | 00000B06 | 7325                      | 	jae	L_yakc_18
  1659 |          |                           | 	; >>>>> Line:	100
  1660 |          |                           | 	; >>>>> YKTCBs[TCBi].next = readyRoot; 
  1661 | 00000B08 | A1[EA09]                  | 	mov	ax, word [TCBi]
  1662 | 00000B0B | B91200                    | 	mov	cx, 18
  1663 | 00000B0E | F7E9                      | 	imul	cx
  1664 | 00000B10 | 05[AC11]                  | 	add	ax, YKTCBs
  1665 | 00000B13 | 89C6                      | 	mov	si, ax
  1666 | 00000B15 | 83C604                    | 	add	si, 4
  1667 | 00000B18 | A1[8C13]                  | 	mov	ax, word [readyRoot]
  1668 | 00000B1B | 8904                      | 	mov	word [si], ax
  1669 |          |                           | 	; >>>>> Line:	101
  1670 |          |                           | 	; >>>>> readyRoot = &YKTCBs[TCBi]; 
  1671 | 00000B1D | A1[EA09]                  | 	mov	ax, word [TCBi]
  1672 | 00000B20 | B91200                    | 	mov	cx, 18
  1673 | 00000B23 | F7E9                      | 	imul	cx
  1674 | 00000B25 | 05[AC11]                  | 	add	ax, YKTCBs
  1675 | 00000B28 | A3[8C13]                  | 	mov	word [readyRoot], ax
  1676 | 00000B2B | EB5B                      | 	jmp	L_yakc_19
  1677 |          |                           | L_yakc_18:
  1678 |          |                           | 	; >>>>> Line:	104
  1679 |          |                           | 	; >>>>> browser = readyRoot; 
  1680 | 00000B2D | A1[8C13]                  | 	mov	ax, word [readyRoot]
  1681 | 00000B30 | 8946FA                    | 	mov	word [bp-6], ax
  1682 |          |                           | 	; >>>>> Line:	106
  1683 |          |                           | 	; >>>>> while(browser){ 
  1684 | 00000B33 | EB4C                      | 	jmp	L_yakc_21
  1685 |          |                           | L_yakc_20:
  1686 |          |                           | 	; >>>>> Line:	107
  1687 |          |                           | 	; >>>>> if(priority < browser->next->priority){ 
  1688 | 00000B35 | 8B76FA                    | 	mov	si, word [bp-6]
  1689 | 00000B38 | 83C604                    | 	add	si, 4
  1690 | 00000B3B | 8B34                      | 	mov	si, word [si]
  1691 | 00000B3D | 83C603                    | 	add	si, 3
  1692 | 00000B40 | 8A4608                    | 	mov	al, byte [bp+8]
  1693 | 00000B43 | 3A04                      | 	cmp	al, byte [si]
  1694 | 00000B45 | 732F                      | 	jae	L_yakc_23
  1695 |          |                           | 	; >>>>> Line:	108
  1696 |          |                           | 	; >>>>> YKTCBs[TCBi].next = browser->next; 
  1697 | 00000B47 | 8B76FA                    | 	mov	si, word [bp-6]
  1698 | 00000B4A | 83C604                    | 	add	si, 4
  1699 | 00000B4D | A1[EA09]                  | 	mov	ax, word [TCBi]
  1700 | 00000B50 | B91200                    | 	mov	cx, 18
  1701 | 00000B53 | F7E9                      | 	imul	cx
  1702 | 00000B55 | 05[AC11]                  | 	add	ax, YKTCBs
  1703 | 00000B58 | 89C7                      | 	mov	di, ax
  1704 | 00000B5A | 83C704                    | 	add	di, 4
  1705 | 00000B5D | 8B04                      | 	mov	ax, word [si]
  1706 | 00000B5F | 8905                      | 	mov	word [di], ax
  1707 |          |                           | 	; >>>>> Line:	109
  1708 |          |                           | 	; >>>>> oRun  
  1709 | 00000B61 | A1[EA09]                  | 	mov	ax, word [TCBi]
  1710 | 00000B64 | B91200                    | 	mov	cx, 18
  1711 | 00000B67 | F7E9                      | 	imul	cx
  1712 | 00000B69 | 05[AC11]                  | 	add	ax, YKTCBs
  1713 | 00000B6C | 8B76FA                    | 	mov	si, word [bp-6]
  1714 | 00000B6F | 83C604                    | 	add	si, 4
  1715 | 00000B72 | 8904                      | 	mov	word [si], ax
  1716 |          |                           | 	; >>>>> Line:	110
  1717 |          |                           | 	; >>>>> break; 
  1718 | 00000B74 | EB12                      | 	jmp	L_yakc_22
  1719 |          |                           | L_yakc_23:
  1720 |          |                           | 	; >>>>> Line:	112
  1721 |          |                           | 	; >>>>> browser = browser->next; 
  1722 | 00000B76 | 8B76FA                    | 	mov	si, word [bp-6]
  1723 | 00000B79 | 83C604                    | 	add	si, 4
  1724 | 00000B7C | 8B04                      | 	mov	ax, word [si]
  1725 | 00000B7E | 8946FA                    | 	mov	word [bp-6], ax
  1726 |          |                           | L_yakc_21:
  1727 | 00000B81 | 8B46FA                    | 	mov	ax, word [bp-6]
  1728 | 00000B84 | 85C0                      | 	test	ax, ax
  1729 | 00000B86 | 75AD                      | 	jne	L_yakc_20
  1730 |          |                           | L_yakc_22:
  1731 |          |                           | L_yakc_19:
  1732 |          |                           | L_yakc_17:
  1733 |          |                           | 	; >>>>> Line:	117
  1734 |          |                           | 	; >>>>> TCBi++; 
  1735 | 00000B88 | FF06[EA09]                | 	inc	word [TCBi]
  1736 |          |                           | 	; >>>>> Line:	118
  1737 |          |                           | 	; >>>>> if(running){ 
  1738 | 00000B8C | A0[E809]                  | 	mov	al, byte [running]
  1739 | 00000B8F | 84C0                      | 	test	al, al
  1740 | 00000B91 | 7409                      | 	je	L_yakc_24
  1741 |          |                           | 	; >>>>> Line:	119
  1742 |          |                           | 	; >>>>> YKScheduler(1); 
  1743 | 00000B93 | B001                      | 	mov	al, 1
  1744 | 00000B95 | 50                        | 	push	ax
  1745 | 00000B96 | E81100                    | 	call	YKScheduler
  1746 | 00000B99 | 83C402                    | 	add	sp, 2
  1747 |          |                           | L_yakc_24:
  1748 | 00000B9C | 89EC                      | 	mov	sp, bp
  1749 | 00000B9E | 5D                        | 	pop	bp
  1750 | 00000B9F | C3                        | 	ret
  1751 |          |                           | L_yakc_10:
  1752 | 00000BA0 | 55                        | 	push	bp
  1753 | 00000BA1 | 89E5                      | 	mov	bp, sp
  1754 | 00000BA3 | 83EC06                    | 	sub	sp, 6
  1755 | 00000BA6 | E986FE                    | 	jmp	L_yakc_11
  1756 | 00000BA9 | 90                        | 	ALIGN	2
  1757 |          |                           | YKScheduler:
  1758 |          |                           | 	; >>>>> Line:	123
  1759 |          |                           | 	; >>>>> void YKScheduler(unsigned char saveContext){ 
  1760 | 00000BAA | EB56                      | 	jmp	L_yakc_26
  1761 |          |                           | L_yakc_27:
  1762 |          |                           | 	; >>>>> Line:	126
  1763 |          |                           | 	; >>>>> browser = readyRoot; 
  1764 | 00000BAC | A1[8C13]                  | 	mov	ax, word [readyRoot]
  1765 | 00000BAF | 8946FE                    | 	mov	word [bp-2], ax
  1766 |          |                           | 	; >>>>> Line:	127
  1767 |          |                           | 	; >>>>> YKEnterMutex(); 
  1768 | 00000BB2 | E8EDFD                    | 	call	YKEnterMutex
  1769 |          |                           | 	; >>>>> Line:	128
  1770 |          |                           | 	; >>>>> while(browser){ 
  1771 | 00000BB5 | EB1E                      | 	jmp	L_yakc_29
  1772 |          |                           | L_yakc_28:
  1773 |          |                           | 	; >>>>> Line:	129
  1774 |          |                           | 	; >>>>> if(browser->state == 1){ 
  1775 | 00000BB7 | 8B76FE                    | 	mov	si, word [bp-2]
  1776 | 00000BBA | 83C602                    | 	add	si, 2
  1777 | 00000BBD | 803C01                    | 	cmp	byte [si], 1
  1778 | 00000BC0 | 7508                      | 	jne	L_yakc_31
  1779 |          |                           | 	; >>>>> Line:	130
  1780 |          |                           | 	; >>>>> taskToRun = browser; 
  1781 | 00000BC2 | 8B46FE                    | 	mov	ax, word [bp-2]
  1782 | 00000BC5 | A3[8E13]                  | 	mov	word [taskToRun], ax
  1783 |          |                           | 	; >>>>> Line:	131
  1784 |          |                           | 	; >>>>> break; 
  1785 | 00000BC8 | EB12                      | 	jmp	L_yakc_30
  1786 |          |                           | L_yakc_31:
  1787 |          |                           | 	; >>>>> Line:	133
  1788 |          |                           | 	; >>>>> browser = browser->next; 
  1789 | 00000BCA | 8B76FE                    | 	mov	si, word [bp-2]
  1790 | 00000BCD | 83C604                    | 	add	si, 4
  1791 | 00000BD0 | 8B04                      | 	mov	ax, word [si]
  1792 | 00000BD2 | 8946FE                    | 	mov	word [bp-2], ax
  1793 |          |                           | L_yakc_29:
  1794 | 00000BD5 | 8B46FE                    | 	mov	ax, word [bp-2]
  1795 | 00000BD8 | 85C0                      | 	test	ax, ax
  1796 | 00000BDA | 75DB                      | 	jne	L_yakc_28
  1797 |          |                           | L_yakc_30:
  1798 |          |                           | 	; >>>>> Line:	136
  1799 |          |                           | 	; >>>>> if(taskToRun  
  1800 | 00000BDC | A1[E409]                  | 	mov	ax, word [currentTask]
  1801 | 00000BDF | 3B06[8E13]                | 	cmp	ax, word [taskToRun]
  1802 | 00000BE3 | 7419                      | 	je	L_yakc_32
  1803 |          |                           | 	; >>>>> Line:	138
  1804 |          |                           | 	; >>>>> saveContextTask = currentTask; 
  1805 | 00000BE5 | A1[E409]                  | 	mov	ax, word [currentTask]
  1806 | 00000BE8 | A3[E609]                  | 	mov	word [saveContextTask], ax
  1807 |          |                           | 	; >>>>> Line:	139
  1808 |          |                           | 	; >>>>> currentTask = taskToRun; 
  1809 | 00000BEB | A1[8E13]                  | 	mov	ax, word [taskToRun]
  1810 | 00000BEE | A3[E409]                  | 	mov	word [currentTask], ax
  1811 |          |                           | 	; >>>>> Line:	142
  1812 |          |                           | 	; >>>>> YKCtxSwCount++; 
  1813 | 00000BF1 | FF06[DC09]                | 	inc	word [YKCtxSwCount]
  1814 |          |                           | 	; >>>>> Line:	143
  1815 |          |                           | 	; >>>>> YKDispatcher(saveContext); 
  1816 | 00000BF5 | FF7604                    | 	push	word [bp+4]
  1817 | 00000BF8 | E8C1FD                    | 	call	YKDispatcher
  1818 | 00000BFB | 83C402                    | 	add	sp, 2
  1819 |          |                           | L_yakc_32:
  1820 | 00000BFE | 89EC                      | 	mov	sp, bp
  1821 | 00000C00 | 5D                        | 	pop	bp
  1822 | 00000C01 | C3                        | 	ret
  1823 |          |                           | L_yakc_26:
  1824 | 00000C02 | 55                        | 	push	bp
  1825 | 00000C03 | 89E5                      | 	mov	bp, sp
  1826 | 00000C05 | 51                        | 	push	cx
  1827 | 00000C06 | EBA4                      | 	jmp	L_yakc_27
  1828 |          |                           | 	ALIGN	2
  1829 |          |                           | YKRun:
  1830 |          |                           | 	; >>>>> Line:	148
  1831 |          |                           | 	; >>>>> void YKRun() { 
  1832 | 00000C08 | EB12                      | 	jmp	L_yakc_34
  1833 |          |                           | L_yakc_35:
  1834 |          |                           | 	; >>>>> Line:	150
  1835 |          |                           | 	; >>>>> running = 1; 
  1836 | 00000C0A | C606[E809]01              | 	mov	byte [running], 1
  1837 |          |                           | 	; >>>>> Line:	151
  1838 |          |                           | 	; >>>>> YKScheduler(0); 
  1839 | 00000C0F | 30C0                      | 	xor	al, al
  1840 | 00000C11 | 50                        | 	push	ax
  1841 | 00000C12 | E895FF                    | 	call	YKScheduler
  1842 | 00000C15 | 83C402                    | 	add	sp, 2
  1843 | 00000C18 | 89EC                      | 	mov	sp, bp
  1844 | 00000C1A | 5D                        | 	pop	bp
  1845 | 00000C1B | C3                        | 	ret
  1846 |          |                           | L_yakc_34:
  1847 | 00000C1C | 55                        | 	push	bp
  1848 | 00000C1D | 89E5                      | 	mov	bp, sp
  1849 | 00000C1F | EBE9                      | 	jmp	L_yakc_35
  1850 | 00000C21 | 90                        | 	ALIGN	2
  1851 |          |                           | YKDelayTask:
  1852 |          |                           | 	; >>>>> Line:	154
  1853 |          |                           | 	; >>>>> void YKDelayTask(unsigned count){ 
  1854 | 00000C22 | EB34                      | 	jmp	L_yakc_37
  1855 |          |                           | L_yakc_38:
  1856 |          |                           | 	; >>>>> Line:	156
  1857 |          |                           | 	; >>>>> YKEnterMutex(); 
  1858 | 00000C24 | E87BFD                    | 	call	YKEnterMutex
  1859 |          |                           | 	; >>>>> Line:	158
  1860 |          |                           | 	; >>>>> if(!count){ 
  1861 | 00000C27 | 8B4604                    | 	mov	ax, word [bp+4]
  1862 | 00000C2A | 85C0                      | 	test	ax, ax
  1863 | 00000C2C | 7504                      | 	jne	L_yakc_39
  1864 |          |                           | 	; >>>>> Line:	160
  1865 |          |                           | 	; >>>>> return; 
  1866 | 00000C2E | EB24                      | 	jmp	L_yakc_40
  1867 | 00000C30 | EB22                      | 	jmp	L_yakc_41
  1868 |          |                           | L_yakc_39:
  1869 |          |                           | 	; >>>>> Line:	164
  1870 |          |                           | 	; >>>>> currentTask->delay = count; 
  1871 | 00000C32 | 8B36[E409]                | 	mov	si, word [currentTask]
  1872 | 00000C36 | 83C606                    | 	add	si, 6
  1873 | 00000C39 | 8B4604                    | 	mov	ax, word [bp+4]
  1874 | 00000C3C | 8904                      | 	mov	word [si], ax
  1875 |          |                           | 	; >>>>> Line:	165
  1876 |          |                           | 	; >>>>> currentTask->state = 0; 
  1877 | 00000C3E | 8B36[E409]                | 	mov	si, word [currentTask]
  1878 | 00000C42 | 83C602                    | 	add	si, 2
  1879 | 00000C45 | C60400                    | 	mov	byte [si], 0
  1880 |          |                           | 	; >>>>> Line:	167
  1881 |          |                           | 	; >>>>> YKScheduler(1); 
  1882 | 00000C48 | B001                      | 	mov	al, 1
  1883 | 00000C4A | 50                        | 	push	ax
  1884 | 00000C4B | E85CFF                    | 	call	YKScheduler
  1885 | 00000C4E | 83C402                    | 	add	sp, 2
  1886 |          |                           | 	; >>>>> Line:	168
  1887 |          |                           | 	; >>>>> YKExitMutex(); 
  1888 | 00000C51 | E850FD                    | 	call	YKExitMutex
  1889 |          |                           | L_yakc_41:
  1890 |          |                           | L_yakc_40:
  1891 | 00000C54 | 89EC                      | 	mov	sp, bp
  1892 | 00000C56 | 5D                        | 	pop	bp
  1893 | 00000C57 | C3                        | 	ret
  1894 |          |                           | L_yakc_37:
  1895 | 00000C58 | 55                        | 	push	bp
  1896 | 00000C59 | 89E5                      | 	mov	bp, sp
  1897 | 00000C5B | EBC7                      | 	jmp	L_yakc_38
  1898 | 00000C5D | 90                        | 	ALIGN	2
  1899 |          |                           | YKEnterISR:
  1900 |          |                           | 	; >>>>> Line:	173
  1901 |          |                           | 	; >>>>> void YKEnterISR(void){ 
  1902 | 00000C5E | EB08                      | 	jmp	L_yakc_43
  1903 |          |                           | L_yakc_44:
  1904 |          |                           | 	; >>>>> Line:	175
  1905 |          |                           | 	; >>>>> YKISRCallDepth++; 
  1906 | 00000C60 | FF06[E009]                | 	inc	word [YKISRCallDepth]
  1907 | 00000C64 | 89EC                      | 	mov	sp, bp
  1908 | 00000C66 | 5D                        | 	pop	bp
  1909 | 00000C67 | C3                        | 	ret
  1910 |          |                           | L_yakc_43:
  1911 | 00000C68 | 55                        | 	push	bp
  1912 | 00000C69 | 89E5                      | 	mov	bp, sp
  1913 | 00000C6B | EBF3                      | 	jmp	L_yakc_44
  1914 | 00000C6D | 90                        | 	ALIGN	2
  1915 |          |                           | YKExitISR:
  1916 |          |                           | 	; >>>>> Line:	178
  1917 |          |                           | 	; >>>>> < 0){ 
  1918 | 00000C6E | EB1B                      | 	jmp	L_yakc_46
  1919 |          |                           | L_yakc_47:
  1920 |          |                           | 	; >>>>> Line:	179
  1921 |          |                           | 	; >>>>> YKISRCallDepth--; 
  1922 | 00000C70 | FF0E[E009]                | 	dec	word [YKISRCallDepth]
  1923 |          |                           | 	; >>>>> Line:	182
  1924 |          |                           | 	; >>>>> if(!YKISRCallDepth){ 
  1925 | 00000C74 | A1[E009]                  | 	mov	ax, word [YKISRCallDepth]
  1926 | 00000C77 | 85C0                      | 	test	ax, ax
  1927 | 00000C79 | 750C                      | 	jne	L_yakc_48
  1928 |          |                           | 	; >>>>> Line:	183
  1929 |          |                           | 	; >>>>> YKScheduler(1); 
  1930 | 00000C7B | B001                      | 	mov	al, 1
  1931 | 00000C7D | 50                        | 	push	ax
  1932 | 00000C7E | E829FF                    | 	call	YKScheduler
  1933 | 00000C81 | 83C402                    | 	add	sp, 2
  1934 |          |                           | 	; >>>>> Line:	184
  1935 |          |                           | 	; >>>>> YKExitMutex(); 
  1936 | 00000C84 | E81DFD                    | 	call	YKExitMutex
  1937 |          |                           | L_yakc_48:
  1938 | 00000C87 | 89EC                      | 	mov	sp, bp
  1939 | 00000C89 | 5D                        | 	pop	bp
  1940 | 00000C8A | C3                        | 	ret
  1941 |          |                           | L_yakc_46:
  1942 | 00000C8B | 55                        | 	push	bp
  1943 | 00000C8C | 89E5                      | 	mov	bp, sp
  1944 | 00000C8E | EBE0                      | 	jmp	L_yakc_47
  1945 |          |                           | 	ALIGN	2
  1946 |          |                           | YKTickHandler:
  1947 |          |                           | 	; >>>>> Line:	188
  1948 |          |                           | 	; >>>>> void YKTickHandler(void){ 
  1949 | 00000C90 | EB4B                      | 	jmp	L_yakc_50
  1950 |          |                           | L_yakc_51:
  1951 |          |                           | 	; >>>>> Line:	192
  1952 |          |                           | 	; >>>>> YKTickNum++; 
  1953 | 00000C92 | FF06[E209]                | 	inc	word [YKTickNum]
  1954 |          |                           | 	; >>>>> Line:	194
  1955 |          |                           | 	; >>>>> browser = readyRoot; 
  1956 | 00000C96 | A1[8C13]                  | 	mov	ax, word [readyRoot]
  1957 | 00000C99 | 8946FE                    | 	mov	word [bp-2], ax
  1958 |          |                           | 	; >>>>> Line:	195
  1959 |          |                           | 	; >>>>> while(browser){ 
  1960 | 00000C9C | EB34                      | 	jmp	L_yakc_53
  1961 |          |                           | L_yakc_52:
  1962 |          |                           | 	; >>>>> Line:	196
  1963 |          |                           | 	; >>>>> if(browser->state == 0){ 
  1964 | 00000C9E | 8B76FE                    | 	mov	si, word [bp-2]
  1965 | 00000CA1 | 83C602                    | 	add	si, 2
  1966 | 00000CA4 | 8A04                      | 	mov	al, byte [si]
  1967 | 00000CA6 | 84C0                      | 	test	al, al
  1968 | 00000CA8 | 751D                      | 	jne	L_yakc_55
  1969 |          |                           | 	; >>>>> Line:	197
  1970 |          |                           | 	; >>>>> browser->delay--; 
  1971 | 00000CAA | 8B76FE                    | 	mov	si, word [bp-2]
  1972 | 00000CAD | 83C606                    | 	add	si, 6
  1973 | 00000CB0 | FF0C                      | 	dec	word [si]
  1974 |          |                           | 	; >>>>> Line:	203
  1975 |          |                           | 	; >>>>> if(!(browser->delay)){ 
  1976 | 00000CB2 | 8B76FE                    | 	mov	si, word [bp-2]
  1977 | 00000CB5 | 83C606                    | 	add	si, 6
  1978 | 00000CB8 | 8B04                      | 	mov	ax, word [si]
  1979 | 00000CBA | 85C0                      | 	test	ax, ax
  1980 | 00000CBC | 7509                      | 	jne	L_yakc_56
  1981 |          |                           | 	; >>>>> Line:	204
  1982 |          |                           | 	; >>>>> browser->state = 1; 
  1983 | 00000CBE | 8B76FE                    | 	mov	si, word [bp-2]
  1984 | 00000CC1 | 83C602                    | 	add	si, 2
  1985 | 00000CC4 | C60401                    | 	mov	byte [si], 1
  1986 |          |                           | L_yakc_56:
  1987 |          |                           | L_yakc_55:
  1988 |          |                           | 	; >>>>> Line:	209
  1989 |          |                           | 	; >>>>> browser = browser->next; 
  1990 | 00000CC7 | 8B76FE                    | 	mov	si, word [bp-2]
  1991 | 00000CCA | 83C604                    | 	add	si, 4
  1992 | 00000CCD | 8B04                      | 	mov	ax, word [si]
  1993 | 00000CCF | 8946FE                    | 	mov	word [bp-2], ax
  1994 |          |                           | L_yakc_53:
  1995 | 00000CD2 | 8B46FE                    | 	mov	ax, word [bp-2]
  1996 | 00000CD5 | 85C0                      | 	test	ax, ax
  1997 | 00000CD7 | 75C5                      | 	jne	L_yakc_52
  1998 |          |                           | L_yakc_54:
  1999 | 00000CD9 | 89EC                      | 	mov	sp, bp
  2000 | 00000CDB | 5D                        | 	pop	bp
  2001 | 00000CDC | C3                        | 	ret
  2002 |          |                           | L_yakc_50:
  2003 | 00000CDD | 55                        | 	push	bp
  2004 | 00000CDE | 89E5                      | 	mov	bp, sp
  2005 | 00000CE0 | 51                        | 	push	cx
  2006 | 00000CE1 | EBAF                      | 	jmp	L_yakc_51
  2007 | 00000CE3 | 90                        | 	ALIGN	2
  2008 |          |                           | YKSemCreate:
  2009 |          |                           | 	; >>>>> Line:	213
  2010 |          |                           | 	; >>>>> YKSem* YKSemCreate(int val){ 
  2011 | 00000CE4 | EB28                      | 	jmp	L_yakc_58
  2012 |          |                           | L_yakc_59:
  2013 |          |                           | 	; >>>>> Line:	215
  2014 |          |                           | 	; >>>>> if(val < 0){ 
  2015 | 00000CE6 | 837E0400                  | 	cmp	word [bp+4], 0
  2016 | 00000CEA | 7D04                      | 	jge	L_yakc_60
  2017 |          |                           | 	; >>>>> Line:	216
  2018 |          |                           | 	; >>>>> return  
  2019 | 00000CEC | 31C0                      | 	xor	ax, ax
  2020 | 00000CEE | EB1A                      | 	jmp	L_yakc_61
  2021 |          |                           | L_yakc_60:
  2022 |          |                           | 	; >>>>> Line:	219
  2023 |          |                           | 	; >>>>> newSem = &YKSEMS[semi]; 
  2024 | 00000CF0 | A1[EC09]                  | 	mov	ax, word [semi]
  2025 | 00000CF3 | D1E0                      | 	shl	ax, 1
  2026 | 00000CF5 | 05[6012]                  | 	add	ax, YKSEMS
  2027 | 00000CF8 | 8946FE                    | 	mov	word [bp-2], ax
  2028 |          |                           | 	; >>>>> Line:	220
  2029 |          |                           | 	; >>>>> *newSem = val; 
  2030 | 00000CFB | 8B76FE                    | 	mov	si, word [bp-2]
  2031 | 00000CFE | 8B4604                    | 	mov	ax, word [bp+4]
  2032 | 00000D01 | 8904                      | 	mov	word [si], ax
  2033 |          |                           | 	; >>>>> Line:	221
  2034 |          |                           | 	; >>>>> semi++; 
  2035 | 00000D03 | FF06[EC09]                | 	inc	word [semi]
  2036 |          |                           | 	; >>>>> Line:	222
  2037 |          |                           | 	; >>>>> return newSem; 
  2038 | 00000D07 | 8B46FE                    | 	mov	ax, word [bp-2]
  2039 |          |                           | L_yakc_61:
  2040 | 00000D0A | 89EC                      | 	mov	sp, bp
  2041 | 00000D0C | 5D                        | 	pop	bp
  2042 | 00000D0D | C3                        | 	ret
  2043 |          |                           | L_yakc_58:
  2044 | 00000D0E | 55                        | 	push	bp
  2045 | 00000D0F | 89E5                      | 	mov	bp, sp
  2046 | 00000D11 | 51                        | 	push	cx
  2047 | 00000D12 | EBD2                      | 	jmp	L_yakc_59
  2048 |          |                           | 	ALIGN	2
  2049 |          |                           | YKSemPend:
  2050 |          |                           | 	; >>>>> Line:	225
  2051 |          |                           | 	; >>>>> void YKSemPend(YKSem* sem){ 
  2052 | 00000D14 | EB37                      | 	jmp	L_yakc_63
  2053 |          |                           | L_yakc_64:
  2054 |          |                           | 	; >>>>> Line:	226
  2055 |          |                           | 	; >>>>> YKEnterMutex(); 
  2056 | 00000D16 | E889FC                    | 	call	YKEnterMutex
  2057 |          |                           | 	; >>>>> Line:	227
  2058 |          |                           | 	; >>>>> if(!(*sem)){ 
  2059 | 00000D19 | 8B7604                    | 	mov	si, word [bp+4]
  2060 | 00000D1C | 8B04                      | 	mov	ax, word [si]
  2061 | 00000D1E | 85C0                      | 	test	ax, ax
  2062 | 00000D20 | 751F                      | 	jne	L_yakc_65
  2063 |          |                           | 	; >>>>> Line:	228
  2064 |          |                           | 	; >>>>> currentTask->state = 2; 
  2065 | 00000D22 | 8B36[E409]                | 	mov	si, word [currentTask]
  2066 | 00000D26 | 83C602                    | 	add	si, 2
  2067 | 00000D29 | C60402                    | 	mov	byte [si], 2
  2068 |          |                           | 	; >>>>> Line:	229
  2069 |          |                           | 	; >>>>> currentTask->semBlock = sem; 
  2070 | 00000D2C | 8B36[E409]                | 	mov	si, word [currentTask]
  2071 | 00000D30 | 83C608                    | 	add	si, 8
  2072 | 00000D33 | 8B4604                    | 	mov	ax, word [bp+4]
  2073 | 00000D36 | 8904                      | 	mov	word [si], ax
  2074 |          |                           | 	; >>>>> Line:	230
  2075 |          |                           | 	; >>>>> YKScheduler(1); 
  2076 | 00000D38 | B001                      | 	mov	al, 1
  2077 | 00000D3A | 50                        | 	push	ax
  2078 | 00000D3B | E86CFE                    | 	call	YKScheduler
  2079 | 00000D3E | 83C402                    | 	add	sp, 2
  2080 |          |                           | L_yakc_65:
  2081 |          |                           | 	; >>>>> Line:	232
  2082 |          |                           | 	; >>>>> (*sem)--; 
  2083 | 00000D41 | 8B7604                    | 	mov	si, word [bp+4]
  2084 | 00000D44 | FF0C                      | 	dec	word [si]
  2085 |          |                           | 	; >>>>> Line:	233
  2086 |          |                           | 	; >>>>> YKExitMutex(); 
  2087 | 00000D46 | E85BFC                    | 	call	YKExitMutex
  2088 | 00000D49 | 89EC                      | 	mov	sp, bp
  2089 | 00000D4B | 5D                        | 	pop	bp
  2090 | 00000D4C | C3                        | 	ret
  2091 |          |                           | L_yakc_63:
  2092 | 00000D4D | 55                        | 	push	bp
  2093 | 00000D4E | 89E5                      | 	mov	bp, sp
  2094 | 00000D50 | EBC4                      | 	jmp	L_yakc_64
  2095 |          |                           | 	ALIGN	2
  2096 |          |                           | YKSemPost:
  2097 |          |                           | 	; >>>>> Line:	237
  2098 |          |                           | 	; >>>>> void YKSemPost(YKSem* sem){ 
  2099 | 00000D52 | EB66                      | 	jmp	L_yakc_67
  2100 |          |                           | L_yakc_68:
  2101 |          |                           | 	; >>>>> Line:	240
  2102 |          |                           | 	; >>>>> YKEnterMutex(); 
  2103 | 00000D54 | E84BFC                    | 	call	YKEnterMutex
  2104 |          |                           | 	; >>>>> Line:	241
  2105 |          |                           | 	; >>>>> (*sem)++; 
  2106 | 00000D57 | 8B7604                    | 	mov	si, word [bp+4]
  2107 | 00000D5A | FF04                      | 	inc	word [si]
  2108 |          |                           | 	; >>>>> Line:	242
  2109 |          |                           | 	; >>>>> browser = readyRoot; 
  2110 | 00000D5C | A1[8C13]                  | 	mov	ax, word [readyRoot]
  2111 | 00000D5F | 8946FE                    | 	mov	word [bp-2], ax
  2112 |          |                           | 	; >>>>> Line:	244
  2113 |          |                           | 	; >>>>> while(browser){ 
  2114 | 00000D62 | EB38                      | 	jmp	L_yakc_70
  2115 |          |                           | L_yakc_69:
  2116 |          |                           | 	; >>>>> Line:	245
  2117 |          |                           | 	; >>>>> if(browser->state == 2 && browser->semBlock == sem){ 
  2118 | 00000D64 | 8B76FE                    | 	mov	si, word [bp-2]
  2119 | 00000D67 | 83C602                    | 	add	si, 2
  2120 | 00000D6A | 803C02                    | 	cmp	byte [si], 2
  2121 | 00000D6D | 7522                      | 	jne	L_yakc_72
  2122 | 00000D6F | 8B76FE                    | 	mov	si, word [bp-2]
  2123 | 00000D72 | 83C608                    | 	add	si, 8
  2124 | 00000D75 | 8B4604                    | 	mov	ax, word [bp+4]
  2125 | 00000D78 | 3B04                      | 	cmp	ax, word [si]
  2126 | 00000D7A | 7515                      | 	jne	L_yakc_72
  2127 |          |                           | 	; >>>>> Line:	246
  2128 |          |                           | 	; >>>>> browser-> 
  2129 | 00000D7C | 8B76FE                    | 	mov	si, word [bp-2]
  2130 | 00000D7F | 83C602                    | 	add	si, 2
  2131 | 00000D82 | C60401                    | 	mov	byte [si], 1
  2132 |          |                           | 	; >>>>> Line:	247
  2133 |          |                           | 	; >>>>> browser->semBlock = 0; 
  2134 | 00000D85 | 8B76FE                    | 	mov	si, word [bp-2]
  2135 | 00000D88 | 83C608                    | 	add	si, 8
  2136 | 00000D8B | C7040000                  | 	mov	word [si], 0
  2137 |          |                           | 	; >>>>> Line:	248
  2138 |          |                           | 	; >>>>> break; 
  2139 | 00000D8F | EB12                      | 	jmp	L_yakc_71
  2140 |          |                           | L_yakc_72:
  2141 |          |                           | 	; >>>>> Line:	250
  2142 |          |                           | 	; >>>>> browser = browser->next; 
  2143 | 00000D91 | 8B76FE                    | 	mov	si, word [bp-2]
  2144 | 00000D94 | 83C604                    | 	add	si, 4
  2145 | 00000D97 | 8B04                      | 	mov	ax, word [si]
  2146 | 00000D99 | 8946FE                    | 	mov	word [bp-2], ax
  2147 |          |                           | L_yakc_70:
  2148 | 00000D9C | 8B46FE                    | 	mov	ax, word [bp-2]
  2149 | 00000D9F | 85C0                      | 	test	ax, ax
  2150 | 00000DA1 | 75C1                      | 	jne	L_yakc_69
  2151 |          |                           | L_yakc_71:
  2152 |          |                           | 	; >>>>> Line:	253
  2153 |          |                           | 	; >>>>> if(YKISRCallDepth == 0){ 
  2154 | 00000DA3 | A1[E009]                  | 	mov	ax, word [YKISRCallDepth]
  2155 | 00000DA6 | 85C0                      | 	test	ax, ax
  2156 | 00000DA8 | 7509                      | 	jne	L_yakc_73
  2157 |          |                           | 	; >>>>> Line:	254
  2158 |          |                           | 	; >>>>> YKScheduler(1); 
  2159 | 00000DAA | B001                      | 	mov	al, 1
  2160 | 00000DAC | 50                        | 	push	ax
  2161 | 00000DAD | E8FAFD                    | 	call	YKScheduler
  2162 | 00000DB0 | 83C402                    | 	add	sp, 2
  2163 |          |                           | L_yakc_73:
  2164 |          |                           | 	; >>>>> Line:	256
  2165 |          |                           | 	; >>>>> YKExitMutex(); 
  2166 | 00000DB3 | E8EEFB                    | 	call	YKExitMutex
  2167 | 00000DB6 | 89EC                      | 	mov	sp, bp
  2168 | 00000DB8 | 5D                        | 	pop	bp
  2169 | 00000DB9 | C3                        | 	ret
  2170 |          |                           | L_yakc_67:
  2171 | 00000DBA | 55                        | 	push	bp
  2172 | 00000DBB | 89E5                      | 	mov	bp, sp
  2173 | 00000DBD | 51                        | 	push	cx
  2174 | 00000DBE | EB94                      | 	jmp	L_yakc_68
  2175 |          |                           | 	ALIGN	2
  2176 |          |                           | YKQCreate:
  2177 |          |                           | 	; >>>>> Line:	259
  2178 |          |                           | 	; >>>>> YKQ* YKQCreate(void** start, unsigned size){ 
  2179 | 00000DC0 | EB7A                      | 	jmp	L_yakc_75
  2180 |          |                           | L_yakc_76:
  2181 |          |                           | 	; >>>>> Line:	260
  2182 |          |                           | 	; >>>>> YKQS[Qi].length = size; 
  2183 | 00000DC2 | A1[EE09]                  | 	mov	ax, word [Qi]
  2184 | 00000DC5 | B90A00                    | 	mov	cx, 10
  2185 | 00000DC8 | F7E9                      | 	imul	cx
  2186 | 00000DCA | 05[C412]                  | 	add	ax, YKQS
  2187 | 00000DCD | 89C6                      | 	mov	si, ax
  2188 | 00000DCF | 83C602                    | 	add	si, 2
  2189 | 00000DD2 | 8B4606                    | 	mov	ax, word [bp+6]
  2190 | 00000DD5 | 8904                      | 	mov	word [si], ax
  2191 |          |                           | 	; >>>>> Line:	261
  2192 |          |                           | 	; >>>>> YKQS[Qi].queueAddress = start; 
  2193 | 00000DD7 | A1[EE09]                  | 	mov	ax, word [Qi]
  2194 | 00000DDA | B90A00                    | 	mov	cx, 10
  2195 | 00000DDD | F7E9                      | 	imul	cx
  2196 | 00000DDF | 89C6                      | 	mov	si, ax
  2197 | 00000DE1 | 81C6[C412]                | 	add	si, YKQS
  2198 | 00000DE5 | 8B4604                    | 	mov	ax, word [bp+4]
  2199 | 00000DE8 | 8904                      | 	mov	word [si], ax
  2200 |          |                           | 	; >>>>> Line:	262
  2201 |          |                           | 	; >>>>> YKQS[Qi].nextEmpty = start; 
  2202 | 00000DEA | A1[EE09]                  | 	mov	ax, word [Qi]
  2203 | 00000DED | B90A00                    | 	mov	cx, 10
  2204 | 00000DF0 | F7E9                      | 	imul	cx
  2205 | 00000DF2 | 05[C412]                  | 	add	ax, YKQS
  2206 | 00000DF5 | 89C6                      | 	mov	si, ax
  2207 | 00000DF7 | 83C604                    | 	add	si, 4
  2208 | 00000DFA | 8B4604                    | 	mov	ax, word [bp+4]
  2209 | 00000DFD | 8904                      | 	mov	word [si], ax
  2210 |          |                           | 	; >>>>> Line:	263
  2211 |          |                           | 	; >>>>> YKQS[Qi].nextRemove = start; 
  2212 | 00000DFF | A1[EE09]                  | 	mov	ax, word [Qi]
  2213 | 00000E02 | B90A00                    | 	mov	cx, 10
  2214 | 00000E05 | F7E9                      | 	imul	cx
  2215 | 00000E07 | 05[C412]                  | 	add	ax, YKQS
  2216 | 00000E0A | 89C6                      | 	mov	si, ax
  2217 | 00000E0C | 83C606                    | 	add	si, 6
  2218 | 00000E0F | 8B4604                    | 	mov	ax, word [bp+4]
  2219 | 00000E12 | 8904                      | 	mov	word [si], ax
  2220 |          |                           | 	; >>>>> Line:	264
  2221 |          |                           | 	; >>>>> YKQS[Qi].state = 0; 
  2222 | 00000E14 | A1[EE09]                  | 	mov	ax, word [Qi]
  2223 | 00000E17 | B90A00                    | 	mov	cx, 10
  2224 | 00000E1A | F7E9                      | 	imul	cx
  2225 | 00000E1C | 05[C412]                  | 	add	ax, YKQS
  2226 | 00000E1F | 89C6                      | 	mov	si, ax
  2227 | 00000E21 | 83C608                    | 	add	si, 8
  2228 | 00000E24 | C7040000                  | 	mov	word [si], 0
  2229 |          |                           | 	; >>>>> Line:	266
  2230 |          |                           | 	; >>>>> Qi++; 
  2231 | 00000E28 | FF06[EE09]                | 	inc	word [Qi]
  2232 |          |                           | 	; >>>>> Line:	268
  2233 |          |                           | 	; >>>>> return &YKQS[Qi - 1]; 
  2234 | 00000E2C | A1[EE09]                  | 	mov	ax, word [Qi]
  2235 | 00000E2F | 48                        | 	dec	ax
  2236 | 00000E30 | B90A00                    | 	mov	cx, 10
  2237 | 00000E33 | F7E9                      | 	imul	cx
  2238 | 00000E35 | 05[C412]                  | 	add	ax, YKQS
  2239 |          |                           | L_yakc_77:
  2240 | 00000E38 | 89EC                      | 	mov	sp, bp
  2241 | 00000E3A | 5D                        | 	pop	bp
  2242 | 00000E3B | C3                        | 	ret
  2243 |          |                           | L_yakc_75:
  2244 | 00000E3C | 55                        | 	push	bp
  2245 | 00000E3D | 89E5                      | 	mov	bp, sp
  2246 | 00000E3F | EB81                      | 	jmp	L_yakc_76
  2247 | 00000E41 | 90                        | 	ALIGN	2
  2248 |          |                           | YKQPend:
  2249 |          |                           | 	; >>>>> Line:	271
  2250 |          |                           | 	; >>>>> void* YKQPend(YKQ* q){ 
  2251 | 00000E42 | E9A600                    | 	jmp	L_yakc_79
  2252 |          |                           | L_yakc_80:
  2253 |          |                           | 	; >>>>> Line:	273
  2254 |          |                           | 	; >>>>> YKEnterMutex(); 
  2255 | 00000E45 | E85AFB                    | 	call	YKEnterMutex
  2256 |          |                           | 	; >>>>> Line:	274
  2257 |          |                           | 	; >>>>> if(q->stat 
  2258 | 00000E48 | 8B7604                    | 	mov	si, word [bp+4]
  2259 | 00000E4B | 83C608                    | 	add	si, 8
  2260 | 00000E4E | 8B04                      | 	mov	ax, word [si]
  2261 | 00000E50 | 85C0                      | 	test	ax, ax
  2262 | 00000E52 | 751F                      | 	jne	L_yakc_81
  2263 |          |                           | 	; >>>>> Line:	275
  2264 |          |                           | 	; >>>>> currentTask->state = 3; 
  2265 | 00000E54 | 8B36[E409]                | 	mov	si, word [currentTask]
  2266 | 00000E58 | 83C602                    | 	add	si, 2
  2267 | 00000E5B | C60403                    | 	mov	byte [si], 3
  2268 |          |                           | 	; >>>>> Line:	276
  2269 |          |                           | 	; >>>>> currentTask->qBlock = q; 
  2270 | 00000E5E | 8B36[E409]                | 	mov	si, word [currentTask]
  2271 | 00000E62 | 83C60A                    | 	add	si, 10
  2272 | 00000E65 | 8B4604                    | 	mov	ax, word [bp+4]
  2273 | 00000E68 | 8904                      | 	mov	word [si], ax
  2274 |          |                           | 	; >>>>> Line:	277
  2275 |          |                           | 	; >>>>> YKScheduler(1); 
  2276 | 00000E6A | B001                      | 	mov	al, 1
  2277 | 00000E6C | 50                        | 	push	ax
  2278 | 00000E6D | E83AFD                    | 	call	YKScheduler
  2279 | 00000E70 | 83C402                    | 	add	sp, 2
  2280 |          |                           | L_yakc_81:
  2281 |          |                           | 	; >>>>> Line:	280
  2282 |          |                           | 	; >>>>> t = (void*)* q->nextRemove; 
  2283 | 00000E73 | 8B7604                    | 	mov	si, word [bp+4]
  2284 | 00000E76 | 83C606                    | 	add	si, 6
  2285 | 00000E79 | 8B34                      | 	mov	si, word [si]
  2286 | 00000E7B | 8B04                      | 	mov	ax, word [si]
  2287 | 00000E7D | 8946FE                    | 	mov	word [bp-2], ax
  2288 |          |                           | 	; >>>>> Line:	281
  2289 |          |                           | 	; >>>>> q->nextRemove++; 
  2290 | 00000E80 | 8B7604                    | 	mov	si, word [bp+4]
  2291 | 00000E83 | 83C606                    | 	add	si, 6
  2292 | 00000E86 | 830402                    | 	add	word [si], 2
  2293 |          |                           | 	; >>>>> Line:	283
  2294 |          |                           | 	; >>>>> if(q->nextRemove == q->queueAddress + q->length){ 
  2295 | 00000E89 | 8B7604                    | 	mov	si, word [bp+4]
  2296 | 00000E8C | 83C602                    | 	add	si, 2
  2297 | 00000E8F | 8B04                      | 	mov	ax, word [si]
  2298 | 00000E91 | D1E0                      | 	shl	ax, 1
  2299 | 00000E93 | 8B7604                    | 	mov	si, word [bp+4]
  2300 | 00000E96 | 0304                      | 	add	ax, word [si]
  2301 | 00000E98 | 83C606                    | 	add	si, 6
  2302 | 00000E9B | 8B14                      | 	mov	dx, word [si]
  2303 | 00000E9D | 39C2                      | 	cmp	dx, ax
  2304 | 00000E9F | 750D                      | 	jne	L_yakc_82
  2305 |          |                           | 	; >>>>> Line:	284
  2306 |          |                           | 	; >>>>> q->nextRemove = q->queueAddress; 
  2307 | 00000EA1 | 8B7604                    | 	mov	si, word [bp+4]
  2308 | 00000EA4 | 8B7E04                    | 	mov	di, word [bp+4]
  2309 | 00000EA7 | 83C706                    | 	add	di, 6
  2310 | 00000EAA | 8B04                      | 	mov	ax, word [si]
  2311 | 00000EAC | 8905                      | 	mov	word [di], ax
  2312 |          |                           | L_yakc_82:
  2313 |          |                           | 	; >>>>> Line:	287
  2314 |          |                           | 	; >>>>> if(q->state == 1){ 
  2315 | 00000EAE | 8B7604                    | 	mov	si, word [bp+4]
  2316 | 00000EB1 | 83C608                    | 	add	si, 8
  2317 | 00000EB4 | 833C01                    | 	cmp	word [si], 1
  2318 | 00000EB7 | 750C                      | 	jne	L_yakc_83
  2319 |          |                           | 	; >>>>> Line:	288
  2320 |          |                           | 	; >>>>> q->state = 2; 
  2321 | 00000EB9 | 8B7604                    | 	mov	si, word [bp+4]
  2322 | 00000EBC | 83C608                    | 	add	si, 8
  2323 | 00000EBF | C7040200                  | 	mov	word [si], 2
  2324 | 00000EC3 | EB1C                      | 	jmp	L_yakc_84
  2325 |          |                           | L_yakc_83:
  2326 |          |                           | 	; >>>>> Line:	289
  2327 |          |                           | 	; >>>>> } else if(q->nextRemove == q->nextEmpty){ 
  2328 | 00000EC5 | 8B7604                    | 	mov	si, word [bp+4]
  2329 | 00000EC8 | 83C606                    | 	add	si, 6
  2330 | 00000ECB | 8B7E04                    | 	mov	di, word [bp+4]
  2331 | 00000ECE | 83C704                    | 	add	di, 4
  2332 | 00000ED1 | 8B05                      | 	mov	ax, word [di]
  2333 | 00000ED3 | 3B04                      | 	cmp	ax, word [si]
  2334 | 00000ED5 | 750A                      | 	jne	L_yakc_85
  2335 |          |                           | 	; >>>>> Line:	290
  2336 |          |                           | 	; >>>>> q->state = 0; 
  2337 | 00000ED7 | 8B7604                    | 	mov	si, word [bp+4]
  2338 | 00000EDA | 83C608                    | 	add	si, 8
  2339 | 00000EDD | C7040000                  | 	mov	word [si], 0
  2340 |          |                           | L_yakc_85:
  2341 |          |                           | L_yakc_84:
  2342 |          |                           | 	; >>>>> Line:	292
  2343 |          |                           | 	; >>>>> YKExitMutex(); 
  2344 | 00000EE1 | E8C0FA                    | 	call	YKExitMutex
  2345 |          |                           | 	; >>>>> Line:	293
  2346 |          |                           | 	; >>>>> return t; 
  2347 | 00000EE4 | 8B46FE                    | 	mov	ax, word [bp-2]
  2348 |          |                           | L_yakc_86:
  2349 | 00000EE7 | 89EC                      | 	mov	sp, bp
  2350 | 00000EE9 | 5D                        | 	pop	bp
  2351 | 00000EEA | C3                        | 	ret
  2352 |          |                           | L_yakc_79:
  2353 | 00000EEB | 55                        | 	push	bp
  2354 | 00000EEC | 89E5                      | 	mov	bp, sp
  2355 | 00000EEE | 51                        | 	push	cx
  2356 | 00000EEF | E953FF                    | 	jmp	L_yakc_80
  2357 |          |                           | 	ALIGN	2
  2358 |          |                           | YKQPost:
  2359 |          |                           | 	; >>>>> Line:	296
  2360 |          |                           | 	; >>>>> int YKQPost(YKQ* q, void* msg){ 
  2361 | 00000EF2 | E9E900                    | 	jmp	L_yakc_88
  2362 |          |                           | L_yakc_89:
  2363 |          |                           | 	; >>>>> Line:	298
  2364 |          |                           | 	; >>>>> YKEnterMutex(); 
  2365 | 00000EF5 | E8AAFA                    | 	call	YKEnterMutex
  2366 |          |                           | 	; >>>>> Line:	300
  2367 |          |                           | 	; >>>>> if(q->state == 
  2368 | 00000EF8 | 8B7604                    | 	mov	si, word [bp+4]
  2369 | 00000EFB | 83C608                    | 	add	si, 8
  2370 | 00000EFE | 833C01                    | 	cmp	word [si], 1
  2371 | 00000F01 | 7508                      | 	jne	L_yakc_90
  2372 |          |                           | 	; >>>>> Line:	301
  2373 |          |                           | 	; >>>>> YKExitMutex(); 
  2374 | 00000F03 | E89EFA                    | 	call	YKExitMutex
  2375 |          |                           | 	; >>>>> Line:	302
  2376 |          |                           | 	; >>>>> return 0; 
  2377 | 00000F06 | 31C0                      | 	xor	ax, ax
  2378 | 00000F08 | E9CF00                    | 	jmp	L_yakc_91
  2379 |          |                           | L_yakc_90:
  2380 |          |                           | 	; >>>>> Line:	305
  2381 |          |                           | 	; >>>>> *(q->nextEmpty) = msg; 
  2382 | 00000F0B | 8B7604                    | 	mov	si, word [bp+4]
  2383 | 00000F0E | 83C604                    | 	add	si, 4
  2384 | 00000F11 | 8B34                      | 	mov	si, word [si]
  2385 | 00000F13 | 8B4606                    | 	mov	ax, word [bp+6]
  2386 | 00000F16 | 8904                      | 	mov	word [si], ax
  2387 |          |                           | 	; >>>>> Line:	306
  2388 |          |                           | 	; >>>>> q->nextEmpty++; 
  2389 | 00000F18 | 8B7604                    | 	mov	si, word [bp+4]
  2390 | 00000F1B | 83C604                    | 	add	si, 4
  2391 | 00000F1E | 830402                    | 	add	word [si], 2
  2392 |          |                           | 	; >>>>> Line:	308
  2393 |          |                           | 	; >>>>> if(q->nextEmpty == q->queueAddress + q->length){ 
  2394 | 00000F21 | 8B7604                    | 	mov	si, word [bp+4]
  2395 | 00000F24 | 83C602                    | 	add	si, 2
  2396 | 00000F27 | 8B04                      | 	mov	ax, word [si]
  2397 | 00000F29 | D1E0                      | 	shl	ax, 1
  2398 | 00000F2B | 8B7604                    | 	mov	si, word [bp+4]
  2399 | 00000F2E | 0304                      | 	add	ax, word [si]
  2400 | 00000F30 | 83C604                    | 	add	si, 4
  2401 | 00000F33 | 8B14                      | 	mov	dx, word [si]
  2402 | 00000F35 | 39C2                      | 	cmp	dx, ax
  2403 | 00000F37 | 750D                      | 	jne	L_yakc_92
  2404 |          |                           | 	; >>>>> Line:	309
  2405 |          |                           | 	; >>>>> q->nextEmpty = q->queueAddress; 
  2406 | 00000F39 | 8B7604                    | 	mov	si, word [bp+4]
  2407 | 00000F3C | 8B7E04                    | 	mov	di, word [bp+4]
  2408 | 00000F3F | 83C704                    | 	add	di, 4
  2409 | 00000F42 | 8B04                      | 	mov	ax, word [si]
  2410 | 00000F44 | 8905                      | 	mov	word [di], ax
  2411 |          |                           | L_yakc_92:
  2412 |          |                           | 	; >>>>> Line:	312
  2413 |          |                           | 	; >>>>> if(q->state == 0){ 
  2414 | 00000F46 | 8B7604                    | 	mov	si, word [bp+4]
  2415 | 00000F49 | 83C608                    | 	add	si, 8
  2416 | 00000F4C | 8B04                      | 	mov	ax, word [si]
  2417 | 00000F4E | 85C0                      | 	test	ax, ax
  2418 | 00000F50 | 750C                      | 	jne	L_yakc_93
  2419 |          |                           | 	; >>>>> Line:	313
  2420 |          |                           | 	; >>>>> q->state = 2; 
  2421 | 00000F52 | 8B7604                    | 	mov	si, word [bp+4]
  2422 | 00000F55 | 83C608                    | 	add	si, 8
  2423 | 00000F58 | C7040200                  | 	mov	word [si], 2
  2424 | 00000F5C | EB1C                      | 	jmp	L_yakc_94
  2425 |          |                           | L_yakc_93:
  2426 |          |                           | 	; >>>>> Line:	314
  2427 |          |                           | 	; >>>>> } else if(q->nextRemove == q->nextEmpty){ 
  2428 | 00000F5E | 8B7604                    | 	mov	si, word [bp+4]
  2429 | 00000F61 | 83C606                    | 	add	si, 6
  2430 | 00000F64 | 8B7E04                    | 	mov	di, word [bp+4]
  2431 | 00000F67 | 83C704                    | 	add	di, 4
  2432 | 00000F6A | 8B05                      | 	mov	ax, word [di]
  2433 | 00000F6C | 3B04                      | 	cmp	ax, word [si]
  2434 | 00000F6E | 750A                      | 	jne	L_yakc_95
  2435 |          |                           | 	; >>>>> Line:	315
  2436 |          |                           | 	; >>>>> q->state = 1; 
  2437 | 00000F70 | 8B7604                    | 	mov	si, word [bp+4]
  2438 | 00000F73 | 83C608                    | 	add	si, 8
  2439 | 00000F76 | C7040100                  | 	mov	word [si], 1
  2440 |          |                           | L_yakc_95:
  2441 |          |                           | L_yakc_94:
  2442 |          |                           | 	; >>>>> Line:	317
  2443 |          |                           | 	; >>>>> browser = readyRoot; 
  2444 | 00000F7A | A1[8C13]                  | 	mov	ax, word [readyRoot]
  2445 | 00000F7D | 8946FE                    | 	mov	word [bp-2], ax
  2446 |          |                           | 	; >>>>> Line:	319
  2447 |          |                           | 	; >>>>> while(browser){ 
  2448 | 00000F80 | EB3B                      | 	jmp	L_yakc_97
  2449 |          |                           | L_yakc_96:
  2450 |          |                           | 	; >>>>> Line:	320
  2451 |          |                           | 	; >>>>> if(browser->state == 3){ 
  2452 | 00000F82 | 8B76FE                    | 	mov	si, word [bp-2]
  2453 | 00000F85 | 83C602                    | 	add	si, 2
  2454 | 00000F88 | 803C03                    | 	cmp	byte [si], 3
  2455 | 00000F8B | 7522                      | 	jne	L_yakc_99
  2456 |          |                           | 	; >>>>> Line:	321
  2457 |          |                           | 	; >>>>> if(browser->qBlock == q){ 
  2458 | 00000F8D | 8B76FE                    | 	mov	si, word [bp-2]
  2459 | 00000F90 | 83C60A                    | 	add	si, 10
  2460 | 00000F93 | 8B4604                    | 	mov	ax, word [bp+4]
  2461 | 00000F96 | 3B04                      | 	cmp	ax, word [si]
  2462 | 00000F98 | 7515                      | 	jne	L_yakc_100
  2463 |          |                           | 	; >>>>> Line:	322
  2464 |          |                           | 	; >>>>> browser->state = 1; 
  2465 | 00000F9A | 8B76FE                    | 	mov	si, word [bp-2]
  2466 | 00000F9D | 83C602                    | 	add	si, 2
  2467 | 00000FA0 | C60401                    | 	mov	byte [si], 1
  2468 |          |                           | 	; >>>>> Line:	323
  2469 |          |                           | 	; >>>>> browser->qBlock = 0; 
  2470 | 00000FA3 | 8B76FE                    | 	mov	si, word [bp-2]
  2471 | 00000FA6 | 83C60A                    | 	add	si, 10
  2472 | 00000FA9 | C7040000                  | 	mov	word [si], 0
  2473 |          |                           | 	; >>>>> Line:	324
  2474 |          |                           | 	; >>>>> f( 
  2475 | 00000FAD | EB15                      | 	jmp	L_yakc_98
  2476 |          |                           | L_yakc_100:
  2477 |          |                           | L_yakc_99:
  2478 |          |                           | 	; >>>>> Line:	327
  2479 |          |                           | 	; >>>>> browser = browser->next; 
  2480 | 00000FAF | 8B76FE                    | 	mov	si, word [bp-2]
  2481 | 00000FB2 | 83C604                    | 	add	si, 4
  2482 | 00000FB5 | 8B04                      | 	mov	ax, word [si]
  2483 | 00000FB7 | 8946FE                    | 	mov	word [bp-2], ax
  2484 |          |                           | 	; >>>>> Line:	328
  2485 |          |                           | 	; >>>>> YKExitMutex(); 
  2486 | 00000FBA | E8E7F9                    | 	call	YKExitMutex
  2487 |          |                           | L_yakc_97:
  2488 | 00000FBD | 8B46FE                    | 	mov	ax, word [bp-2]
  2489 | 00000FC0 | 85C0                      | 	test	ax, ax
  2490 | 00000FC2 | 75BE                      | 	jne	L_yakc_96
  2491 |          |                           | L_yakc_98:
  2492 |          |                           | 	; >>>>> Line:	331
  2493 |          |                           | 	; >>>>> if(YKISRCallDepth == 0){ 
  2494 | 00000FC4 | A1[E009]                  | 	mov	ax, word [YKISRCallDepth]
  2495 | 00000FC7 | 85C0                      | 	test	ax, ax
  2496 | 00000FC9 | 7509                      | 	jne	L_yakc_101
  2497 |          |                           | 	; >>>>> Line:	332
  2498 |          |                           | 	; >>>>> YKScheduler(1); 
  2499 | 00000FCB | B001                      | 	mov	al, 1
  2500 | 00000FCD | 50                        | 	push	ax
  2501 | 00000FCE | E8D9FB                    | 	call	YKScheduler
  2502 | 00000FD1 | 83C402                    | 	add	sp, 2
  2503 |          |                           | L_yakc_101:
  2504 |          |                           | 	; >>>>> Line:	335
  2505 |          |                           | 	; >>>>> YKExitMutex(); 
  2506 | 00000FD4 | E8CDF9                    | 	call	YKExitMutex
  2507 |          |                           | 	; >>>>> Line:	336
  2508 |          |                           | 	; >>>>> return 1; 
  2509 | 00000FD7 | B80100                    | 	mov	ax, 1
  2510 |          |                           | L_yakc_91:
  2511 | 00000FDA | 89EC                      | 	mov	sp, bp
  2512 | 00000FDC | 5D                        | 	pop	bp
  2513 | 00000FDD | C3                        | 	ret
  2514 |          |                           | L_yakc_88:
  2515 | 00000FDE | 55                        | 	push	bp
  2516 | 00000FDF | 89E5                      | 	mov	bp, sp
  2517 | 00000FE1 | 51                        | 	push	cx
  2518 | 00000FE2 | E910FF                    | 	jmp	L_yakc_89
  2519 | 00000FE5 | 90                        | 	ALIGN	2
  2520 |          |                           | YKEventCreate:
  2521 |          |                           | 	; >>>>> Line:	348
  2522 |          |                           | 	; >>>>> YKEVENT *YKEventCreate(unsigned initialValue) { 
  2523 | 00000FE6 | EB21                      | 	jmp	L_yakc_103
  2524 |          |                           | L_yakc_104:
  2525 |          |                           | 	; >>>>> Line:	349
  2526 |          |                           | 	; >>>>> YKEvents[eventIndex].flag = initialValue; 
  2527 | 00000FE8 | A1[F009]                  | 	mov	ax, word [eventIndex]
  2528 | 00000FEB | D1E0                      | 	shl	ax, 1
  2529 | 00000FED | 89C6                      | 	mov	si, ax
  2530 | 00000FEF | 81C6[2813]                | 	add	si, YKEvents
  2531 | 00000FF3 | 8B4604                    | 	mov	ax, word [bp+4]
  2532 | 00000FF6 | 8904                      | 	mov	word [si], ax
  2533 |          |                           | 	; >>>>> Line:	350
  2534 |          |                           | 	; >>>>> eventIndex++; 
  2535 | 00000FF8 | FF06[F009]                | 	inc	word [eventIndex]
  2536 |          |                           | 	; >>>>> Line:	352
  2537 |          |                           | 	; >>>>> return &YKEvents[eventIndex-1]; 
  2538 | 00000FFC | A1[F009]                  | 	mov	ax, word [eventIndex]
  2539 | 00000FFF | 48                        | 	dec	ax
  2540 | 00001000 | D1E0                      | 	shl	ax, 1
  2541 | 00001002 | 05[2813]                  | 	add	ax, YKEvents
  2542 |          |                           | L_yakc_105:
  2543 | 00001005 | 89EC                      | 	mov	sp, bp
  2544 | 00001007 | 5D                        | 	pop	bp
  2545 | 00001008 | C3                        | 	ret
  2546 |          |                           | L_yakc_103:
  2547 | 00001009 | 55                        | 	push	bp
  2548 | 0000100A | 89E5                      | 	mov	bp, sp
  2549 | 0000100C | EBDA                      | 	jmp	L_yakc_104
  2550 |          |                           | 	ALIGN	2
  2551 |          |                           | YKEventPend:
  2552 |          |                           | 	; >>>>> Line:	367
  2553 |          |                           | 	; >>>>> unsigned YKEventPend(YKEVENT *event, unsigned eventMask, int waitMode) { 
  2554 | 0000100E | EB70                      | 	jmp	L_yakc_107
  2555 |          |                           | L_yakc_108:
  2556 |          |                           | 	; >>>>> Line:	368
  2557 |          |                           | 	; >>>>> YKEnterMutex(); 
  2558 | 00001010 | E88FF9                    | 	call	YKEnterMutex
  2559 |          |                           | 	; >>>>> Line:	370
  2560 |          |                           | 	; >>>>> if(waitMode == 2){ 
  2561 | 00001013 | 837E0802                  | 	cmp	word [bp+8], 2
  2562 | 00001017 | 7510                      | 	jne	L_yakc_109
  2563 |          |                           | 	; >>>>> Line:	371
  2564 |          |                           | 	; >>>>> if( 
  2565 | 00001019 | 8B7604                    | 	mov	si, word [bp+4]
  2566 | 0000101C | 8B4606                    | 	mov	ax, word [bp+6]
  2567 | 0000101F | 3B04                      | 	cmp	ax, word [si]
  2568 | 00001021 | 7504                      | 	jne	L_yakc_110
  2569 |          |                           | 	; >>>>> Line:	372
  2570 |          |                           | 	; >>>>> return event->flag; 
  2571 | 00001023 | 8B04                      | 	mov	ax, word [si]
  2572 | 00001025 | EB55                      | 	jmp	L_yakc_111
  2573 |          |                           | L_yakc_110:
  2574 | 00001027 | EB14                      | 	jmp	L_yakc_112
  2575 |          |                           | L_yakc_109:
  2576 |          |                           | 	; >>>>> Line:	375
  2577 |          |                           | 	; >>>>> else if(waitMode == 1){ 
  2578 | 00001029 | 837E0801                  | 	cmp	word [bp+8], 1
  2579 | 0000102D | 750E                      | 	jne	L_yakc_113
  2580 |          |                           | 	; >>>>> Line:	376
  2581 |          |                           | 	; >>>>> if(event->flag & eventMask){ 
  2582 | 0000102F | 8B7604                    | 	mov	si, word [bp+4]
  2583 | 00001032 | 8B04                      | 	mov	ax, word [si]
  2584 | 00001034 | 234606                    | 	and	ax, word [bp+6]
  2585 | 00001037 | 7404                      | 	je	L_yakc_114
  2586 |          |                           | 	; >>>>> Line:	377
  2587 |          |                           | 	; >>>>> return event->flag; 
  2588 | 00001039 | 8B04                      | 	mov	ax, word [si]
  2589 | 0000103B | EB3F                      | 	jmp	L_yakc_111
  2590 |          |                           | L_yakc_114:
  2591 |          |                           | L_yakc_113:
  2592 |          |                           | L_yakc_112:
  2593 |          |                           | 	; >>>>> Line:	381
  2594 |          |                           | 	; >>>>> currentTask->event = event; 
  2595 | 0000103D | 8B36[E409]                | 	mov	si, word [currentTask]
  2596 | 00001041 | 83C60C                    | 	add	si, 12
  2597 | 00001044 | 8B4604                    | 	mov	ax, word [bp+4]
  2598 | 00001047 | 8904                      | 	mov	word [si], ax
  2599 |          |                           | 	; >>>>> Line:	382
  2600 |          |                           | 	; >>>>> currentTask->mask = eventMask; 
  2601 | 00001049 | 8B36[E409]                | 	mov	si, word [currentTask]
  2602 | 0000104D | 83C610                    | 	add	si, 16
  2603 | 00001050 | 8B4606                    | 	mov	ax, word [bp+6]
  2604 | 00001053 | 8904                      | 	mov	word [si], ax
  2605 |          |                           | 	; >>>>> Line:	383
  2606 |          |                           | 	; >>>>> currentTask->mode = waitMode; 
  2607 | 00001055 | 8B36[E409]                | 	mov	si, word [currentTask]
  2608 | 00001059 | 83C60E                    | 	add	si, 14
  2609 | 0000105C | 8B4608                    | 	mov	ax, word [bp+8]
  2610 | 0000105F | 8904                      | 	mov	word [si], ax
  2611 |          |                           | 	; >>>>> Line:	384
  2612 |          |                           | 	; >>>>> currentTask->state = 5; 
  2613 | 00001061 | 8B36[E409]                | 	mov	si, word [currentTask]
  2614 | 00001065 | 83C602                    | 	add	si, 2
  2615 | 00001068 | C60405                    | 	mov	byte [si], 5
  2616 |          |                           | 	; >>>>> Line:	386
  2617 |          |                           | 	; >>>>> YKScheduler(1); 
  2618 | 0000106B | B001                      | 	mov	al, 1
  2619 | 0000106D | 50                        | 	push	ax
  2620 | 0000106E | E839FB                    | 	call	YKScheduler
  2621 | 00001071 | 83C402                    | 	add	sp, 2
  2622 |          |                           | 	; >>>>> Line:	388
  2623 |          |                           | 	; >>>>> YKExitMutex(); 
  2624 | 00001074 | E82DF9                    | 	call	YKExitMutex
  2625 |          |                           | 	; >>>>> Line:	389
  2626 |          |                           | 	; >>>>> return event->flag; 
  2627 | 00001077 | 8B7604                    | 	mov	si, word [bp+4]
  2628 | 0000107A | 8B04                      | 	mov	ax, word [si]
  2629 |          |                           | L_yakc_111:
  2630 | 0000107C | 89EC                      | 	mov	sp, bp
  2631 | 0000107E | 5D                        | 	pop	bp
  2632 | 0000107F | C3                        | 	ret
  2633 |          |                           | L_yakc_107:
  2634 | 00001080 | 55                        | 	push	bp
  2635 | 00001081 | 89E5                      | 	mov	bp, sp
  2636 | 00001083 | EB8B                      | 	jmp	L_yakc_108
  2637 |          |                           | L_yakc_117:
  2638 | 00001085 | 414E5900                  | 	DB	"ANY",0
  2639 |          |                           | L_yakc_116:
  2640 | 00001089 | 414C4C00                  | 	DB	"ALL",0
  2641 | 0000108D | 90                        | 	ALIGN	2
  2642 |          |                           | YKEventSet:
  2643 |          |                           | 	; >>>>> Line:	399
  2644 |          |                           | 	; >>>>> void YKEventSet(YKEVENT *event, unsigned eventMask) { 
  2645 | 0000108E | E9FB00                    | 	jmp	L_yakc_118
  2646 |          |                           | L_yakc_119:
  2647 |          |                           | 	; >>>>> Line:	401
  2648 |          |                           | 	; >>>>> event->flag = event->flag |  
  2649 | 00001091 | 8B7604                    | 	mov	si, word [bp+4]
  2650 | 00001094 | 8B04                      | 	mov	ax, word [si]
  2651 | 00001096 | 0B4606                    | 	or	ax, word [bp+6]
  2652 | 00001099 | 8904                      | 	mov	word [si], ax
  2653 |          |                           | 	; >>>>> Line:	403
  2654 |          |                           | 	; >>>>> YKEnterMutex(); 
  2655 | 0000109B | E804F9                    | 	call	YKEnterMutex
  2656 |          |                           | 	; >>>>> Line:	405
  2657 |          |                           | 	; >>>>> browser = readyRoot; 
  2658 | 0000109E | A1[8C13]                  | 	mov	ax, word [readyRoot]
  2659 | 000010A1 | 8946FE                    | 	mov	word [bp-2], ax
  2660 |          |                           | 	; >>>>> Line:	406
  2661 |          |                           | 	; >>>>> while(browser){ 
  2662 | 000010A4 | E9C400                    | 	jmp	L_yakc_121
  2663 |          |                           | L_yakc_120:
  2664 |          |                           | 	; >>>>> Line:	407
  2665 |          |                           | 	; >>>>> if ((browser->state == 5) && (browser->event == event)) { 
  2666 | 000010A7 | 8B76FE                    | 	mov	si, word [bp-2]
  2667 | 000010AA | 83C602                    | 	add	si, 2
  2668 | 000010AD | 803C05                    | 	cmp	byte [si], 5
  2669 | 000010B0 | 7403E9A800                | 	jne	L_yakc_123
  2670 | 000010B5 | 8B76FE                    | 	mov	si, word [bp-2]
  2671 | 000010B8 | 83C60C                    | 	add	si, 12
  2672 | 000010BB | 8B4604                    | 	mov	ax, word [bp+4]
  2673 | 000010BE | 3B04                      | 	cmp	ax, word [si]
  2674 | 000010C0 | 7403E99800                | 	jne	L_yakc_123
  2675 |          |                           | 	; >>>>> Line:	408
  2676 |          |                           | 	; >>>>> if(browser->mode == 2){ 
  2677 | 000010C5 | 8B76FE                    | 	mov	si, word [bp-2]
  2678 | 000010C8 | 83C60E                    | 	add	si, 14
  2679 | 000010CB | 833C02                    | 	cmp	word [si], 2
  2680 | 000010CE | 7542                      | 	jne	L_yakc_124
  2681 |          |                           | 	; >>>>> Line:	409
  2682 |          |                           | 	; >>>>> if(event->flag == browser->mask){ 
  2683 | 000010D0 | 8B76FE                    | 	mov	si, word [bp-2]
  2684 | 000010D3 | 83C610                    | 	add	si, 16
  2685 | 000010D6 | 8B7E04                    | 	mov	di, word [bp+4]
  2686 | 000010D9 | 8B05                      | 	mov	ax, word [di]
  2687 | 000010DB | 3B04                      | 	cmp	ax, word [si]
  2688 | 000010DD | 7531                      | 	jne	L_yakc_125
  2689 |          |                           | 	; >>>>> Line:	410
  2690 |          |                           | 	; >>>>> printString("ALL"); 
  2691 | 000010DF | B8[8910]                  | 	mov	ax, L_yakc_116
  2692 | 000010E2 | 50                        | 	push	ax
  2693 | 000010E3 | E842F3                    | 	call	printString
  2694 | 000010E6 | 83C402                    | 	add	sp, 2
  2695 |          |                           | 	; >>>>> Line:	411
  2696 |          |                           | 	; >>>>> browser->state = 1; 
  2697 | 000010E9 | 8B76FE                    | 	mov	si, word [bp-2]
  2698 | 000010EC | 83C602                    | 	add	si, 2
  2699 | 000010EF | C60401                    | 	mov	byte [si], 1
  2700 |          |                           | 	; >>>>> Line:	412
  2701 |          |                           | 	; >>>>> browser->event = 0; 
  2702 | 000010F2 | 8B76FE                    | 	mov	si, word [bp-2]
  2703 | 000010F5 | 83C60C                    | 	add	si, 12
  2704 | 000010F8 | C7040000                  | 	mov	word [si], 0
  2705 |          |                           | 	; >>>>> Line:	413
  2706 |          |                           | 	; >>>>> browser->mask = 0; 
  2707 | 000010FC | 8B76FE                    | 	mov	si, word [bp-2]
  2708 | 000010FF | 83C610                    | 	add	si, 16
  2709 | 00001102 | C7040000                  | 	mov	word [si], 0
  2710 |          |                           | 	; >>>>> Line:	414
  2711 |          |                           | 	; >>>>> browser->mode = 0; 
  2712 | 00001106 | 8B76FE                    | 	mov	si, word [bp-2]
  2713 | 00001109 | 83C60E                    | 	add	si, 14
  2714 | 0000110C | C7040000                  | 	mov	word [si], 0
  2715 |          |                           | L_yakc_125:
  2716 | 00001110 | EB4B                      | 	jmp	L_yakc_126
  2717 |          |                           | L_yakc_124:
  2718 |          |                           | 	; >>>>> Line:	417
  2719 |          |                           | 	; >>>>> else if(browser->mode == 1){ 
  2720 | 00001112 | 8B76FE                    | 	mov	si, word [bp-2]
  2721 | 00001115 | 83C60E                    | 	add	si, 14
  2722 | 00001118 | 833C01                    | 	cmp	word [si], 1
  2723 | 0000111B | 7540                      | 	jne	L_yakc_127
  2724 |          |                           | 	; >>>>> Line:	418
  2725 |          |                           | 	; >>>>> nt->flag &  
  2726 | 0000111D | 8B76FE                    | 	mov	si, word [bp-2]
  2727 | 00001120 | 83C610                    | 	add	si, 16
  2728 | 00001123 | 8B04                      | 	mov	ax, word [si]
  2729 | 00001125 | 8B7604                    | 	mov	si, word [bp+4]
  2730 | 00001128 | 2304                      | 	and	ax, word [si]
  2731 | 0000112A | 7431                      | 	je	L_yakc_128
  2732 |          |                           | 	; >>>>> Line:	419
  2733 |          |                           | 	; >>>>> printString("ANY"); 
  2734 | 0000112C | B8[8510]                  | 	mov	ax, L_yakc_117
  2735 | 0000112F | 50                        | 	push	ax
  2736 | 00001130 | E8F5F2                    | 	call	printString
  2737 | 00001133 | 83C402                    | 	add	sp, 2
  2738 |          |                           | 	; >>>>> Line:	420
  2739 |          |                           | 	; >>>>> browser->state = 1; 
  2740 | 00001136 | 8B76FE                    | 	mov	si, word [bp-2]
  2741 | 00001139 | 83C602                    | 	add	si, 2
  2742 | 0000113C | C60401                    | 	mov	byte [si], 1
  2743 |          |                           | 	; >>>>> Line:	421
  2744 |          |                           | 	; >>>>> browser->event = 0; 
  2745 | 0000113F | 8B76FE                    | 	mov	si, word [bp-2]
  2746 | 00001142 | 83C60C                    | 	add	si, 12
  2747 | 00001145 | C7040000                  | 	mov	word [si], 0
  2748 |          |                           | 	; >>>>> Line:	422
  2749 |          |                           | 	; >>>>> browser->mask = 0; 
  2750 | 00001149 | 8B76FE                    | 	mov	si, word [bp-2]
  2751 | 0000114C | 83C610                    | 	add	si, 16
  2752 | 0000114F | C7040000                  | 	mov	word [si], 0
  2753 |          |                           | 	; >>>>> Line:	423
  2754 |          |                           | 	; >>>>> browser->mode = 0; 
  2755 | 00001153 | 8B76FE                    | 	mov	si, word [bp-2]
  2756 | 00001156 | 83C60E                    | 	add	si, 14
  2757 | 00001159 | C7040000                  | 	mov	word [si], 0
  2758 |          |                           | L_yakc_128:
  2759 |          |                           | L_yakc_127:
  2760 |          |                           | L_yakc_126:
  2761 |          |                           | L_yakc_123:
  2762 |          |                           | 	; >>>>> Line:	428
  2763 |          |                           | 	; >>>>> browser = browser->next; 
  2764 | 0000115D | 8B76FE                    | 	mov	si, word [bp-2]
  2765 | 00001160 | 83C604                    | 	add	si, 4
  2766 | 00001163 | 8B04                      | 	mov	ax, word [si]
  2767 | 00001165 | 8946FE                    | 	mov	word [bp-2], ax
  2768 |          |                           | 	; >>>>> Line:	429
  2769 |          |                           | 	; >>>>> YKExitMutex(); 
  2770 | 00001168 | E839F8                    | 	call	YKExitMutex
  2771 |          |                           | L_yakc_121:
  2772 | 0000116B | 8B46FE                    | 	mov	ax, word [bp-2]
  2773 | 0000116E | 85C0                      | 	test	ax, ax
  2774 | 00001170 | 7403E932FF                | 	jne	L_yakc_120
  2775 |          |                           | L_yakc_122:
  2776 |          |                           | 	; >>>>> Line:	432
  2777 |          |                           | 	; >>>>> if(YKISRCallDepth == 0){ 
  2778 | 00001175 | A1[E009]                  | 	mov	ax, word [YKISRCallDepth]
  2779 | 00001178 | 85C0                      | 	test	ax, ax
  2780 | 0000117A | 7509                      | 	jne	L_yakc_129
  2781 |          |                           | 	; >>>>> Line:	433
  2782 |          |                           | 	; >>>>> YKScheduler(1); 
  2783 | 0000117C | B001                      | 	mov	al, 1
  2784 | 0000117E | 50                        | 	push	ax
  2785 | 0000117F | E828FA                    | 	call	YKScheduler
  2786 | 00001182 | 83C402                    | 	add	sp, 2
  2787 |          |                           | L_yakc_129:
  2788 |          |                           | 	; >>>>> Line:	436
  2789 |          |                           | 	; >>>>> YKExitMutex(); 
  2790 | 00001185 | E81CF8                    | 	call	YKExitMutex
  2791 | 00001188 | 89EC                      | 	mov	sp, bp
  2792 | 0000118A | 5D                        | 	pop	bp
  2793 | 0000118B | C3                        | 	ret
  2794 |          |                           | L_yakc_118:
  2795 | 0000118C | 55                        | 	push	bp
  2796 | 0000118D | 89E5                      | 	mov	bp, sp
  2797 | 0000118F | 51                        | 	push	cx
  2798 | 00001190 | E9FEFE                    | 	jmp	L_yakc_119
  2799 | 00001193 | 90                        | 	ALIGN	2
  2800 |          |                           | YKEventReset:
  2801 |          |                           | 	; >>>>> Line:	439
  2802 |          |                           | 	; >>>>> void YKEventReset(YKEVENT *event, unsigned eventMask) { 
  2803 | 00001194 | EB10                      | 	jmp	L_yakc_131
  2804 |          |                           | L_yakc_132:
  2805 |          |                           | 	; >>>>> Line:	440
  2806 |          |                           | 	; >>>>> event->flag = event->flag &  
  2807 | 00001196 | 8B4606                    | 	mov	ax, word [bp+6]
  2808 | 00001199 | F7D0                      | 	not	ax
  2809 | 0000119B | 8B7604                    | 	mov	si, word [bp+4]
  2810 | 0000119E | 2304                      | 	and	ax, word [si]
  2811 | 000011A0 | 8904                      | 	mov	word [si], ax
  2812 | 000011A2 | 89EC                      | 	mov	sp, bp
  2813 | 000011A4 | 5D                        | 	pop	bp
  2814 | 000011A5 | C3                        | 	ret
  2815 |          |                           | L_yakc_131:
  2816 | 000011A6 | 55                        | 	push	bp
  2817 | 000011A7 | 89E5                      | 	mov	bp, sp
  2818 | 000011A9 | EBEB                      | 	jmp	L_yakc_132
  2819 | 000011AB | 90                        | 	ALIGN	2
  2820 |          |                           | YKTCBs:
  2821 | 000011AC | 00<rept>                  | 	TIMES	180 db 0
  2822 |          |                           | YKSEMS:
  2823 | 00001260 | 00<rept>                  | 	TIMES	100 db 0
  2824 |          |                           | YKQS:
  2825 | 000012C4 | 00<rept>                  | 	TIMES	100 db 0
  2826 |          |                           | YKEvents:
  2827 | 00001328 | 00<rept>                  | 	TIMES	100 db 0
  2828 |          |                           | readyRoot:
  2829 | 0000138C | 00<rept>                  | 	TIMES	2 db 0
  2830 |          |                           | taskToRun:
  2831 | 0000138E | 00<rept>                  | 	TIMES	2 db 0
  2832 |          |                           | YKIdleTasks:
  2833 | 00001390 | 00<rept>                  | 	TIMES	512 db 0
  2834 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from simptrisApp.i
  2835 |          |                           | 	CPU	8086
  2836 |          |                           | 	ALIGN	2
  2837 | 00001590 | E9E900                    | 	jmp	main	; Jump to program start
  2838 | 00001593 | 90                        | 	ALIGN	2
  2839 |          |                           | seed:
  2840 | 00001594 | 34920000                  | 	DD	37428
  2841 |          |                           | 	ALIGN	2
  2842 |          |                           | STask:
  2843 |          |                           | 	; >>>>> Line:	12
  2844 |          |                           | 	; >>>>> void STask() { 
  2845 | 00001598 | EB12                      | 	jmp	L_simptrisApp_1
  2846 |          |                           | L_simptrisApp_2:
  2847 |          |                           | 	; >>>>> Line:	13
  2848 |          |                           | 	; >>>>> while(1) { 
  2849 | 0000159A | EB0A                      | 	jmp	L_simptrisApp_4
  2850 |          |                           | L_simptrisApp_3:
  2851 |          |                           | 	; >>>>> Line:	14
  2852 |          |                           | 	; >>>>>  
  2853 | 0000159C | B80500                    | 	mov	ax, 5
  2854 | 0000159F | 50                        | 	push	ax
  2855 | 000015A0 | E87FF6                    | 	call	YKDelayTask
  2856 | 000015A3 | 83C402                    | 	add	sp, 2
  2857 |          |                           | L_simptrisApp_4:
  2858 | 000015A6 | EBF4                      | 	jmp	L_simptrisApp_3
  2859 |          |                           | L_simptrisApp_5:
  2860 | 000015A8 | 89EC                      | 	mov	sp, bp
  2861 | 000015AA | 5D                        | 	pop	bp
  2862 | 000015AB | C3                        | 	ret
  2863 |          |                           | L_simptrisApp_1:
  2864 | 000015AC | 55                        | 	push	bp
  2865 | 000015AD | 89E5                      | 	mov	bp, sp
  2866 | 000015AF | EBE9                      | 	jmp	L_simptrisApp_2
  2867 |          |                           | L_simptrisApp_9:
  2868 | 000015B1 | 3E0D0A00                  | 	DB	">",0xD,0xA,0
  2869 |          |                           | L_simptrisApp_8:
  2870 | 000015B5 | 2C204350553A2000          | 	DB	", CPU: ",0
  2871 |          |                           | L_simptrisApp_7:
  2872 | 000015BD | 3C43533A2000              | 	DB	"<CS: ",0
  2873 | 000015C3 | 90                        | 	ALIGN	2
  2874 |          |                           | TaskStat:
  2875 |          |                           | 	; >>>>> Line:	20
  2876 |          |                           | 	; >>>>> { 
  2877 | 000015C4 | E9AB00                    | 	jmp	L_simptrisApp_10
  2878 |          |                           | L_simptrisApp_11:
  2879 |          |                           | 	; >>>>> Line:	24
  2880 |          |                           | 	; >>>>> YKDelayTask(1); 
  2881 | 000015C7 | B80100                    | 	mov	ax, 1
  2882 | 000015CA | 50                        | 	push	ax
  2883 | 000015CB | E854F6                    | 	call	YKDelayTask
  2884 | 000015CE | 83C402                    | 	add	sp, 2
  2885 |          |                           | 	; >>>>> Line:	27
  2886 |          |                           | 	; >>>>> YKDelayTask(1); 
  2887 | 000015D1 | B80100                    | 	mov	ax, 1
  2888 | 000015D4 | 50                        | 	push	ax
  2889 | 000015D5 | E84AF6                    | 	call	YKDelayTask
  2890 | 000015D8 | 83C402                    | 	add	sp, 2
  2891 |          |                           | 	; >>>>> Line:	28
  2892 |          |                           | 	; >>>>> YKIdleCount = 0; 
  2893 | 000015DB | C706[DE09]0000            | 	mov	word [YKIdleCount], 0
  2894 |          |                           | 	; >>>>> Line:	29
  2895 |          |                           | 	; >>>>> YKDelayTask(5); 
  2896 | 000015E1 | B80500                    | 	mov	ax, 5
  2897 | 000015E4 | 50                        | 	push	ax
  2898 | 000015E5 | E83AF6                    | 	call	YKDelayTask
  2899 | 000015E8 | 83C402                    | 	add	sp, 2
  2900 |          |                           | 	; >>>>> Line:	30
  2901 |          |                           | 	; >>>>> max = YKIdleCount / 25; 
  2902 | 000015EB | A1[DE09]                  | 	mov	ax, word [YKIdleCount]
  2903 | 000015EE | 99                        | 	cwd
  2904 | 000015EF | B91900                    | 	mov	cx, 25
  2905 | 000015F2 | F7F9                      | 	idiv	cx
  2906 | 000015F4 | 8946FE                    | 	mov	word [bp-2], ax
  2907 |          |                           | 	; >>>>> Line:	31
  2908 |          |                           | 	; >>>>> YKIdleCount = 0; 
  2909 | 000015F7 | C706[DE09]0000            | 	mov	word [YKIdleCount], 0
  2910 |          |                           | 	; >>>>> Line:	38
  2911 |          |                           | 	; >>>>> while (1) 
  2912 | 000015FD | EB6D                      | 	jmp	L_simptrisApp_13
  2913 |          |                           | L_simptrisApp_12:
  2914 |          |                           | 	; >>>>> Line:	40
  2915 |          |                           | 	; >>>>> YKDelayTask(5); 
  2916 | 000015FF | B80500                    | 	mov	ax, 5
  2917 | 00001602 | 50                        | 	push	ax
  2918 | 00001603 | E81CF6                    | 	call	YKDelayTask
  2919 | 00001606 | 83C402                    | 	add	sp, 2
  2920 |          |                           | 	; >>>>> Line:	42
  2921 |          |                           | 	; >>>>> YKEnterMutex(); 
  2922 | 00001609 | E896F3                    | 	call	YKEnterMutex
  2923 |          |                           | 	; >>>>> Line:	43
  2924 |          |                           | 	; >>>>> switchCount = YKCtxSwCount; 
  2925 | 0000160C | A1[DC09]                  | 	mov	ax, word [YKCtxSwCount]
  2926 | 0000160F | 8946FC                    | 	mov	word [bp-4], ax
  2927 |          |                           | 	; >>>>> Line:	44
  2928 |          |                           | 	; >>>>> idleCount = YKIdleCount; 
  2929 | 00001612 | A1[DE09]                  | 	mov	ax, word [YKIdleCount]
  2930 | 00001615 | 8946FA                    | 	mov	word [bp-6], ax
  2931 |          |                           | 	; >>>>> Line:	45
  2932 |          |                           | 	; >>>>> YKExitMutex(); 
  2933 | 00001618 | E889F3                    | 	call	YKExitMutex
  2934 |          |                           | 	; >>>>> Line:	47
  2935 |          |                           | 	; >>>>> printString ("<CS: "); 
  2936 | 0000161B | B8[BD15]                  | 	mov	ax, L_simptrisApp_7
  2937 | 0000161E | 50                        | 	push	ax
  2938 | 0000161F | E806EE                    | 	call	printString
  2939 | 00001622 | 83C402                    | 	add	sp, 2
  2940 |          |                           | 	; >>>>> Line:	48
  2941 |          |                           | 	; >>>>> printInt((int)switchCount); 
  2942 | 00001625 | FF76FC                    | 	push	word [bp-4]
  2943 | 00001628 | E821EE                    | 	call	printInt
  2944 | 0000162B | 83C402                    | 	add	sp, 2
  2945 |          |                           | 	; >>>>> Line:	49
  2946 |          |                           | 	; >>>>> printString (", CPU: "); 
  2947 | 0000162E | B8[B515]                  | 	mov	ax, L_simptrisApp_8
  2948 | 00001631 | 50                        | 	push	ax
  2949 | 00001632 | E8F3ED                    | 	call	printString
  2950 | 00001635 | 83C402                    | 	add	sp, 2
  2951 |          |                           | 	; >>>>> Line:	50
  2952 |          |                           | 	; >>>>>  
  2953 | 00001638 | 8B46FA                    | 	mov	ax, word [bp-6]
  2954 | 0000163B | 31D2                      | 	xor	dx, dx
  2955 | 0000163D | F776FE                    | 	div	word [bp-2]
  2956 | 00001640 | 8946F8                    | 	mov	word [bp-8], ax
  2957 |          |                           | 	; >>>>> Line:	51
  2958 |          |                           | 	; >>>>> printInt(100-tmp); 
  2959 | 00001643 | B86400                    | 	mov	ax, 100
  2960 | 00001646 | 2B46F8                    | 	sub	ax, word [bp-8]
  2961 | 00001649 | 50                        | 	push	ax
  2962 | 0000164A | E8FFED                    | 	call	printInt
  2963 | 0000164D | 83C402                    | 	add	sp, 2
  2964 |          |                           | 	; >>>>> Line:	52
  2965 |          |                           | 	; >>>>> printString(">\r\n"); 
  2966 | 00001650 | B8[B115]                  | 	mov	ax, L_simptrisApp_9
  2967 | 00001653 | 50                        | 	push	ax
  2968 | 00001654 | E8D1ED                    | 	call	printString
  2969 | 00001657 | 83C402                    | 	add	sp, 2
  2970 |          |                           | 	; >>>>> Line:	54
  2971 |          |                           | 	; >>>>> YKEnterMutex(); 
  2972 | 0000165A | E845F3                    | 	call	YKEnterMutex
  2973 |          |                           | 	; >>>>> Line:	55
  2974 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  2975 | 0000165D | C706[DC09]0000            | 	mov	word [YKCtxSwCount], 0
  2976 |          |                           | 	; >>>>> Line:	56
  2977 |          |                           | 	; >>>>> YKIdleCount = 0; 
  2978 | 00001663 | C706[DE09]0000            | 	mov	word [YKIdleCount], 0
  2979 |          |                           | 	; >>>>> Line:	57
  2980 |          |                           | 	; >>>>> YKExitMutex(); 
  2981 | 00001669 | E838F3                    | 	call	YKExitMutex
  2982 |          |                           | L_simptrisApp_13:
  2983 | 0000166C | EB91                      | 	jmp	L_simptrisApp_12
  2984 |          |                           | L_simptrisApp_14:
  2985 | 0000166E | 89EC                      | 	mov	sp, bp
  2986 | 00001670 | 5D                        | 	pop	bp
  2987 | 00001671 | C3                        | 	ret
  2988 |          |                           | L_simptrisApp_10:
  2989 | 00001672 | 55                        | 	push	bp
  2990 | 00001673 | 89E5                      | 	mov	bp, sp
  2991 | 00001675 | 83EC08                    | 	sub	sp, 8
  2992 | 00001678 | E94CFF                    | 	jmp	L_simptrisApp_11
  2993 | 0000167B | 90                        | 	ALIGN	2
  2994 |          |                           | main:
  2995 |          |                           | 	; >>>>> Line:	61
  2996 |          |                           | 	; >>>>> void main() { 
  2997 | 0000167C | EB3D                      | 	jmp	L_simptrisApp_16
  2998 |          |                           | L_simptrisApp_17:
  2999 |          |                           | 	; >>>>> Line:	62
  3000 |          |                           | 	; >>>>> YKInitialize(); 
  3001 | 0000167E | E871F3                    | 	call	YKInitialize
  3002 |          |                           | 	; >>>>> Line:	67
  3003 |          |                           | 	; >>>>> YKNewTask(STask, (void *) &STaskStk[512], 10); 
  3004 | 00001681 | B00A                      | 	mov	al, 10
  3005 | 00001683 | 50                        | 	push	ax
  3006 | 00001684 | B8[C01A]                  | 	mov	ax, (STaskStk+1024)
  3007 | 00001687 | 50                        | 	push	ax
  3008 | 00001688 | B8[9815]                  | 	mov	ax, STask
  3009 | 0000168B | 50                        | 	push	ax
  3010 | 0000168C | E89DF3                    | 	call	YKNewTask
  3011 | 0000168F | 83C406                    | 	add	sp, 6
  3012 |          |                           | 	; >>>>> Line:	69
  3013 |          |                           | 	; >>>>> StartSimptris(); 
  3014 | 00001692 | E86608                    | 	call	StartSimptris
  3015 |          |                           | 	; >>>>> Line:	70
  3016 |          |                           | 	; >>>>> SeedSimptris(seed); 
  3017 | 00001695 | FF36[9615]                | 	push	word [(seed+2)]
  3018 | 00001699 | FF36[9415]                | 	push	word [(seed+0)]
  3019 | 0000169D | E84608                    | 	call	SeedSimptris
  3020 | 000016A0 | 83C404                    | 	add	sp, 4
  3021 |          |                           | 	; >>>>> Line:	71
  3022 |          |                           | 	; >>>>> YKNewTask(TaskStat, (void *) &TaskStatStk[512], 30); 
  3023 | 000016A3 | B01E                      | 	mov	al, 30
  3024 | 000016A5 | 50                        | 	push	ax
  3025 | 000016A6 | B8[C01E]                  | 	mov	ax, (TaskStatStk+1024)
  3026 | 000016A9 | 50                        | 	push	ax
  3027 | 000016AA | B8[C415]                  | 	mov	ax, TaskStat
  3028 | 000016AD | 50                        | 	push	ax
  3029 | 000016AE | E87BF3                    | 	call	YKNewTask
  3030 | 000016B1 | 83C406                    | 	add	sp, 6
  3031 |          |                           | 	; >>>>> Line:	73
  3032 |          |                           | 	; >>>>> YKRun(); 
  3033 | 000016B4 | E851F5                    | 	call	YKRun
  3034 | 000016B7 | 89EC                      | 	mov	sp, bp
  3035 | 000016B9 | 5D                        | 	pop	bp
  3036 | 000016BA | C3                        | 	ret
  3037 |          |                           | L_simptrisApp_16:
  3038 | 000016BB | 55                        | 	push	bp
  3039 | 000016BC | 89E5                      | 	mov	bp, sp
  3040 | 000016BE | EBBE                      | 	jmp	L_simptrisApp_17
  3041 |          |                           | 	ALIGN	2
  3042 |          |                           | STaskStk:
  3043 | 000016C0 | 00<rept>                  | 	TIMES	1024 db 0
  3044 |          |                           | TaskStatStk:
  3045 | 00001AC0 | 00<rept>                  | 	TIMES	1024 db 0
  3046 |          |                           | 	align	2
  3047 |          |                           | SlidePiece:	; void SlidePiece(int ID, int direction)
  3048 | 00001EC0 | 55                        | 	push	bp
  3049 | 00001EC1 | 89E5                      | 	mov	bp, sp
  3050 | 00001EC3 | 50                        | 	push	ax
  3051 | 00001EC4 | 52                        | 	push	dx
  3052 | 00001EC5 | B400                      |  	mov	ah, 0		; Slide piece operation
  3053 | 00001EC7 | 8A4606                    |   	mov	al, [bp+6]	; Move direction (loword only)
  3054 | 00001ECA | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  3055 | 00001ECD | CD1B                      | 	int	1Bh		; Call Simptris services
  3056 | 00001ECF | 5A                        | 	pop	dx
  3057 | 00001ED0 | 58                        | 	pop	ax
  3058 | 00001ED1 | 5D                        | 	pop	bp
  3059 | 00001ED2 | C3                        | 	ret
  3060 |          |                           | RotatePiece:	; void RotatePiece(int ID, int direction)
  3061 | 00001ED3 | 55                        | 	push	bp
  3062 | 00001ED4 | 89E5                      | 	mov	bp, sp
  3063 | 00001ED6 | 50                        | 	push	ax
  3064 | 00001ED7 | 52                        | 	push	dx
  3065 | 00001ED8 | B401                      |  	mov	ah, 1		; Rotate piece operation
  3066 | 00001EDA | 8A4606                    |  	mov	al, [bp+6]	; Move direction (loword only)
  3067 | 00001EDD | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  3068 | 00001EE0 | CD1B                      | 	int	1Bh		; Call Simptris services
  3069 | 00001EE2 | 5A                        | 	pop	dx
  3070 | 00001EE3 | 58                        | 	pop	ax
  3071 | 00001EE4 | 5D                        | 	pop	bp
  3072 | 00001EE5 | C3                        | 	ret
  3073 |          |                           | SeedSimptris:	; void SeedSimptris(long seed)
  3074 | 00001EE6 | 55                        | 	push	bp
  3075 | 00001EE7 | 89E5                      | 	mov	bp, sp
  3076 | 00001EE9 | 50                        | 	push	ax
  3077 | 00001EEA | 51                        | 	push	cx
  3078 | 00001EEB | 52                        | 	push    dx
  3079 | 00001EEC | B402                      |  	mov	ah, 2		; Seed operation
  3080 | 00001EEE | 8B5604                    | 	mov	dx, [bp+4]	; Move loword of seed
  3081 | 00001EF1 | 8B4E06                    | 	mov	cx, [bp+6]	; Move hiword of seed
  3082 | 00001EF4 | CD1B                      | 	int	1Bh		; Call Simptris services
  3083 | 00001EF6 | 5A                        | 	pop	dx
  3084 | 00001EF7 | 59                        | 	pop	cx
  3085 | 00001EF8 | 58                        | 	pop	ax
  3086 | 00001EF9 | 5D                        | 	pop	bp
  3087 | 00001EFA | C3                        | 	ret
  3088 |          |                           | StartSimptris:	; void StartSimptris(void)
  3089 | 00001EFB | 50                        | 	push	ax
  3090 | 00001EFC | B403                      |  	mov	ah, 3		; Start Simptris operation
  3091 | 00001EFE | CD1B                      | 	int	1Bh		; Call Simptris services
  3092 | 00001F00 | 58                        | 	pop	ax
  3093 | 00001F01 | C3                        | 	ret
  3094 |          |                           | 
