 LINE  | ADDRESS  | HEX DUMP                  | ASSEMBLY
-------|----------|---------------------------|----------------------------
     1 |          |                           |         CPU     8086
     2 |          |                           |         ORG     0h
     3 |          |                           | InterruptVectorTable:
     4 |          |                           |         ; Internal x86 Interrupts:
     5 | 00000000 | 00000000                  |         dd      0 ; Reserved (Div err)  ; Int 00h
     6 | 00000004 | 00000000                  |         dd      0 ; Reserved (Step)     ; Int 01h
     7 | 00000008 | 00000000                  |         dd      0 ; Reserved (NMI)      ; Int 02h
     8 | 0000000C | 00000000                  |         dd      0 ; Reserved (Break)    ; Int 03h
     9 | 00000010 | 00000000                  |         dd      0 ; Reserved (Overflow) ; Int 04h
    10 | 00000014 | 00000000                  |         dd      0                       ; Int 05h
    11 | 00000018 | 00000000                  |         dd      0                       ; Int 06h
    12 | 0000001C | 00000000                  |         dd      0                       ; Int 07h
    13 |          |                           |         ; Hardware Interrupts:
    14 | 00000020 | [86080000]                |         dd      reset ; Reset               ; Int 08h (IRQ 0)
    15 | 00000024 | [8C080000]                |         dd      tick ; Tick                ; Int 09h (IRQ 1)
    16 | 00000028 | [AD080000]                |         dd      keypress ; Keyboard            ; Int 0Ah (IRQ 2)
    17 | 0000002C | [CE080000]                |         dd      gameOver ; Simptris Game Over  ; Int 0Bh (IRQ 3)
    18 | 00000030 | [CF080000]                |         dd      newPiece ; Simptris New Piece  ; Int 0Ch (IRQ 4)
    19 | 00000034 | [F0080000]                |         dd      received ; Simptris Received   ; Int 0Dh (IRQ 5)
    20 | 00000038 | [11090000]                |         dd      touchdown ; Simptris Touchdown  ; Int 0Eh (IRQ 6)
    21 | 0000003C | [24090000]                |         dd      clear ; Simptris Clear      ; Int 0Fh (IRQ 7)
    22 |          |                           |         ; Software Interrupts:
    23 | 00000040 | 00000000                  |         dd      0 ; Reserved (PC BIOS)  ; Int 10h
    24 | 00000044 | 00000000                  |         dd      0                       ; Int 11h
    25 | 00000048 | 00000000                  |         dd      0                       ; Int 12h
    26 | 0000004C | 00000000                  |         dd      0                       ; Int 13h
    27 | 00000050 | 00000000                  |         dd      0                       ; Int 14h
    28 | 00000054 | 00000000                  |         dd      0                       ; Int 15h
    29 | 00000058 | 00000000                  |         dd      0                       ; Int 16h
    30 | 0000005C | 00000000                  |         dd      0                       ; Int 17h
    31 | 00000060 | 00000000                  |         dd      0                       ; Int 18h
    32 | 00000064 | 00000000                  |         dd      0                       ; Int 19h
    33 | 00000068 | 00000000                  |         dd      0                       ; Int 1Ah
    34 | 0000006C | 00000000                  |         dd      0                       ; Int 1Bh
    35 | 00000070 | 00000000                  |         dd      0                       ; Int 1Ch
    36 | 00000074 | 00000000                  |         dd      0                       ; Int 1Dh
    37 | 00000078 | 00000000                  |         dd      0                       ; Int 1Eh
    38 | 0000007C | 00000000                  |         dd      0                       ; Int 1Fh
    39 | 00000080 | 00000000                  |         dd      0                       ; Int 20h
    40 | 00000084 | 00000000                  |         dd      0 ; Reserved (DOS)      ; Int 21h
    41 | 00000088 | 00000000                  |         dd      0 ; Simptris Services   ; Int 22h
    42 | 0000008C | 00000000                  |         dd      0                       ; Int 23h
    43 | 00000090 | 00000000                  |         dd      0                       ; Int 24h
    44 | 00000094 | 00000000                  |         dd      0                       ; Int 25h
    45 | 00000098 | 00000000                  |         dd      0                       ; Int 26h
    46 | 0000009C | 00000000                  |         dd      0                       ; Int 27h
    47 | 000000A0 | 00000000                  |         dd      0                       ; Int 28h
    48 | 000000A4 | 00000000                  |         dd      0                       ; Int 29h
    49 | 000000A8 | 00000000                  |         dd      0                       ; Int 2Ah
    50 | 000000AC | 00000000                  |         dd      0                       ; Int 2Bh
    51 | 000000B0 | 00000000                  |         dd      0                       ; Int 2Ch
    52 | 000000B4 | 00000000                  |         dd      0                       ; Int 2Dh
    53 | 000000B8 | 00000000                  |         dd      0                       ; Int 2Eh
    54 | 000000BC | 00000000                  |         dd      0                       ; Int 2Fh
    55 |          |                           | KeyBuffer:                              ; Address 0xC0
    56 | 000000C0 | 0000                      |         dw      0
    57 |          |                           | NewPieceType:                           ; Address 0xC2
    58 | 000000C2 | 0000                      |         dw      0
    59 |          |                           | NewPieceID:                             ; Address 0xC4
    60 | 000000C4 | 0000                      |         dw      0
    61 |          |                           | NewPieceOrientation:                    ; Address 0xC6
    62 | 000000C6 | 0000                      |         dw      0
    63 |          |                           | NewPieceColumn:                         ; Address 0xC8
    64 | 000000C8 | 0000                      |         dw      0
    65 |          |                           | TouchdownID:                            ; Address 0xCA
    66 | 000000CA | 0000                      | 	dw	0
    67 |          |                           | ScreenBitMap0:                          ; Address 0xCC
    68 | 000000CC | 0000                      |         dw      0
    69 |          |                           | ScreenBitMap1:
    70 | 000000CE | 0000                      |         dw      0
    71 |          |                           | ScreenBitMap2:
    72 | 000000D0 | 0000                      |         dw      0
    73 |          |                           | ScreenBitMap3:
    74 | 000000D2 | 0000                      |         dw      0
    75 |          |                           | ScreenBitMap4:
    76 | 000000D4 | 0000                      |         dw      0
    77 |          |                           | ScreenBitMap5:
    78 | 000000D6 | 0000                      |         dw      0
    79 | 000000D8 | 00<rept>                  | TIMES   100h-($-$$) db  0               ; Fill up to (but not including) address 100h with 0
    80 | 00000100 | E9131C                    | 	jmp	main
    81 |          |                           | ; This file contains support routines for 32-bit on the 8086.
    82 |          |                           | ; It is intended for use code generated by the C86 compiler.
    83 |          |                           | ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    84 |          |                           | SR_asldiv:			; l1 /= l2
    85 | 00000103 | 55                        | 	push	bp
    86 | 00000104 | 89E5                      | 	mov	bp,sp
    87 | 00000106 | 53                        | 	push	bx
    88 | 00000107 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
    89 | 0000010A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
    90 | 0000010D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
    91 | 00000110 | FF7702                    | 	push	word [bx+2]	; Push hi l1
    92 | 00000113 | FF37                      | 	push	word [bx]	; Push lo l1
    93 | 00000115 | E83D01                    | 	call	SR_ldiv
    94 | 00000118 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
    95 | 0000011B | 895702                    | 	mov	[bx+2],dx	; Store result
    96 | 0000011E | 8907                      | 	mov	[bx],ax
    97 | 00000120 | 5B                        | 	pop	bx
    98 | 00000121 | 5D                        | 	pop	bp
    99 | 00000122 | C3                        | 	ret
   100 |          |                           | SR_aslmod:			; l1 %= l2
   101 | 00000123 | 55                        | 	push	bp
   102 | 00000124 | 89E5                      | 	mov	bp,sp
   103 | 00000126 | 53                        | 	push	bx
   104 | 00000127 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   105 | 0000012A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   106 | 0000012D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   107 | 00000130 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   108 | 00000133 | FF37                      | 	push	word [bx]	; Push lo l1
   109 | 00000135 | E82C01                    | 	call	SR_lmod
   110 | 00000138 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   111 | 0000013B | 895702                    | 	mov	[bx+2],dx	; Store result
   112 | 0000013E | 8907                      | 	mov	[bx],ax
   113 | 00000140 | 5B                        | 	pop	bx
   114 | 00000141 | 5D                        | 	pop	bp
   115 | 00000142 | C3                        | 	ret
   116 |          |                           | SR_aslmul:			; l1 *= l2
   117 | 00000143 | 55                        | 	push	bp
   118 | 00000144 | 89E5                      | 	mov	bp,sp
   119 | 00000146 | 53                        | 	push	bx
   120 | 00000147 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   121 | 0000014A | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   122 | 0000014D | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   123 | 00000150 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   124 | 00000153 | FF37                      | 	push	word [bx]	; Push lo l1
   125 | 00000155 | E84002                    | 	call	SR_lmul
   126 | 00000158 | 83C408                    | 	add	sp,8
   127 | 0000015B | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   128 | 0000015E | 895702                    | 	mov	[bx+2],dx	; Store result
   129 | 00000161 | 8907                      | 	mov	[bx],ax
   130 | 00000163 | 5B                        | 	pop	bx
   131 | 00000164 | 5D                        | 	pop	bp
   132 | 00000165 | C3                        | 	ret
   133 |          |                           | SR_aslshl:			; l1 <<= l2
   134 | 00000166 | 55                        | 	push	bp
   135 | 00000167 | 89E5                      | 	mov	bp,sp
   136 | 00000169 | 53                        | 	push	bx
   137 | 0000016A | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   138 | 0000016D | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   139 | 00000170 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   140 | 00000173 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   141 | 00000176 | FF37                      | 	push	word [bx]	; Push lo l1
   142 | 00000178 | E88801                    | 	call	SR_lshl
   143 | 0000017B | 83C408                    | 	add	sp,8
   144 | 0000017E | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   145 | 00000181 | 895702                    | 	mov	[bx+2],dx	; Store result
   146 | 00000184 | 8907                      | 	mov	[bx],ax
   147 | 00000186 | 5B                        | 	pop	bx
   148 | 00000187 | 5D                        | 	pop	bp
   149 | 00000188 | C3                        | 	ret
   150 |          |                           | SR_aslshr:			; l1 >>= l2
   151 | 00000189 | 55                        | 	push	bp
   152 | 0000018A | 89E5                      | 	mov	bp,sp
   153 | 0000018C | 53                        | 	push	bx
   154 | 0000018D | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of l1	(was push3)
   155 | 00000190 | FF7608                    | 	push	word [bp+8]	; Push hi l2		(was push1)
   156 | 00000193 | FF7606                    | 	push	word [bp+6]	; Push lo l2		(was push2)
   157 | 00000196 | FF7702                    | 	push	word [bx+2]	; Push hi l1
   158 | 00000199 | FF37                      | 	push	word [bx]	; Push lo l1
   159 | 0000019B | E89701                    | 	call	SR_lshr
   160 | 0000019E | 83C408                    | 	add	sp,8
   161 | 000001A1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore l1 address
   162 | 000001A4 | 895702                    | 	mov	[bx+2],dx	; Store result
   163 | 000001A7 | 8907                      | 	mov	[bx],ax
   164 | 000001A9 | 5B                        | 	pop	bx
   165 | 000001AA | 5D                        | 	pop	bp
   166 | 000001AB | C3                        | 	ret
   167 |          |                           | 
   168 |          |                           | 
   169 |          |                           | SR_asuldiv:			; u1 /= u2
   170 | 000001AC | 55                        | 	push	bp
   171 | 000001AD | 89E5                      | 	mov	bp,sp
   172 | 000001AF | 53                        | 	push	bx
   173 | 000001B0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   174 | 000001B3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   175 | 000001B6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   176 | 000001B9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   177 | 000001BC | FF37                      | 	push	word [bx]	; Push lo u1
   178 | 000001BE | E89B00                    | 	call	SR_uldiv
   179 | 000001C1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   180 | 000001C4 | 895702                    | 	mov	[bx+2],dx	; Store result
   181 | 000001C7 | 8907                      | 	mov	[bx],ax
   182 | 000001C9 | 5B                        | 	pop	bx
   183 | 000001CA | 5D                        | 	pop	bp
   184 | 000001CB | C3                        | 	ret
   185 |          |                           | SR_asilmod:			; u1 %= u2
   186 | 000001CC | 55                        | 	push	bp
   187 | 000001CD | 89E5                      | 	mov	bp,sp
   188 | 000001CF | 53                        | 	push	bx
   189 | 000001D0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   190 | 000001D3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   191 | 000001D6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   192 | 000001D9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   193 | 000001DC | FF37                      | 	push	word [bx]	; Push lo u1
   194 | 000001DE | E88B00                    | 	call	SR_ilmod
   195 | 000001E1 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   196 | 000001E4 | 895702                    | 	mov	[bx+2],dx	; Store result
   197 | 000001E7 | 8907                      | 	mov	[bx],ax
   198 | 000001E9 | 5B                        | 	pop	bx
   199 | 000001EA | 5D                        | 	pop	bp
   200 | 000001EB | C3                        | 	ret
   201 |          |                           | SR_asulmul:			; u1 *= u2
   202 | 000001EC | 55                        | 	push	bp
   203 | 000001ED | 89E5                      | 	mov	bp,sp
   204 | 000001EF | 53                        | 	push	bx
   205 | 000001F0 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   206 | 000001F3 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   207 | 000001F6 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   208 | 000001F9 | FF7702                    | 	push	word [bx+2]	; Push hi u1
   209 | 000001FC | FF37                      | 	push	word [bx]	; Push lo u1
   210 | 000001FE | E89701                    | 	call	SR_ulmul
   211 | 00000201 | 83C408                    | 	add	sp,8
   212 | 00000204 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   213 | 00000207 | 895702                    | 	mov	[bx+2],dx	; Store result
   214 | 0000020A | 8907                      | 	mov	[bx],ax
   215 | 0000020C | 5B                        | 	pop	bx
   216 | 0000020D | 5D                        | 	pop	bp
   217 | 0000020E | C3                        | 	ret
   218 |          |                           | SR_asulshl:			; u1 << u2
   219 | 0000020F | 55                        | 	push	bp
   220 | 00000210 | 89E5                      | 	mov	bp,sp
   221 | 00000212 | 53                        | 	push	bx
   222 | 00000213 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   223 | 00000216 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   224 | 00000219 | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   225 | 0000021C | FF7702                    | 	push	word [bx+2]	; Push hi u1
   226 | 0000021F | FF37                      | 	push	word [bx]	; Push lo u1
   227 | 00000221 | E8DF00                    | 	call	SR_ulshl
   228 | 00000224 | 83C408                    | 	add	sp,8
   229 | 00000227 | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   230 | 0000022A | 895702                    | 	mov	[bx+2],dx	; Store result
   231 | 0000022D | 8907                      | 	mov	[bx],ax
   232 | 0000022F | 5B                        | 	pop	bx
   233 | 00000230 | 5D                        | 	pop	bp
   234 | 00000231 | C3                        | 	ret
   235 |          |                           | SR_asulshr:			; u1 >> u2
   236 | 00000232 | 55                        | 	push	bp
   237 | 00000233 | 89E5                      | 	mov	bp,sp
   238 | 00000235 | 53                        | 	push	bx
   239 | 00000236 | 8B5E04                    | 	mov	bx,[bp+4]	; Get address of u1	(was push3)
   240 | 00000239 | FF7608                    | 	push	word [bp+8]	; Push hi u2		(was push1)
   241 | 0000023C | FF7606                    | 	push	word [bp+6]	; Push lo u2		(was push2)
   242 | 0000023F | FF7702                    | 	push	word [bx+2]	; Push hi u1
   243 | 00000242 | FF37                      | 	push	word [bx]	; Push lo u1
   244 | 00000244 | E81F01                    | 	call	SR_ulshr
   245 | 00000247 | 83C408                    | 	add	sp,8
   246 | 0000024A | 8B5E04                    | 	mov	bx,[bp+4]	; Restore u1 address
   247 | 0000024D | 895702                    | 	mov	[bx+2],dx	; Store result
   248 | 00000250 | 8907                      | 	mov	[bx],ax
   249 | 00000252 | 5B                        | 	pop	bx
   250 | 00000253 | 5D                        | 	pop	bp
   251 | 00000254 | C3                        | 	ret
   252 |          |                           | 
   253 |          |                           | 
   254 |          |                           | ; Main 32-bit routines begin here:
   255 |          |                           | 
   256 |          |                           | SR_ldiv:	; N_LDIV@
   257 | 00000255 | 59                        | 	pop    cx
   258 | 00000256 | 0E                        | 	push   cs
   259 | 00000257 | 51                        | 	push   cx
   260 |          |                           | 	; LDIV@
   261 | 00000258 | 31C9                      | 	xor    cx,cx
   262 | 0000025A | EB16                      | 	jmp    LSR_01
   263 |          |                           | SR_uldiv:	; N_LUDIV@
   264 | 0000025C | 59                        | 	pop    cx
   265 | 0000025D | 0E                        | 	push   cs
   266 | 0000025E | 51                        | 	push   cx
   267 |          |                           | 	; F_LUDIV@
   268 | 0000025F | B90100                    | 	mov    cx,0001
   269 | 00000262 | EB0E                      | 	jmp    LSR_01
   270 |          |                           | SR_lmod:	; N_LMOD@
   271 | 00000264 | 59                        | 	pop    cx
   272 | 00000265 | 0E                        | 	push   cs
   273 | 00000266 | 51                        | 	push   cx
   274 |          |                           | 	; F_LMOD@
   275 | 00000267 | B90200                    | 	mov    cx,0002
   276 | 0000026A | EB06                      | 	jmp    LSR_01
   277 |          |                           | SR_ilmod:	; N_LUMOD@
   278 | 0000026C | 59                        | 	pop    cx
   279 | 0000026D | 0E                        | 	push   cs
   280 | 0000026E | 51                        | 	push   cx
   281 |          |                           | 	; LUMOD@
   282 | 0000026F | B90300                    | 	mov    cx,0003
   283 |          |                           | LSR_01:
   284 | 00000272 | 55                        | 	push   bp
   285 | 00000273 | 56                        | 	push   si
   286 | 00000274 | 57                        | 	push   di
   287 | 00000275 | 89E5                      | 	mov    bp,sp
   288 | 00000277 | 89CF                      | 	mov    di,cx
   289 | 00000279 | 8B460A                    | 	mov    ax,[bp+0Ah]
   290 | 0000027C | 8B560C                    | 	mov    dx,[bp+0Ch]
   291 | 0000027F | 8B5E0E                    | 	mov    bx,[bp+0Eh]
   292 | 00000282 | 8B4E10                    | 	mov    cx,[bp+10h]
   293 | 00000285 | 09C9                      | 	or     cx,cx
   294 | 00000287 | 7508                      | 	jne    LSR_02
   295 | 00000289 | 09D2                      | 	or     dx,dx
   296 | 0000028B | 7469                      | 	je     LSR_10
   297 | 0000028D | 09DB                      | 	or     bx,bx
   298 | 0000028F | 7465                      | 	je     LSR_10
   299 |          |                           | LSR_02:
   300 | 00000291 | F7C70100                  | 	test   di,0001
   301 | 00000295 | 751C                      | 	jne    LSR_04
   302 | 00000297 | 09D2                      | 	or     dx,dx
   303 | 00000299 | 790A                      | 	jns    LSR_03
   304 | 0000029B | F7DA                      | 	neg    dx
   305 | 0000029D | F7D8                      | 	neg    ax
   306 | 0000029F | 83DA00                    | 	sbb    dx,0000
   307 | 000002A2 | 83CF0C                    | 	or     di,000Ch
   308 |          |                           | LSR_03:
   309 | 000002A5 | 09C9                      | 	or     cx,cx
   310 | 000002A7 | 790A                      | 	jns    LSR_04
   311 | 000002A9 | F7D9                      | 	neg    cx
   312 | 000002AB | F7DB                      | 	neg    bx
   313 | 000002AD | 83D900                    | 	sbb    cx,0000
   314 | 000002B0 | 83F704                    | 	xor    di,0004
   315 |          |                           | LSR_04:
   316 | 000002B3 | 89CD                      | 	mov    bp,cx
   317 | 000002B5 | B92000                    | 	mov    cx,0020h
   318 | 000002B8 | 57                        | 	push   di
   319 | 000002B9 | 31FF                      | 	xor    di,di
   320 | 000002BB | 31F6                      | 	xor    si,si
   321 |          |                           | LSR_05:
   322 | 000002BD | D1E0                      | 	shl    ax,1
   323 | 000002BF | D1D2                      | 	rcl    dx,1
   324 | 000002C1 | D1D6                      | 	rcl    si,1
   325 | 000002C3 | D1D7                      | 	rcl    di,1
   326 | 000002C5 | 39EF                      | 	cmp    di,bp
   327 | 000002C7 | 720B                      | 	jb     LSR_07
   328 | 000002C9 | 7704                      | 	ja     LSR_06
   329 | 000002CB | 39DE                      | 	cmp    si,bx
   330 | 000002CD | 7205                      | 	jb     LSR_07
   331 |          |                           | LSR_06:
   332 | 000002CF | 29DE                      | 	sub    si,bx
   333 | 000002D1 | 19EF                      | 	sbb    di,bp
   334 | 000002D3 | 40                        | 	inc    ax
   335 |          |                           | LSR_07:
   336 | 000002D4 | E2E7                      | 	loop   LSR_05
   337 | 000002D6 | 5B                        | 	pop    bx
   338 | 000002D7 | F7C30200                  | 	test   bx,0002
   339 | 000002DB | 7406                      | 	je     LSR_08
   340 | 000002DD | 89F0                      | 	mov    ax,si
   341 | 000002DF | 89FA                      | 	mov    dx,di
   342 | 000002E1 | D1EB                      | 	shr    bx,1
   343 |          |                           | LSR_08:
   344 | 000002E3 | F7C30400                  | 	test   bx,0004h
   345 | 000002E7 | 7407                      | 	je     LSR_09
   346 | 000002E9 | F7DA                      | 	neg    dx
   347 | 000002EB | F7D8                      | 	neg    ax
   348 | 000002ED | 83DA00                    | 	sbb    dx,0000
   349 |          |                           | LSR_09:
   350 | 000002F0 | 5F                        | 	pop    di
   351 | 000002F1 | 5E                        | 	pop    si
   352 | 000002F2 | 5D                        | 	pop    bp
   353 | 000002F3 | CA0800                    | 	retf   0008
   354 |          |                           | LSR_10:
   355 | 000002F6 | F7F3                      | 	div    bx
   356 | 000002F8 | F7C70200                  | 	test   di,0002
   357 | 000002FC | 7401                      | 	je     LSR_11
   358 | 000002FE | 92                        | 	xchg   dx,ax
   359 |          |                           | LSR_11:
   360 | 000002FF | 31D2                      | 	xor    dx,dx
   361 | 00000301 | EBED                      | 	jmp    LSR_09
   362 |          |                           | SR_lshl:	; N_LXLSH@
   363 |          |                           | SR_ulshl:
   364 |          |                           | 	; r = a << b
   365 | 00000303 | 5B                        | 	pop    bx
   366 | 00000304 | 0E                        | 	push   cs
   367 | 00000305 | 53                        | 	push   bx
   368 |          |                           | 
   369 | 00000306 | 55                        | 	push   bp
   370 | 00000307 | 89E5                      | 	mov    bp,sp
   371 |          |                           | 
   372 | 00000309 | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   373 |          |                           | 
   374 | 0000030A | 8B4606                    | 	mov    ax, [bp+6]	; pop loword(a)
   375 | 0000030D | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   376 | 00000310 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   377 |          |                           | 	
   378 |          |                           | 	; LXLSH@
   379 | 00000313 | 80F910                    | 	cmp    cl,10h
   380 | 00000316 | 7312                      | 	jnb    LSR_12
   381 | 00000318 | 89C3                      | 	mov    bx,ax
   382 | 0000031A | D3E0                      | 	shl    ax,cl
   383 | 0000031C | D3E2                      | 	shl    dx,cl
   384 | 0000031E | F6D9                      | 	neg    cl
   385 | 00000320 | 80C110                    | 	add    cl,10h
   386 | 00000323 | D3EB                      | 	shr    bx,cl
   387 | 00000325 | 09DA                      | 	or     dx,bx
   388 | 00000327 | 59                        | 	pop    cx
   389 | 00000328 | 5D                        | 	pop    bp
   390 | 00000329 | CB                        | 	retf
   391 |          |                           | LSR_12:
   392 | 0000032A | 80E910                    | 	sub    cl,10h
   393 | 0000032D | 92                        | 	xchg   dx,ax
   394 | 0000032E | 31C0                      | 	xor    ax,ax
   395 | 00000330 | D3E2                      | 	shl    dx,cl
   396 | 00000332 | 59                        | 	pop    cx
   397 | 00000333 | 5D                        | 	pop    bp
   398 | 00000334 | CB                        | 	retf
   399 |          |                           | SR_lshr:	; N_LXRSH@
   400 |          |                           | 	; r = a >> b
   401 | 00000335 | 5B                        | 	pop    bx
   402 | 00000336 | 0E                        | 	push   cs
   403 | 00000337 | 53                        | 	push   bx
   404 |          |                           | 
   405 | 00000338 | 55                        | 	push   bp
   406 | 00000339 | 89E5                      | 	mov    bp,sp
   407 |          |                           | 
   408 | 0000033B | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   409 |          |                           | 
   410 | 0000033C | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   411 | 0000033F | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   412 | 00000342 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   413 |          |                           | 	
   414 |          |                           | 	; LXRSH@
   415 | 00000345 | 80F910                    | 	cmp    cl,10h
   416 | 00000348 | 7312                      | 	jnb    LSR_13
   417 | 0000034A | 89D3                      | 	mov    bx,dx
   418 | 0000034C | D3E8                      | 	shr    ax,cl
   419 | 0000034E | D3FA                      | 	sar    dx,cl
   420 | 00000350 | F6D9                      | 	neg    cl
   421 | 00000352 | 80C110                    | 	add    cl,10h
   422 | 00000355 | D3E3                      | 	shl    bx,cl
   423 | 00000357 | 09D8                      | 	or     ax,bx
   424 | 00000359 | 59                        | 	pop    cx
   425 | 0000035A | 5D                        | 	pop    bp
   426 | 0000035B | CB                        | 	retf
   427 |          |                           | LSR_13:
   428 | 0000035C | 80E910                    | 	sub    cl,10h
   429 | 0000035F | 92                        | 	xchg   dx,ax
   430 | 00000360 | 99                        | 	cwd
   431 | 00000361 | D3F8                      | 	sar    ax,cl
   432 | 00000363 | 59                        | 	pop    cx
   433 | 00000364 | 5D                        | 	pop    bp
   434 | 00000365 | CB                        | 	retf
   435 |          |                           | SR_ulshr:	; N_LXURSH@
   436 |          |                           | 	; r = a >> b
   437 | 00000366 | 5B                        | 	pop    bx
   438 | 00000367 | 0E                        | 	push   cs
   439 | 00000368 | 53                        | 	push   bx
   440 |          |                           | 
   441 | 00000369 | 55                        | 	push   bp
   442 | 0000036A | 89E5                      | 	mov    bp,sp
   443 |          |                           | 
   444 | 0000036C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   445 |          |                           | 
   446 | 0000036D | 8B4606                    |         mov    ax, [bp+6]	; pop loword(a)
   447 | 00000370 | 8B5608                    | 	mov    dx, [bp+8]	; pop hiword(a)
   448 | 00000373 | 8B4E0A                    | 	mov    cx, [bp+10]	; pop word(b)
   449 |          |                           | 	
   450 |          |                           | 	; LXURSH@
   451 | 00000376 | 80F910                    | 	cmp    cl,10h
   452 | 00000379 | 7312                      | 	jnb    LSR_14
   453 | 0000037B | 89D3                      | 	mov    bx,dx
   454 | 0000037D | D3E8                      | 	shr    ax,cl
   455 | 0000037F | D3EA                      | 	shr    dx,cl
   456 | 00000381 | F6D9                      | 	neg    cl
   457 | 00000383 | 80C110                    | 	add    cl,10h
   458 | 00000386 | D3E3                      | 	shl    bx,cl
   459 | 00000388 | 09D8                      | 	or     ax,bx
   460 | 0000038A | 59                        | 	pop    cx
   461 | 0000038B | 5D                        | 	pop    bp
   462 | 0000038C | CB                        | 	retf
   463 |          |                           | LSR_14:
   464 | 0000038D | 80E910                    | 	sub    cl,10h
   465 | 00000390 | 92                        | 	xchg   dx,ax
   466 | 00000391 | 31D2                      | 	xor    dx,dx
   467 | 00000393 | D3E8                      | 	shr    ax,cl
   468 | 00000395 | 59                        | 	pop    cx
   469 | 00000396 | 5D                        | 	pop    bp
   470 | 00000397 | CB                        | 	retf
   471 |          |                           | SR_lmul:	; N_LXMUL@
   472 |          |                           | SR_ulmul:
   473 |          |                           | 	; r = a * b
   474 | 00000398 | 55                        | 	push   bp
   475 | 00000399 | 56                        | 	push   si
   476 | 0000039A | 89E5                      | 	mov    bp,sp
   477 |          |                           | 
   478 | 0000039C | 51                        | 	push   cx	; C86 doesn't expect use of cx or bx
   479 | 0000039D | 53                        | 	push   bx
   480 |          |                           | 
   481 | 0000039E | 8B5E06                    |         mov    bx, [bp+6]	; pop loword(a)
   482 | 000003A1 | 8B4E08                    | 	mov    cx, [bp+8]	; pop hiword(a)
   483 | 000003A4 | 8B460A                    | 	mov    ax, [bp+10]	; pop loword(b)
   484 | 000003A7 | 8B560C                    | 	mov    dx, [bp+12]	; pop hiword(b)
   485 |          |                           | 	
   486 | 000003AA | 96                        | 	xchg   si,ax
   487 | 000003AB | 92                        | 	xchg   dx,ax
   488 | 000003AC | 85C0                      | 	test   ax,ax
   489 | 000003AE | 7402                      | 	je     LSR_15
   490 | 000003B0 | F7E3                      | 	mul    bx
   491 |          |                           | LSR_15:
   492 | 000003B2 | E305                      | 	jcxz   LSR_16
   493 | 000003B4 | 91                        | 	xchg   cx,ax
   494 | 000003B5 | F7E6                      | 	mul    si
   495 | 000003B7 | 01C8                      | 	add    ax,cx
   496 |          |                           | LSR_16:
   497 | 000003B9 | 96                        | 	xchg   si,ax
   498 | 000003BA | F7E3                      | 	mul    bx
   499 | 000003BC | 01F2                      | 	add    dx,si
   500 | 000003BE | 5B                        | 	pop    bx
   501 | 000003BF | 59                        | 	pop    cx
   502 | 000003C0 | 5E                        | 	pop    si
   503 | 000003C1 | 5D                        | 	pop    bp
   504 | 000003C2 | C3                        | 	ret
   505 |          |                           | 
   506 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from clib.c
   507 |          |                           | 	CPU	8086
   508 | 000003C3 | 90                        | 	ALIGN	2
   509 | 000003C4 | E94F19                    | 	jmp	main	; Jump to program start
   510 |          |                           | new_line:
   511 | 000003C7 | 0D0A24                    | 	db	13,10,36
   512 |          |                           | 	ALIGN	2
   513 |          |                           | signalEOI:
   514 | 000003CA | EB08                      | 	jmp	L_clib_1
   515 |          |                           | L_clib_2:
   516 | 000003CC | B020                      | 	mov	al, 0x20
   517 | 000003CE | E620                      | 	out	0x20, al
   518 | 000003D0 | 89EC                      | 	mov	sp, bp
   519 | 000003D2 | 5D                        | 	pop	bp
   520 | 000003D3 | C3                        | 	ret
   521 |          |                           | L_clib_1:
   522 | 000003D4 | 55                        | 	push	bp
   523 | 000003D5 | 89E5                      | 	mov	bp, sp
   524 | 000003D7 | EBF3                      | 	jmp	L_clib_2
   525 | 000003D9 | 90                        | 	ALIGN	2
   526 |          |                           | exit:
   527 | 000003DA | EB0B                      | 	jmp	L_clib_4
   528 |          |                           | L_clib_5:
   529 | 000003DC | B44C                      | 	mov	ah, 4Ch
   530 | 000003DE | 8A4604                    | 	mov	al, [bp+4]
   531 | 000003E1 | CD21                      | 	int	21h
   532 | 000003E3 | 89EC                      | 	mov	sp, bp
   533 | 000003E5 | 5D                        | 	pop	bp
   534 | 000003E6 | C3                        | 	ret
   535 |          |                           | L_clib_4:
   536 | 000003E7 | 55                        | 	push	bp
   537 | 000003E8 | 89E5                      | 	mov	bp, sp
   538 | 000003EA | EBF0                      | 	jmp	L_clib_5
   539 |          |                           | 	ALIGN	2
   540 |          |                           | print:
   541 | 000003EC | EB11                      | 	jmp	L_clib_7
   542 |          |                           | L_clib_8:
   543 | 000003EE | B440                      | 	mov	ah, 40h
   544 | 000003F0 | BB0100                    | 	mov	bx, 1
   545 | 000003F3 | 8B4E06                    | 	mov	cx, [bp+6]
   546 | 000003F6 | 8B5604                    | 	mov	dx, [bp+4]
   547 | 000003F9 | CD21                      | 	int	21h
   548 | 000003FB | 89EC                      | 	mov	sp, bp
   549 | 000003FD | 5D                        | 	pop	bp
   550 | 000003FE | C3                        | 	ret
   551 |          |                           | L_clib_7:
   552 | 000003FF | 55                        | 	push	bp
   553 | 00000400 | 89E5                      | 	mov	bp, sp
   554 | 00000402 | EBEA                      | 	jmp	L_clib_8
   555 |          |                           | 	ALIGN	2
   556 |          |                           | printChar:
   557 | 00000404 | EB0B                      | 	jmp	L_clib_10
   558 |          |                           | L_clib_11:
   559 | 00000406 | B402                      | 	mov	ah, 2
   560 | 00000408 | 8A5604                    | 	mov	dl, [bp+4]
   561 | 0000040B | CD21                      | 	int	21h
   562 | 0000040D | 89EC                      | 	mov	sp, bp
   563 | 0000040F | 5D                        | 	pop	bp
   564 | 00000410 | C3                        | 	ret
   565 |          |                           | L_clib_10:
   566 | 00000411 | 55                        | 	push	bp
   567 | 00000412 | 89E5                      | 	mov	bp, sp
   568 | 00000414 | EBF0                      | 	jmp	L_clib_11
   569 |          |                           | 	ALIGN	2
   570 |          |                           | printNewLine:
   571 | 00000416 | EB0B                      | 	jmp	L_clib_13
   572 |          |                           | L_clib_14:
   573 | 00000418 | B409                      | 	mov	ah, 9
   574 | 0000041A | BA[C703]                  | 	mov	dx, new_line
   575 | 0000041D | CD21                      | 	int	21h
   576 | 0000041F | 89EC                      | 	mov	sp, bp
   577 | 00000421 | 5D                        | 	pop	bp
   578 | 00000422 | C3                        | 	ret
   579 |          |                           | L_clib_13:
   580 | 00000423 | 55                        | 	push	bp
   581 | 00000424 | 89E5                      | 	mov	bp, sp
   582 | 00000426 | EBF0                      | 	jmp	L_clib_14
   583 |          |                           | 	ALIGN	2
   584 |          |                           | printString:
   585 | 00000428 | EB1C                      | 	jmp	L_clib_16
   586 |          |                           | L_clib_17:
   587 | 0000042A | 31F6                      | 	xor	si,si
   588 | 0000042C | 8B5E04                    | 	mov	bx, [bp+4]
   589 | 0000042F | EB01                      | 	jmp	printString2
   590 |          |                           | 	printString1:
   591 | 00000431 | 46                        | 	inc	si
   592 |          |                           | 	printString2:
   593 | 00000432 | 803800                    | 	cmp	byte [bx+si],0
   594 | 00000435 | 75FA                      | 	jne	printString1
   595 | 00000437 | 89DA                      | 	mov	dx, bx
   596 | 00000439 | 89F1                      | 	mov	cx, si
   597 | 0000043B | B440                      | 	mov	ah, 40h
   598 | 0000043D | BB0100                    | 	mov	bx, 1
   599 | 00000440 | CD21                      | 	int	21h
   600 | 00000442 | 89EC                      | 	mov	sp, bp
   601 | 00000444 | 5D                        | 	pop	bp
   602 | 00000445 | C3                        | 	ret
   603 |          |                           | L_clib_16:
   604 | 00000446 | 55                        | 	push	bp
   605 | 00000447 | 89E5                      | 	mov	bp, sp
   606 | 00000449 | 51                        | 	push	cx
   607 | 0000044A | EBDE                      | 	jmp	L_clib_17
   608 |          |                           | 	ALIGN	2
   609 |          |                           | printInt:
   610 | 0000044C | E99500                    | 	jmp	L_clib_19
   611 |          |                           | L_clib_20:
   612 | 0000044F | C746FE0000                | 	mov	word [bp-2], 0
   613 | 00000454 | C746FC1027                | 	mov	word [bp-4], 10000
   614 | 00000459 | 837E0400                  | 	cmp	word [bp+4], 0
   615 | 0000045D | 7D0F                      | 	jge	L_clib_21
   616 | 0000045F | C646F62D                  | 	mov	byte [bp-10], 45
   617 | 00000463 | FF46FE                    | 	inc	word [bp-2]
   618 | 00000466 | 8B4604                    | 	mov	ax, word [bp+4]
   619 | 00000469 | F7D8                      | 	neg	ax
   620 | 0000046B | 894604                    | 	mov	word [bp+4], ax
   621 |          |                           | L_clib_21:
   622 | 0000046E | 8B4604                    | 	mov	ax, word [bp+4]
   623 | 00000471 | 85C0                      | 	test	ax, ax
   624 | 00000473 | 7507                      | 	jne	L_clib_22
   625 | 00000475 | C746FC0100                | 	mov	word [bp-4], 1
   626 | 0000047A | EB19                      | 	jmp	L_clib_23
   627 |          |                           | L_clib_22:
   628 | 0000047C | EB0C                      | 	jmp	L_clib_25
   629 |          |                           | L_clib_24:
   630 | 0000047E | 8B46FC                    | 	mov	ax, word [bp-4]
   631 | 00000481 | 99                        | 	cwd
   632 | 00000482 | B90A00                    | 	mov	cx, 10
   633 | 00000485 | F7F9                      | 	idiv	cx
   634 | 00000487 | 8946FC                    | 	mov	word [bp-4], ax
   635 |          |                           | L_clib_25:
   636 | 0000048A | 8B4604                    | 	mov	ax, word [bp+4]
   637 | 0000048D | 99                        | 	cwd
   638 | 0000048E | F77EFC                    | 	idiv	word [bp-4]
   639 | 00000491 | 85C0                      | 	test	ax, ax
   640 | 00000493 | 74E9                      | 	je	L_clib_24
   641 |          |                           | L_clib_26:
   642 |          |                           | L_clib_23:
   643 | 00000495 | EB36                      | 	jmp	L_clib_28
   644 |          |                           | L_clib_27:
   645 | 00000497 | 8B4604                    | 	mov	ax, word [bp+4]
   646 | 0000049A | 31D2                      | 	xor	dx, dx
   647 | 0000049C | F776FC                    | 	div	word [bp-4]
   648 | 0000049F | 0430                      | 	add	al, 48
   649 | 000004A1 | 8B76FE                    | 	mov	si, word [bp-2]
   650 | 000004A4 | 8D56F6                    | 	lea	dx, [bp-10]
   651 | 000004A7 | 01D6                      | 	add	si, dx
   652 | 000004A9 | 8804                      | 	mov	byte [si], al
   653 | 000004AB | FF46FE                    | 	inc	word [bp-2]
   654 | 000004AE | 8B4604                    | 	mov	ax, word [bp+4]
   655 | 000004B1 | 31D2                      | 	xor	dx, dx
   656 | 000004B3 | F776FC                    | 	div	word [bp-4]
   657 | 000004B6 | 89D0                      | 	mov	ax, dx
   658 | 000004B8 | 894604                    | 	mov	word [bp+4], ax
   659 | 000004BB | 8B46FC                    | 	mov	ax, word [bp-4]
   660 | 000004BE | 99                        | 	cwd
   661 | 000004BF | B90A00                    | 	mov	cx, 10
   662 | 000004C2 | F7F9                      | 	idiv	cx
   663 | 000004C4 | 8946FC                    | 	mov	word [bp-4], ax
   664 | 000004C7 | 8B46FC                    | 	mov	ax, word [bp-4]
   665 | 000004CA | 8946FC                    | 	mov	word [bp-4], ax
   666 |          |                           | L_clib_28:
   667 | 000004CD | 837EFC00                  | 	cmp	word [bp-4], 0
   668 | 000004D1 | 7FC4                      | 	jg	L_clib_27
   669 |          |                           | L_clib_29:
   670 | 000004D3 | FF76FE                    | 	push	word [bp-2]
   671 | 000004D6 | 8D46F6                    | 	lea	ax, [bp-10]
   672 | 000004D9 | 50                        | 	push	ax
   673 | 000004DA | E80FFF                    | 	call	print
   674 | 000004DD | 83C404                    | 	add	sp, 4
   675 | 000004E0 | 89EC                      | 	mov	sp, bp
   676 | 000004E2 | 5D                        | 	pop	bp
   677 | 000004E3 | C3                        | 	ret
   678 |          |                           | L_clib_19:
   679 | 000004E4 | 55                        | 	push	bp
   680 | 000004E5 | 89E5                      | 	mov	bp, sp
   681 | 000004E7 | 83EC0A                    | 	sub	sp, 10
   682 | 000004EA | E962FF                    | 	jmp	L_clib_20
   683 | 000004ED | 90                        | 	ALIGN	2
   684 |          |                           | printLong:
   685 | 000004EE | E9D200                    | 	jmp	L_clib_31
   686 |          |                           | L_clib_32:
   687 | 000004F1 | C746FE0000                | 	mov	word [bp-2], 0
   688 | 000004F6 | C746FA00CA                | 	mov	word [bp-6], 51712
   689 | 000004FB | C746FC9A3B                | 	mov	word [bp-4], 15258
   690 | 00000500 | 837E0600                  | 	cmp	word [bp+6], 0
   691 | 00000504 | 7F22                      | 	jg	L_clib_33
   692 | 00000506 | 7C06                      | 	jl	L_clib_34
   693 | 00000508 | 837E0400                  | 	cmp	word [bp+4], 0
   694 | 0000050C | 731A                      | 	jae	L_clib_33
   695 |          |                           | L_clib_34:
   696 | 0000050E | C646EF2D                  | 	mov	byte [bp-17], 45
   697 | 00000512 | FF46FE                    | 	inc	word [bp-2]
   698 | 00000515 | 8B4604                    | 	mov	ax, word [bp+4]
   699 | 00000518 | 8B5606                    | 	mov	dx, word [bp+6]
   700 | 0000051B | F7D8                      | 	neg	ax
   701 | 0000051D | 83D200                    | 	adc	dx, 0
   702 | 00000520 | F7DA                      | 	neg	dx
   703 | 00000522 | 894604                    | 	mov	word [bp+4], ax
   704 | 00000525 | 895606                    | 	mov	word [bp+6], dx
   705 |          |                           | L_clib_33:
   706 | 00000528 | 8B4604                    | 	mov	ax, word [bp+4]
   707 | 0000052B | 8B5606                    | 	mov	dx, word [bp+6]
   708 | 0000052E | 09C2                      | 	or	dx, ax
   709 | 00000530 | 750C                      | 	jne	L_clib_35
   710 | 00000532 | C746FA0100                | 	mov	word [bp-6], 1
   711 | 00000537 | C746FC0000                | 	mov	word [bp-4], 0
   712 | 0000053C | EB23                      | 	jmp	L_clib_36
   713 |          |                           | L_clib_35:
   714 | 0000053E | EB0E                      | 	jmp	L_clib_38
   715 |          |                           | L_clib_37:
   716 | 00000540 | B80A00                    | 	mov	ax, 10
   717 | 00000543 | 31D2                      | 	xor	dx, dx
   718 | 00000545 | 52                        | 	push	dx
   719 | 00000546 | 50                        | 	push	ax
   720 | 00000547 | 8D46FA                    | 	lea	ax, [bp-6]
   721 | 0000054A | 50                        | 	push	ax
   722 | 0000054B | E8B5FB                    | 	call	SR_asldiv
   723 |          |                           | L_clib_38:
   724 | 0000054E | FF76FC                    | 	push	word [bp-4]
   725 | 00000551 | FF76FA                    | 	push	word [bp-6]
   726 | 00000554 | FF7606                    | 	push	word [bp+6]
   727 | 00000557 | FF7604                    | 	push	word [bp+4]
   728 | 0000055A | E8F8FC                    | 	call	SR_ldiv
   729 | 0000055D | 09C2                      | 	or	dx, ax
   730 | 0000055F | 74DF                      | 	je	L_clib_37
   731 |          |                           | L_clib_39:
   732 |          |                           | L_clib_36:
   733 | 00000561 | EB41                      | 	jmp	L_clib_41
   734 |          |                           | L_clib_40:
   735 | 00000563 | FF76FC                    | 	push	word [bp-4]
   736 | 00000566 | FF76FA                    | 	push	word [bp-6]
   737 | 00000569 | FF7606                    | 	push	word [bp+6]
   738 | 0000056C | FF7604                    | 	push	word [bp+4]
   739 | 0000056F | E8EAFC                    | 	call	SR_uldiv
   740 | 00000572 | 0430                      | 	add	al, 48
   741 | 00000574 | 8B76FE                    | 	mov	si, word [bp-2]
   742 | 00000577 | 8D56EF                    | 	lea	dx, [bp-17]
   743 | 0000057A | 01D6                      | 	add	si, dx
   744 | 0000057C | 8804                      | 	mov	byte [si], al
   745 | 0000057E | FF46FE                    | 	inc	word [bp-2]
   746 | 00000581 | FF76FC                    | 	push	word [bp-4]
   747 | 00000584 | FF76FA                    | 	push	word [bp-6]
   748 | 00000587 | FF7606                    | 	push	word [bp+6]
   749 | 0000058A | FF7604                    | 	push	word [bp+4]
   750 | 0000058D | E8D4FC                    | 	call	SR_lmod
   751 | 00000590 | 894604                    | 	mov	word [bp+4], ax
   752 | 00000593 | 895606                    | 	mov	word [bp+6], dx
   753 | 00000596 | B80A00                    | 	mov	ax, 10
   754 | 00000599 | 31D2                      | 	xor	dx, dx
   755 | 0000059B | 52                        | 	push	dx
   756 | 0000059C | 50                        | 	push	ax
   757 | 0000059D | 8D46FA                    | 	lea	ax, [bp-6]
   758 | 000005A0 | 50                        | 	push	ax
   759 | 000005A1 | E85FFB                    | 	call	SR_asldiv
   760 |          |                           | L_clib_41:
   761 | 000005A4 | 837EFC00                  | 	cmp	word [bp-4], 0
   762 | 000005A8 | 7FB9                      | 	jg	L_clib_40
   763 | 000005AA | 7506                      | 	jne	L_clib_43
   764 | 000005AC | 837EFA00                  | 	cmp	word [bp-6], 0
   765 | 000005B0 | 77B1                      | 	ja	L_clib_40
   766 |          |                           | L_clib_43:
   767 |          |                           | L_clib_42:
   768 | 000005B2 | FF76FE                    | 	push	word [bp-2]
   769 | 000005B5 | 8D46EF                    | 	lea	ax, [bp-17]
   770 | 000005B8 | 50                        | 	push	ax
   771 | 000005B9 | E830FE                    | 	call	print
   772 | 000005BC | 83C404                    | 	add	sp, 4
   773 | 000005BF | 89EC                      | 	mov	sp, bp
   774 | 000005C1 | 5D                        | 	pop	bp
   775 | 000005C2 | C3                        | 	ret
   776 |          |                           | L_clib_31:
   777 | 000005C3 | 55                        | 	push	bp
   778 | 000005C4 | 89E5                      | 	mov	bp, sp
   779 | 000005C6 | 83EC12                    | 	sub	sp, 18
   780 | 000005C9 | E925FF                    | 	jmp	L_clib_32
   781 |          |                           | 	ALIGN	2
   782 |          |                           | printUInt:
   783 | 000005CC | EB7C                      | 	jmp	L_clib_45
   784 |          |                           | L_clib_46:
   785 | 000005CE | C746FE0000                | 	mov	word [bp-2], 0
   786 | 000005D3 | C746FC1027                | 	mov	word [bp-4], 10000
   787 | 000005D8 | 8B4604                    | 	mov	ax, word [bp+4]
   788 | 000005DB | 85C0                      | 	test	ax, ax
   789 | 000005DD | 7507                      | 	jne	L_clib_47
   790 | 000005DF | C746FC0100                | 	mov	word [bp-4], 1
   791 | 000005E4 | EB1B                      | 	jmp	L_clib_48
   792 |          |                           | L_clib_47:
   793 | 000005E6 | EB0D                      | 	jmp	L_clib_50
   794 |          |                           | L_clib_49:
   795 | 000005E8 | 8B46FC                    | 	mov	ax, word [bp-4]
   796 | 000005EB | 31D2                      | 	xor	dx, dx
   797 | 000005ED | B90A00                    | 	mov	cx, 10
   798 | 000005F0 | F7F1                      | 	div	cx
   799 | 000005F2 | 8946FC                    | 	mov	word [bp-4], ax
   800 |          |                           | L_clib_50:
   801 | 000005F5 | 8B4604                    | 	mov	ax, word [bp+4]
   802 | 000005F8 | 31D2                      | 	xor	dx, dx
   803 | 000005FA | F776FC                    | 	div	word [bp-4]
   804 | 000005FD | 85C0                      | 	test	ax, ax
   805 | 000005FF | 74E7                      | 	je	L_clib_49
   806 |          |                           | L_clib_51:
   807 |          |                           | L_clib_48:
   808 | 00000601 | EB2F                      | 	jmp	L_clib_53
   809 |          |                           | L_clib_52:
   810 | 00000603 | 8B4604                    | 	mov	ax, word [bp+4]
   811 | 00000606 | 31D2                      | 	xor	dx, dx
   812 | 00000608 | F776FC                    | 	div	word [bp-4]
   813 | 0000060B | 0430                      | 	add	al, 48
   814 | 0000060D | 8B76FE                    | 	mov	si, word [bp-2]
   815 | 00000610 | 8D56F6                    | 	lea	dx, [bp-10]
   816 | 00000613 | 01D6                      | 	add	si, dx
   817 | 00000615 | 8804                      | 	mov	byte [si], al
   818 | 00000617 | FF46FE                    | 	inc	word [bp-2]
   819 | 0000061A | 8B4604                    | 	mov	ax, word [bp+4]
   820 | 0000061D | 31D2                      | 	xor	dx, dx
   821 | 0000061F | F776FC                    | 	div	word [bp-4]
   822 | 00000622 | 895604                    | 	mov	word [bp+4], dx
   823 | 00000625 | 8B46FC                    | 	mov	ax, word [bp-4]
   824 | 00000628 | 31D2                      | 	xor	dx, dx
   825 | 0000062A | B90A00                    | 	mov	cx, 10
   826 | 0000062D | F7F1                      | 	div	cx
   827 | 0000062F | 8946FC                    | 	mov	word [bp-4], ax
   828 |          |                           | L_clib_53:
   829 | 00000632 | 8B46FC                    | 	mov	ax, word [bp-4]
   830 | 00000635 | 85C0                      | 	test	ax, ax
   831 | 00000637 | 75CA                      | 	jne	L_clib_52
   832 |          |                           | L_clib_54:
   833 | 00000639 | FF76FE                    | 	push	word [bp-2]
   834 | 0000063C | 8D46F6                    | 	lea	ax, [bp-10]
   835 | 0000063F | 50                        | 	push	ax
   836 | 00000640 | E8A9FD                    | 	call	print
   837 | 00000643 | 83C404                    | 	add	sp, 4
   838 | 00000646 | 89EC                      | 	mov	sp, bp
   839 | 00000648 | 5D                        | 	pop	bp
   840 | 00000649 | C3                        | 	ret
   841 |          |                           | L_clib_45:
   842 | 0000064A | 55                        | 	push	bp
   843 | 0000064B | 89E5                      | 	mov	bp, sp
   844 | 0000064D | 83EC0A                    | 	sub	sp, 10
   845 | 00000650 | E97BFF                    | 	jmp	L_clib_46
   846 | 00000653 | 90                        | 	ALIGN	2
   847 |          |                           | printULong:
   848 | 00000654 | E99E00                    | 	jmp	L_clib_56
   849 |          |                           | L_clib_57:
   850 | 00000657 | C746FE0000                | 	mov	word [bp-2], 0
   851 | 0000065C | C746FA00CA                | 	mov	word [bp-6], 51712
   852 | 00000661 | C746FC9A3B                | 	mov	word [bp-4], 15258
   853 | 00000666 | 8B4604                    | 	mov	ax, word [bp+4]
   854 | 00000669 | 8B5606                    | 	mov	dx, word [bp+6]
   855 | 0000066C | 09C2                      | 	or	dx, ax
   856 | 0000066E | 750C                      | 	jne	L_clib_58
   857 | 00000670 | C746FA0100                | 	mov	word [bp-6], 1
   858 | 00000675 | C746FC0000                | 	mov	word [bp-4], 0
   859 | 0000067A | EB23                      | 	jmp	L_clib_59
   860 |          |                           | L_clib_58:
   861 | 0000067C | EB0E                      | 	jmp	L_clib_61
   862 |          |                           | L_clib_60:
   863 | 0000067E | B80A00                    | 	mov	ax, 10
   864 | 00000681 | 31D2                      | 	xor	dx, dx
   865 | 00000683 | 52                        | 	push	dx
   866 | 00000684 | 50                        | 	push	ax
   867 | 00000685 | 8D46FA                    | 	lea	ax, [bp-6]
   868 | 00000688 | 50                        | 	push	ax
   869 | 00000689 | E820FB                    | 	call	SR_asuldiv
   870 |          |                           | L_clib_61:
   871 | 0000068C | FF76FC                    | 	push	word [bp-4]
   872 | 0000068F | FF76FA                    | 	push	word [bp-6]
   873 | 00000692 | FF7606                    | 	push	word [bp+6]
   874 | 00000695 | FF7604                    | 	push	word [bp+4]
   875 | 00000698 | E8C1FB                    | 	call	SR_uldiv
   876 | 0000069B | 09C2                      | 	or	dx, ax
   877 | 0000069D | 74DF                      | 	je	L_clib_60
   878 |          |                           | L_clib_62:
   879 |          |                           | L_clib_59:
   880 | 0000069F | EB39                      | 	jmp	L_clib_64
   881 |          |                           | L_clib_63:
   882 | 000006A1 | FF76FC                    | 	push	word [bp-4]
   883 | 000006A4 | FF76FA                    | 	push	word [bp-6]
   884 | 000006A7 | FF7606                    | 	push	word [bp+6]
   885 | 000006AA | FF7604                    | 	push	word [bp+4]
   886 | 000006AD | E8ACFB                    | 	call	SR_uldiv
   887 | 000006B0 | 0430                      | 	add	al, 48
   888 | 000006B2 | 8B76FE                    | 	mov	si, word [bp-2]
   889 | 000006B5 | 8D56EF                    | 	lea	dx, [bp-17]
   890 | 000006B8 | 01D6                      | 	add	si, dx
   891 | 000006BA | 8804                      | 	mov	byte [si], al
   892 | 000006BC | FF46FE                    | 	inc	word [bp-2]
   893 | 000006BF | FF76FC                    | 	push	word [bp-4]
   894 | 000006C2 | FF76FA                    | 	push	word [bp-6]
   895 | 000006C5 | 8D4604                    | 	lea	ax, [bp+4]
   896 | 000006C8 | 50                        | 	push	ax
   897 | 000006C9 | E800FB                    | 	call	SR_asilmod
   898 | 000006CC | B80A00                    | 	mov	ax, 10
   899 | 000006CF | 31D2                      | 	xor	dx, dx
   900 | 000006D1 | 52                        | 	push	dx
   901 | 000006D2 | 50                        | 	push	ax
   902 | 000006D3 | 8D46FA                    | 	lea	ax, [bp-6]
   903 | 000006D6 | 50                        | 	push	ax
   904 | 000006D7 | E8D2FA                    | 	call	SR_asuldiv
   905 |          |                           | L_clib_64:
   906 | 000006DA | 8B46FA                    | 	mov	ax, word [bp-6]
   907 | 000006DD | 8B56FC                    | 	mov	dx, word [bp-4]
   908 | 000006E0 | 09C2                      | 	or	dx, ax
   909 | 000006E2 | 75BD                      | 	jne	L_clib_63
   910 |          |                           | L_clib_65:
   911 | 000006E4 | FF76FE                    | 	push	word [bp-2]
   912 | 000006E7 | 8D46EF                    | 	lea	ax, [bp-17]
   913 | 000006EA | 50                        | 	push	ax
   914 | 000006EB | E8FEFC                    | 	call	print
   915 | 000006EE | 83C404                    | 	add	sp, 4
   916 | 000006F1 | 89EC                      | 	mov	sp, bp
   917 | 000006F3 | 5D                        | 	pop	bp
   918 | 000006F4 | C3                        | 	ret
   919 |          |                           | L_clib_56:
   920 | 000006F5 | 55                        | 	push	bp
   921 | 000006F6 | 89E5                      | 	mov	bp, sp
   922 | 000006F8 | 83EC12                    | 	sub	sp, 18
   923 | 000006FB | E959FF                    | 	jmp	L_clib_57
   924 |          |                           | 	ALIGN	2
   925 |          |                           | printByte:
   926 | 000006FE | EB61                      | 	jmp	L_clib_67
   927 |          |                           | L_clib_68:
   928 | 00000700 | 8A4604                    | 	mov	al, byte [bp+4]
   929 | 00000703 | 98                        | 	cbw
   930 | 00000704 | B90400                    | 	mov	cx, 4
   931 | 00000707 | D3F8                      | 	sar	ax, cl
   932 | 00000709 | 83E00F                    | 	and	ax, 15
   933 | 0000070C | 8846FF                    | 	mov	byte [bp-1], al
   934 | 0000070F | 807EFF09                  | 	cmp	byte [bp-1], 9
   935 | 00000713 | 7E0C                      | 	jle	L_clib_69
   936 | 00000715 | 8A46FF                    | 	mov	al, byte [bp-1]
   937 | 00000718 | 98                        | 	cbw
   938 | 00000719 | 83E80A                    | 	sub	ax, 10
   939 | 0000071C | 83C041                    | 	add	ax, 65
   940 | 0000071F | EB07                      | 	jmp	L_clib_70
   941 |          |                           | L_clib_69:
   942 | 00000721 | 8A46FF                    | 	mov	al, byte [bp-1]
   943 | 00000724 | 98                        | 	cbw
   944 | 00000725 | 83C030                    | 	add	ax, 48
   945 |          |                           | L_clib_70:
   946 | 00000728 | 8846FD                    | 	mov	byte [bp-3], al
   947 | 0000072B | 8A4604                    | 	mov	al, byte [bp+4]
   948 | 0000072E | 240F                      | 	and	al, 15
   949 | 00000730 | 8846FF                    | 	mov	byte [bp-1], al
   950 | 00000733 | 807EFF09                  | 	cmp	byte [bp-1], 9
   951 | 00000737 | 7E0C                      | 	jle	L_clib_71
   952 | 00000739 | 8A46FF                    | 	mov	al, byte [bp-1]
   953 | 0000073C | 98                        | 	cbw
   954 | 0000073D | 83E80A                    | 	sub	ax, 10
   955 | 00000740 | 83C041                    | 	add	ax, 65
   956 | 00000743 | EB07                      | 	jmp	L_clib_72
   957 |          |                           | L_clib_71:
   958 | 00000745 | 8A46FF                    | 	mov	al, byte [bp-1]
   959 | 00000748 | 98                        | 	cbw
   960 | 00000749 | 83C030                    | 	add	ax, 48
   961 |          |                           | L_clib_72:
   962 | 0000074C | 8846FE                    | 	mov	byte [bp-2], al
   963 | 0000074F | B80200                    | 	mov	ax, 2
   964 | 00000752 | 50                        | 	push	ax
   965 | 00000753 | 8D46FD                    | 	lea	ax, [bp-3]
   966 | 00000756 | 50                        | 	push	ax
   967 | 00000757 | E892FC                    | 	call	print
   968 | 0000075A | 83C404                    | 	add	sp, 4
   969 | 0000075D | 89EC                      | 	mov	sp, bp
   970 | 0000075F | 5D                        | 	pop	bp
   971 | 00000760 | C3                        | 	ret
   972 |          |                           | L_clib_67:
   973 | 00000761 | 55                        | 	push	bp
   974 | 00000762 | 89E5                      | 	mov	bp, sp
   975 | 00000764 | 83EC04                    | 	sub	sp, 4
   976 | 00000767 | EB97                      | 	jmp	L_clib_68
   977 | 00000769 | 90                        | 	ALIGN	2
   978 |          |                           | printWord:
   979 | 0000076A | EB59                      | 	jmp	L_clib_74
   980 |          |                           | L_clib_75:
   981 | 0000076C | C746FE0300                | 	mov	word [bp-2], 3
   982 | 00000771 | EB3A                      | 	jmp	L_clib_77
   983 |          |                           | L_clib_76:
   984 | 00000773 | 8B4604                    | 	mov	ax, word [bp+4]
   985 | 00000776 | 83E00F                    | 	and	ax, 15
   986 | 00000779 | 8846FD                    | 	mov	byte [bp-3], al
   987 | 0000077C | 807EFD09                  | 	cmp	byte [bp-3], 9
   988 | 00000780 | 7E0C                      | 	jle	L_clib_80
   989 | 00000782 | 8A46FD                    | 	mov	al, byte [bp-3]
   990 | 00000785 | 98                        | 	cbw
   991 | 00000786 | 83E80A                    | 	sub	ax, 10
   992 | 00000789 | 83C041                    | 	add	ax, 65
   993 | 0000078C | EB07                      | 	jmp	L_clib_81
   994 |          |                           | L_clib_80:
   995 | 0000078E | 8A46FD                    | 	mov	al, byte [bp-3]
   996 | 00000791 | 98                        | 	cbw
   997 | 00000792 | 83C030                    | 	add	ax, 48
   998 |          |                           | L_clib_81:
   999 | 00000795 | 8B76FE                    | 	mov	si, word [bp-2]
  1000 | 00000798 | 8D56F9                    | 	lea	dx, [bp-7]
  1001 | 0000079B | 01D6                      | 	add	si, dx
  1002 | 0000079D | 8804                      | 	mov	byte [si], al
  1003 | 0000079F | 8B4604                    | 	mov	ax, word [bp+4]
  1004 | 000007A2 | B90400                    | 	mov	cx, 4
  1005 | 000007A5 | D3F8                      | 	sar	ax, cl
  1006 | 000007A7 | 894604                    | 	mov	word [bp+4], ax
  1007 |          |                           | L_clib_79:
  1008 | 000007AA | FF4EFE                    | 	dec	word [bp-2]
  1009 |          |                           | L_clib_77:
  1010 | 000007AD | 837EFE00                  | 	cmp	word [bp-2], 0
  1011 | 000007B1 | 7DC0                      | 	jge	L_clib_76
  1012 |          |                           | L_clib_78:
  1013 | 000007B3 | B80400                    | 	mov	ax, 4
  1014 | 000007B6 | 50                        | 	push	ax
  1015 | 000007B7 | 8D46F9                    | 	lea	ax, [bp-7]
  1016 | 000007BA | 50                        | 	push	ax
  1017 | 000007BB | E82EFC                    | 	call	print
  1018 | 000007BE | 83C404                    | 	add	sp, 4
  1019 | 000007C1 | 89EC                      | 	mov	sp, bp
  1020 | 000007C3 | 5D                        | 	pop	bp
  1021 | 000007C4 | C3                        | 	ret
  1022 |          |                           | L_clib_74:
  1023 | 000007C5 | 55                        | 	push	bp
  1024 | 000007C6 | 89E5                      | 	mov	bp, sp
  1025 | 000007C8 | 83EC08                    | 	sub	sp, 8
  1026 | 000007CB | EB9F                      | 	jmp	L_clib_75
  1027 | 000007CD | 90                        | 	ALIGN	2
  1028 |          |                           | printDWord:
  1029 | 000007CE | E9AC00                    | 	jmp	L_clib_83
  1030 |          |                           | L_clib_84:
  1031 | 000007D1 | 8D4604                    | 	lea	ax, [bp+4]
  1032 | 000007D4 | 89C6                      | 	mov	si, ax
  1033 | 000007D6 | 8B04                      | 	mov	ax, word [si]
  1034 | 000007D8 | 8946FA                    | 	mov	word [bp-6], ax
  1035 | 000007DB | 8D4604                    | 	lea	ax, [bp+4]
  1036 | 000007DE | 89C6                      | 	mov	si, ax
  1037 | 000007E0 | 83C602                    | 	add	si, 2
  1038 | 000007E3 | 8B04                      | 	mov	ax, word [si]
  1039 | 000007E5 | 8946F8                    | 	mov	word [bp-8], ax
  1040 | 000007E8 | C746FE0300                | 	mov	word [bp-2], 3
  1041 | 000007ED | EB76                      | 	jmp	L_clib_86
  1042 |          |                           | L_clib_85:
  1043 | 000007EF | 8B46FA                    | 	mov	ax, word [bp-6]
  1044 | 000007F2 | 83E00F                    | 	and	ax, 15
  1045 | 000007F5 | 8846FD                    | 	mov	byte [bp-3], al
  1046 | 000007F8 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1047 | 000007FC | 7E0C                      | 	jle	L_clib_89
  1048 | 000007FE | 8A46FD                    | 	mov	al, byte [bp-3]
  1049 | 00000801 | 98                        | 	cbw
  1050 | 00000802 | 83E80A                    | 	sub	ax, 10
  1051 | 00000805 | 83C041                    | 	add	ax, 65
  1052 | 00000808 | EB07                      | 	jmp	L_clib_90
  1053 |          |                           | L_clib_89:
  1054 | 0000080A | 8A46FD                    | 	mov	al, byte [bp-3]
  1055 | 0000080D | 98                        | 	cbw
  1056 | 0000080E | 83C030                    | 	add	ax, 48
  1057 |          |                           | L_clib_90:
  1058 | 00000811 | 8B56FE                    | 	mov	dx, word [bp-2]
  1059 | 00000814 | 83C204                    | 	add	dx, 4
  1060 | 00000817 | 89D6                      | 	mov	si, dx
  1061 | 00000819 | 8D56F0                    | 	lea	dx, [bp-16]
  1062 | 0000081C | 01D6                      | 	add	si, dx
  1063 | 0000081E | 8804                      | 	mov	byte [si], al
  1064 | 00000820 | 8B46FA                    | 	mov	ax, word [bp-6]
  1065 | 00000823 | B90400                    | 	mov	cx, 4
  1066 | 00000826 | D3F8                      | 	sar	ax, cl
  1067 | 00000828 | 8946FA                    | 	mov	word [bp-6], ax
  1068 | 0000082B | 8B46F8                    | 	mov	ax, word [bp-8]
  1069 | 0000082E | 83E00F                    | 	and	ax, 15
  1070 | 00000831 | 8846FD                    | 	mov	byte [bp-3], al
  1071 | 00000834 | 807EFD09                  | 	cmp	byte [bp-3], 9
  1072 | 00000838 | 7E0C                      | 	jle	L_clib_91
  1073 | 0000083A | 8A46FD                    | 	mov	al, byte [bp-3]
  1074 | 0000083D | 98                        | 	cbw
  1075 | 0000083E | 83E80A                    | 	sub	ax, 10
  1076 | 00000841 | 83C041                    | 	add	ax, 65
  1077 | 00000844 | EB07                      | 	jmp	L_clib_92
  1078 |          |                           | L_clib_91:
  1079 | 00000846 | 8A46FD                    | 	mov	al, byte [bp-3]
  1080 | 00000849 | 98                        | 	cbw
  1081 | 0000084A | 83C030                    | 	add	ax, 48
  1082 |          |                           | L_clib_92:
  1083 | 0000084D | 8B76FE                    | 	mov	si, word [bp-2]
  1084 | 00000850 | 8D56F0                    | 	lea	dx, [bp-16]
  1085 | 00000853 | 01D6                      | 	add	si, dx
  1086 | 00000855 | 8804                      | 	mov	byte [si], al
  1087 | 00000857 | 8B46F8                    | 	mov	ax, word [bp-8]
  1088 | 0000085A | B90400                    | 	mov	cx, 4
  1089 | 0000085D | D3F8                      | 	sar	ax, cl
  1090 | 0000085F | 8946F8                    | 	mov	word [bp-8], ax
  1091 |          |                           | L_clib_88:
  1092 | 00000862 | FF4EFE                    | 	dec	word [bp-2]
  1093 |          |                           | L_clib_86:
  1094 | 00000865 | 837EFE00                  | 	cmp	word [bp-2], 0
  1095 | 00000869 | 7D84                      | 	jge	L_clib_85
  1096 |          |                           | L_clib_87:
  1097 | 0000086B | B80800                    | 	mov	ax, 8
  1098 | 0000086E | 50                        | 	push	ax
  1099 | 0000086F | 8D46F0                    | 	lea	ax, [bp-16]
  1100 | 00000872 | 50                        | 	push	ax
  1101 | 00000873 | E876FB                    | 	call	print
  1102 | 00000876 | 83C404                    | 	add	sp, 4
  1103 | 00000879 | 89EC                      | 	mov	sp, bp
  1104 | 0000087B | 5D                        | 	pop	bp
  1105 | 0000087C | C3                        | 	ret
  1106 |          |                           | L_clib_83:
  1107 | 0000087D | 55                        | 	push	bp
  1108 | 0000087E | 89E5                      | 	mov	bp, sp
  1109 | 00000880 | 83EC10                    | 	sub	sp, 16
  1110 | 00000883 | E94BFF                    | 	jmp	L_clib_84
  1111 |          |                           | CPU	8086
  1112 |          |                           | align	2
  1113 |          |                           | 
  1114 |          |                           | reset:
  1115 |          |                           | 
  1116 | 00000886 | 55                        |     push bp
  1117 | 00000887 | 89E5                      |     mov bp, sp
  1118 | 00000889 | E8C200                    |     call resetHandler
  1119 |          |                           | 
  1120 |          |                           | 
  1121 |          |                           | tick:
  1122 |          |                           | 
  1123 |          |                           |     ;Save context
  1124 | 0000088C | 50                        |     push ax
  1125 | 0000088D | 53                        |     push bx
  1126 | 0000088E | 51                        |     push cx
  1127 | 0000088F | 52                        |     push dx
  1128 | 00000890 | 56                        |     push si
  1129 | 00000891 | 57                        |     push di
  1130 | 00000892 | 55                        |     push bp
  1131 | 00000893 | 06                        |     push es
  1132 | 00000894 | 1E                        |     push ds
  1133 |          |                           | 
  1134 | 00000895 | E81E04                    |     call YKEnterISR
  1135 |          |                           | 
  1136 |          |                           |     ;Enable interrupts
  1137 | 00000898 | FB                        |     sti
  1138 | 00000899 | E80A01                    |     call tickHandler
  1139 | 0000089C | FA                        |     cli
  1140 | 0000089D | E82AFB                    |     call signalEOI
  1141 |          |                           | 
  1142 | 000008A0 | E82304                    |     call YKExitISR
  1143 |          |                           | 
  1144 | 000008A3 | 1F                        |     pop ds
  1145 | 000008A4 | 07                        |     pop es
  1146 | 000008A5 | 5D                        |     pop bp
  1147 | 000008A6 | 5F                        |     pop di
  1148 | 000008A7 | 5E                        |     pop si
  1149 | 000008A8 | 5A                        |     pop dx
  1150 | 000008A9 | 59                        |     pop cx
  1151 | 000008AA | 5B                        |     pop bx
  1152 | 000008AB | 58                        |     pop ax
  1153 |          |                           |     
  1154 | 000008AC | CF                        |     iret
  1155 |          |                           | 
  1156 |          |                           | keypress:
  1157 |          |                           | 
  1158 |          |                           |     ;Save context
  1159 | 000008AD | 50                        |     push ax
  1160 | 000008AE | 53                        |     push bx
  1161 | 000008AF | 51                        |     push cx
  1162 | 000008B0 | 52                        |     push dx
  1163 | 000008B1 | 56                        |     push si
  1164 | 000008B2 | 57                        |     push di
  1165 | 000008B3 | 55                        |     push bp
  1166 | 000008B4 | 06                        |     push es
  1167 | 000008B5 | 1E                        |     push ds
  1168 |          |                           |     ;Enable interrupts
  1169 | 000008B6 | E8FD03                    |     call YKEnterISR
  1170 | 000008B9 | FB                        |     sti
  1171 | 000008BA | E82B01                    |     call keypressHandler
  1172 | 000008BD | FA                        |     cli
  1173 | 000008BE | E809FB                    |     call signalEOI
  1174 | 000008C1 | E80204                    |     call YKExitISR
  1175 |          |                           | 
  1176 | 000008C4 | 1F                        |     pop ds
  1177 | 000008C5 | 07                        |     pop es
  1178 | 000008C6 | 5D                        |     pop bp
  1179 | 000008C7 | 5F                        |     pop di
  1180 | 000008C8 | 5E                        |     pop si
  1181 | 000008C9 | 5A                        |     pop dx
  1182 | 000008CA | 59                        |     pop cx
  1183 | 000008CB | 5B                        |     pop bx
  1184 | 000008CC | 58                        |     pop ax
  1185 |          |                           |     
  1186 | 000008CD | CF                        |     iret
  1187 |          |                           | 
  1188 |          |                           | gameOver:
  1189 | 000008CE | CF                        |     iret
  1190 |          |                           |     
  1191 |          |                           | newPiece:
  1192 | 000008CF | 50                        |     push ax
  1193 | 000008D0 | 53                        |     push bx
  1194 | 000008D1 | 51                        |     push cx
  1195 | 000008D2 | 52                        |     push dx
  1196 | 000008D3 | 56                        |     push si
  1197 | 000008D4 | 57                        |     push di
  1198 | 000008D5 | 55                        |     push bp
  1199 | 000008D6 | 06                        |     push es
  1200 | 000008D7 | 1E                        |     push ds
  1201 |          |                           | 
  1202 | 000008D8 | E8DB03                    |     call YKEnterISR
  1203 | 000008DB | FB                        |     sti
  1204 | 000008DC | E89900                    |     call newPieceHandler
  1205 | 000008DF | FA                        |     cli 
  1206 | 000008E0 | E8E7FA                    |     call signalEOI
  1207 | 000008E3 | E8E003                    |     call YKExitISR
  1208 |          |                           | 
  1209 | 000008E6 | 1F                        |     pop ds
  1210 | 000008E7 | 07                        |     pop es
  1211 | 000008E8 | 5D                        |     pop bp
  1212 | 000008E9 | 5F                        |     pop di
  1213 | 000008EA | 5E                        |     pop si
  1214 | 000008EB | 5A                        |     pop dx
  1215 | 000008EC | 59                        |     pop cx
  1216 | 000008ED | 5B                        |     pop bx
  1217 | 000008EE | 58                        |     pop ax
  1218 |          |                           |     
  1219 | 000008EF | CF                        |     iret
  1220 |          |                           | 
  1221 |          |                           | received:
  1222 | 000008F0 | 50                        |     push ax
  1223 | 000008F1 | 53                        |     push bx
  1224 | 000008F2 | 51                        |     push cx
  1225 | 000008F3 | 52                        |     push dx
  1226 | 000008F4 | 56                        |     push si
  1227 | 000008F5 | 57                        |     push di
  1228 | 000008F6 | 55                        |     push bp
  1229 | 000008F7 | 06                        |     push es
  1230 | 000008F8 | 1E                        |     push ds
  1231 |          |                           | 
  1232 | 000008F9 | E8BA03                    |     call YKEnterISR
  1233 | 000008FC | FB                        |     sti
  1234 | 000008FD | E86200                    |     call recievedCommandHandler
  1235 | 00000900 | FA                        |     cli 
  1236 | 00000901 | E8C6FA                    |     call signalEOI
  1237 | 00000904 | E8BF03                    |     call YKExitISR
  1238 |          |                           | 
  1239 | 00000907 | 1F                        |     pop ds
  1240 | 00000908 | 07                        |     pop es
  1241 | 00000909 | 5D                        |     pop bp
  1242 | 0000090A | 5F                        |     pop di
  1243 | 0000090B | 5E                        |     pop si
  1244 | 0000090C | 5A                        |     pop dx
  1245 | 0000090D | 59                        |     pop cx
  1246 | 0000090E | 5B                        |     pop bx
  1247 | 0000090F | 58                        |     pop ax
  1248 |          |                           |     
  1249 | 00000910 | CF                        |     iret 
  1250 |          |                           | 
  1251 |          |                           | touchdown:
  1252 | 00000911 | 50                        |     push ax
  1253 | 00000912 | 53                        |     push bx
  1254 | 00000913 | 51                        |     push cx
  1255 | 00000914 | 52                        |     push dx
  1256 | 00000915 | 56                        |     push si
  1257 | 00000916 | 57                        |     push di
  1258 | 00000917 | 55                        |     push bp
  1259 | 00000918 | 06                        |     push es
  1260 | 00000919 | 1E                        |     push ds
  1261 |          |                           | 
  1262 | 0000091A | 1F                        |     pop ds
  1263 | 0000091B | 07                        |     pop es
  1264 | 0000091C | 5D                        |     pop bp
  1265 | 0000091D | 5F                        |     pop di
  1266 | 0000091E | 5E                        |     pop si
  1267 | 0000091F | 5A                        |     pop dx
  1268 | 00000920 | 59                        |     pop cx
  1269 | 00000921 | 5B                        |     pop bx
  1270 | 00000922 | 58                        |     pop ax
  1271 |          |                           |     
  1272 | 00000923 | CF                        |     iret
  1273 |          |                           | clear:
  1274 | 00000924 | 50                        |     push ax
  1275 | 00000925 | 53                        |     push bx
  1276 | 00000926 | 51                        |     push cx
  1277 | 00000927 | 52                        |     push dx
  1278 | 00000928 | 56                        |     push si
  1279 | 00000929 | 57                        |     push di
  1280 | 0000092A | 55                        |     push bp
  1281 | 0000092B | 06                        |     push es
  1282 | 0000092C | 1E                        |     push ds
  1283 |          |                           | 
  1284 | 0000092D | E88603                    |     call YKEnterISR
  1285 | 00000930 | FB                        |     sti
  1286 | 00000931 | E85A00                    |     call lineClearedHandler
  1287 | 00000934 | FA                        |     cli 
  1288 | 00000935 | E892FA                    |     call signalEOI
  1289 | 00000938 | E88B03                    |     call YKExitISR
  1290 |          |                           |     
  1291 | 0000093B | 1F                        |     pop ds
  1292 | 0000093C | 07                        |     pop es
  1293 | 0000093D | 5D                        |     pop bp
  1294 | 0000093E | 5F                        |     pop di
  1295 | 0000093F | 5E                        |     pop si
  1296 | 00000940 | 5A                        |     pop dx
  1297 | 00000941 | 59                        |     pop cx
  1298 | 00000942 | 5B                        |     pop bx
  1299 | 00000943 | 58                        |     pop ax
  1300 |          |                           |     
  1301 | 00000944 | CF                        |     iret
  1302 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
  1303 |          |                           | 	CPU	8086
  1304 | 00000945 | 90                        | 	ALIGN	2
  1305 | 00000946 | E9CD13                    | 	jmp	main	; Jump to program start
  1306 | 00000949 | 90                        | 	ALIGN	2
  1307 |          |                           | tickCount:
  1308 | 0000094A | 0100                      | 	DW	1
  1309 |          |                           | L_myinth_1:
  1310 | 0000094C | 0000                      | 	DW	0
  1311 |          |                           | 	ALIGN	2
  1312 |          |                           | resetHandler:
  1313 |          |                           | 	; >>>>> Line:	19
  1314 |          |                           | 	; >>>>> void resetHandler(){ 
  1315 | 0000094E | EB0D                      | 	jmp	L_myinth_2
  1316 |          |                           | L_myinth_3:
  1317 |          |                           | 	; >>>>> Line:	21
  1318 |          |                           | 	; >>>>> exit(0); 
  1319 | 00000950 | 30C0                      | 	xor	al, al
  1320 | 00000952 | 50                        | 	push	ax
  1321 | 00000953 | E884FA                    | 	call	exit
  1322 | 00000956 | 83C402                    | 	add	sp, 2
  1323 | 00000959 | 89EC                      | 	mov	sp, bp
  1324 | 0000095B | 5D                        | 	pop	bp
  1325 | 0000095C | C3                        | 	ret
  1326 |          |                           | L_myinth_2:
  1327 | 0000095D | 55                        | 	push	bp
  1328 | 0000095E | 89E5                      | 	mov	bp, sp
  1329 | 00000960 | EBEE                      | 	jmp	L_myinth_3
  1330 |          |                           | 	ALIGN	2
  1331 |          |                           | recievedCommandHandler:
  1332 |          |                           | 	; >>>>> Line:	24
  1333 |          |                           | 	; >>>>> void recievedCommandHandler() { 
  1334 | 00000962 | EB0E                      | 	jmp	L_myinth_5
  1335 |          |                           | L_myinth_6:
  1336 |          |                           | 	; >>>>> Line:	25
  1337 |          |                           | 	; >>>>> YKSemPost(communicateSem); 
  1338 | 00000964 | FF36[701D]                | 	push	word [communicateSem]
  1339 | 00000968 | E83F04                    | 	call	YKSemPost
  1340 | 0000096B | 83C402                    | 	add	sp, 2
  1341 | 0000096E | 89EC                      | 	mov	sp, bp
  1342 | 00000970 | 5D                        | 	pop	bp
  1343 | 00000971 | C3                        | 	ret
  1344 |          |                           | L_myinth_5:
  1345 | 00000972 | 55                        | 	push	bp
  1346 | 00000973 | 89E5                      | 	mov	bp, sp
  1347 | 00000975 | EBED                      | 	jmp	L_myinth_6
  1348 | 00000977 | 90                        | 	ALIGN	2
  1349 |          |                           | newPieceHandler:
  1350 |          |                           | 	; >>>>> Line:	28
  1351 |          |                           | 	; >>>>> void newPieceHandler() { 
  1352 | 00000978 | EB0E                      | 	jmp	L_myinth_8
  1353 |          |                           | L_myinth_9:
  1354 |          |                           | 	; >>>>> Line:	29
  1355 |          |                           | 	; >>>>> YKSemPost(newPieceSem); 
  1356 | 0000097A | FF36[721D]                | 	push	word [newPieceSem]
  1357 | 0000097E | E82904                    | 	call	YKSemPost
  1358 | 00000981 | 83C402                    | 	add	sp, 2
  1359 | 00000984 | 89EC                      | 	mov	sp, bp
  1360 | 00000986 | 5D                        | 	pop	bp
  1361 | 00000987 | C3                        | 	ret
  1362 |          |                           | L_myinth_8:
  1363 | 00000988 | 55                        | 	push	bp
  1364 | 00000989 | 89E5                      | 	mov	bp, sp
  1365 | 0000098B | EBED                      | 	jmp	L_myinth_9
  1366 | 0000098D | 90                        | 	ALIGN	2
  1367 |          |                           | lineClearedHandler:
  1368 |          |                           | 	; >>>>> Line:	32
  1369 |          |                           | 	; >>>>> void lineClearedHandler(){ 
  1370 | 0000098E | EB0C                      | 	jmp	L_myinth_11
  1371 |          |                           | L_myinth_12:
  1372 |          |                           | 	; >>>>> Line:	33
  1373 |          |                           | 	; >>>>> straightCounter--; 
  1374 | 00000990 | FF0E[6A1D]                | 	dec	word [straightCounter]
  1375 |          |                           | 	; >>>>> Line:	34
  1376 |          |                           | 	; >>>>> cornerCounter--; 
  1377 | 00000994 | FF0E[6C1D]                | 	dec	word [cornerCounter]
  1378 | 00000998 | 89EC                      | 	mov	sp, bp
  1379 | 0000099A | 5D                        | 	pop	bp
  1380 | 0000099B | C3                        | 	ret
  1381 |          |                           | L_myinth_11:
  1382 | 0000099C | 55                        | 	push	bp
  1383 | 0000099D | 89E5                      | 	mov	bp, sp
  1384 | 0000099F | EBEF                      | 	jmp	L_myinth_12
  1385 | 000009A1 | 90                        | 	ALIGN	2
  1386 |          |                           | L_myinth_14:
  1387 | 000009A2 | 0000                      | 	DW	0
  1388 |          |                           | L_myinth_15:
  1389 | 000009A4 | 0000                      | 	DW	0
  1390 |          |                           | 	ALIGN	2
  1391 |          |                           | tickHandler:
  1392 |          |                           | 	; >>>>> Line:	37
  1393 |          |                           | 	; >>>>> void tickHandler(){ 
  1394 | 000009A6 | EB18                      | 	jmp	L_myinth_16
  1395 |          |                           | L_myinth_17:
  1396 |          |                           | 	; >>>>> Line:	43
  1397 |          |                           | 	; >>>>> data = (data + 89) % 100; 
  1398 | 000009A8 | A1[A409]                  | 	mov	ax, word [L_myinth_15]
  1399 | 000009AB | 83C059                    | 	add	ax, 89
  1400 | 000009AE | 99                        | 	cwd
  1401 | 000009AF | B96400                    | 	mov	cx, 100
  1402 | 000009B2 | F7F9                      | 	idiv	cx
  1403 | 000009B4 | 89D0                      | 	mov	ax, dx
  1404 | 000009B6 | A3[A409]                  | 	mov	word [L_myinth_15], ax
  1405 |          |                           | 	; >>>>> Line:	58
  1406 |          |                           | 	; >>>>> YKT 
  1407 | 000009B9 | E82C03                    | 	call	YKTickHandler
  1408 | 000009BC | 89EC                      | 	mov	sp, bp
  1409 | 000009BE | 5D                        | 	pop	bp
  1410 | 000009BF | C3                        | 	ret
  1411 |          |                           | L_myinth_16:
  1412 | 000009C0 | 55                        | 	push	bp
  1413 | 000009C1 | 89E5                      | 	mov	bp, sp
  1414 | 000009C3 | EBE3                      | 	jmp	L_myinth_17
  1415 | 000009C5 | 90                        | 	ALIGN	2
  1416 |          |                           | loopLikeABoss:
  1417 |          |                           | 	; >>>>> Line:	61
  1418 |          |                           | 	; >>>>> void loopLikeABoss(){ 
  1419 | 000009C6 | EB19                      | 	jmp	L_myinth_19
  1420 |          |                           | L_myinth_20:
  1421 |          |                           | 	; >>>>> Line:	63
  1422 |          |                           | 	; >>>>> for(; i < 5001; i++){ 
  1423 | 000009C8 | C746FE0000                | 	mov	word [bp-2], 0
  1424 |          |                           | 	; >>>>> Line:	63
  1425 |          |                           | 	; >>>>> for(; i < 5001; i++){ 
  1426 | 000009CD | EB07                      | 	jmp	L_myinth_22
  1427 |          |                           | L_myinth_21:
  1428 |          |                           | 	; >>>>> Line:	64
  1429 |          |                           | 	; >>>>> someLocalVariable++; 
  1430 | 000009CF | FF06[4C09]                | 	inc	word [L_myinth_1]
  1431 |          |                           | L_myinth_24:
  1432 | 000009D3 | FF46FE                    | 	inc	word [bp-2]
  1433 |          |                           | L_myinth_22:
  1434 | 000009D6 | 817EFE8913                | 	cmp	word [bp-2], 5001
  1435 | 000009DB | 7CF2                      | 	jl	L_myinth_21
  1436 |          |                           | L_myinth_23:
  1437 | 000009DD | 89EC                      | 	mov	sp, bp
  1438 | 000009DF | 5D                        | 	pop	bp
  1439 | 000009E0 | C3                        | 	ret
  1440 |          |                           | L_myinth_19:
  1441 | 000009E1 | 55                        | 	push	bp
  1442 | 000009E2 | 89E5                      | 	mov	bp, sp
  1443 | 000009E4 | 51                        | 	push	cx
  1444 | 000009E5 | EBE1                      | 	jmp	L_myinth_20
  1445 | 000009E7 | 90                        | 	ALIGN	2
  1446 |          |                           | keypressHandler:
  1447 |          |                           | 	; >>>>> Line:	68
  1448 |          |                           | 	; >>>>> void keypressHandler(){ 
  1449 | 000009E8 | EB0A                      | 	jmp	L_myinth_26
  1450 |          |                           | L_myinth_27:
  1451 |          |                           | 	; >>>>> Line:	71
  1452 |          |                           | 	; >>>>> c = KeyBuffer; 
  1453 | 000009EA | A0[C000]                  | 	mov	al, byte [KeyBuffer]
  1454 | 000009ED | 8846FF                    | 	mov	byte [bp-1], al
  1455 | 000009F0 | 89EC                      | 	mov	sp, bp
  1456 | 000009F2 | 5D                        | 	pop	bp
  1457 | 000009F3 | C3                        | 	ret
  1458 |          |                           | L_myinth_26:
  1459 | 000009F4 | 55                        | 	push	bp
  1460 | 000009F5 | 89E5                      | 	mov	bp, sp
  1461 | 000009F7 | 51                        | 	push	cx
  1462 | 000009F8 | EBF0                      | 	jmp	L_myinth_27
  1463 |          |                           | 
  1464 |          |                           | YKEnterMutex:
  1465 | 000009FA | FA                        |     cli
  1466 | 000009FB | C3                        |     ret
  1467 |          |                           |     
  1468 |          |                           | YKExitMutex:
  1469 | 000009FC | FB                        |     sti
  1470 | 000009FD | C3                        |     ret
  1471 |          |                           |     
  1472 |          |                           | contextSaver:
  1473 | 000009FE | 9C                        |     pushf ; Flags
  1474 | 000009FF | 0E                        |     push cs
  1475 | 00000A00 | FF7602                    |     push word[bp+2] ; IP
  1476 |          |                           |     
  1477 | 00000A03 | 50                        |     push ax
  1478 | 00000A04 | 53                        |     push bx
  1479 | 00000A05 | 51                        |     push cx
  1480 | 00000A06 | 52                        |     push dx
  1481 | 00000A07 | 56                        |     push si
  1482 | 00000A08 | 57                        |     push di
  1483 | 00000A09 | 55                        |     push bp
  1484 | 00000A0A | 06                        |     push es
  1485 | 00000A0B | 1E                        |     push ds
  1486 |          |                           | 
  1487 | 00000A0C | 8B1E[3E0A]                |     mov bx, [saveContextTask]
  1488 | 00000A10 | 8927                      |     mov [bx], sp
  1489 |          |                           | 
  1490 | 00000A12 | EB0C                      |     jmp contextRestorer
  1491 |          |                           | 
  1492 |          |                           | YKDispatcher: ; Dispatches the next task, and saves context if necessary.
  1493 | 00000A14 | 55                        |     push bp					
  1494 | 00000A15 | 89E5                      | 	mov bp, sp
  1495 | 00000A17 | 50                        | 	push ax
  1496 | 00000A18 | 8B4604                    | 	mov ax, word[bp+4]
  1497 | 00000A1B | 3C01                      | 	cmp	al, 1
  1498 | 00000A1D | 58                        | 	pop ax
  1499 | 00000A1E | 74DE                      | 	je 	contextSaver
  1500 |          |                           | 
  1501 |          |                           | contextRestorer:   
  1502 | 00000A20 | 8B1E[E613]                |     mov bx, [taskToRun]
  1503 | 00000A24 | 8B27                      |     mov sp, [bx]
  1504 |          |                           | 
  1505 | 00000A26 | 1F                        |     pop ds
  1506 | 00000A27 | 07                        |     pop es
  1507 | 00000A28 | 5D                        |     pop bp
  1508 | 00000A29 | 5F                        |     pop di
  1509 | 00000A2A | 5E                        |     pop si
  1510 | 00000A2B | 5A                        |     pop dx
  1511 | 00000A2C | 59                        |     pop cx
  1512 | 00000A2D | 5B                        |     pop bx
  1513 | 00000A2E | 58                        |     pop ax
  1514 |          |                           | 
  1515 | 00000A2F | CF                        |     iret; Generated by c86 (BYU-NASM) 5.1 (beta) from yakc.i
  1516 |          |                           | 	CPU	8086
  1517 |          |                           | 	ALIGN	2
  1518 | 00000A30 | E9E312                    | 	jmp	main	; Jump to program start
  1519 | 00000A33 | 90                        | 	ALIGN	2
  1520 |          |                           | YKCtxSwCount:
  1521 | 00000A34 | 0000                      | 	DW	0
  1522 |          |                           | YKIdleCount:
  1523 | 00000A36 | 0000                      | 	DW	0
  1524 |          |                           | YKISRCallDepth:
  1525 | 00000A38 | 0000                      | 	DW	0
  1526 |          |                           | YKTickNum:
  1527 | 00000A3A | 0100                      | 	DW	1
  1528 |          |                           | currentTask:
  1529 | 00000A3C | 0000                      | 	DW	0
  1530 |          |                           | saveContextTask:
  1531 | 00000A3E | 0000                      | 	DW	0
  1532 |          |                           | running:
  1533 | 00000A40 | 00                        | 	DB	0
  1534 | 00000A41 | 90                        | 	ALIGN	2
  1535 |          |                           | TCBi:
  1536 | 00000A42 | 0000                      | 	DW	0
  1537 |          |                           | semi:
  1538 | 00000A44 | 0000                      | 	DW	0
  1539 |          |                           | Qi:
  1540 | 00000A46 | 0000                      | 	DW	0
  1541 |          |                           | eventIndex:
  1542 | 00000A48 | 0000                      | 	DW	0
  1543 |          |                           | 	ALIGN	2
  1544 |          |                           | YKInitialize:
  1545 |          |                           | 	; >>>>> Line:	50
  1546 |          |                           | 	; >>>>> void YKInitialize(){ 
  1547 | 00000A4A | EB18                      | 	jmp	L_yakc_1
  1548 |          |                           | L_yakc_2:
  1549 |          |                           | 	; >>>>> Line:	51
  1550 |          |                           | 	; >>>>> YKEnterMutex(); 
  1551 | 00000A4C | E8ABFF                    | 	call	YKEnterMutex
  1552 |          |                           | 	; >>>>> Line:	54
  1553 |          |                           | 	; >>>>> YKNewTask(YKIdleTask,(void*)&YKIdleTasks[256], 100); 
  1554 | 00000A4F | B064                      | 	mov	al, 100
  1555 | 00000A51 | 50                        | 	push	ax
  1556 | 00000A52 | B8[E815]                  | 	mov	ax, (YKIdleTasks+512)
  1557 | 00000A55 | 50                        | 	push	ax
  1558 | 00000A56 | B8[6A0A]                  | 	mov	ax, YKIdleTask
  1559 | 00000A59 | 50                        | 	push	ax
  1560 | 00000A5A | E82700                    | 	call	YKNewTask
  1561 | 00000A5D | 83C406                    | 	add	sp, 6
  1562 | 00000A60 | 89EC                      | 	mov	sp, bp
  1563 | 00000A62 | 5D                        | 	pop	bp
  1564 | 00000A63 | C3                        | 	ret
  1565 |          |                           | L_yakc_1:
  1566 | 00000A64 | 55                        | 	push	bp
  1567 | 00000A65 | 89E5                      | 	mov	bp, sp
  1568 | 00000A67 | EBE3                      | 	jmp	L_yakc_2
  1569 | 00000A69 | 90                        | 	ALIGN	2
  1570 |          |                           | YKIdleTask:
  1571 |          |                           | 	; >>>>> Line:	61
  1572 |          |                           | 	; >>>>> void YKIdleTask(void){ 
  1573 | 00000A6A | EB12                      | 	jmp	L_yakc_4
  1574 |          |                           | L_yakc_5:
  1575 |          |                           | 	; >>>>> Line:	63
  1576 |          |                           | 	; >>>>> while(1){ 
  1577 | 00000A6C | EB0A                      | 	jmp	L_yakc_7
  1578 |          |                           | L_yakc_6:
  1579 |          |                           | 	; >>>>> Line:	66
  1580 |          |                           | 	; >>>>> ackPointer[10] 
  1581 | 00000A6E | E889FF                    | 	call	YKEnterMutex
  1582 |          |                           | 	; >>>>> Line:	67
  1583 |          |                           | 	; >>>>> YKIdleCount++; 
  1584 | 00000A71 | FF06[360A]                | 	inc	word [YKIdleCount]
  1585 |          |                           | 	; >>>>> Line:	69
  1586 |          |                           | 	; >>>>> YKExitMutex(); 
  1587 | 00000A75 | E884FF                    | 	call	YKExitMutex
  1588 |          |                           | L_yakc_7:
  1589 | 00000A78 | EBF4                      | 	jmp	L_yakc_6
  1590 |          |                           | L_yakc_8:
  1591 | 00000A7A | 89EC                      | 	mov	sp, bp
  1592 | 00000A7C | 5D                        | 	pop	bp
  1593 | 00000A7D | C3                        | 	ret
  1594 |          |                           | L_yakc_4:
  1595 | 00000A7E | 55                        | 	push	bp
  1596 | 00000A7F | 89E5                      | 	mov	bp, sp
  1597 | 00000A81 | EBE9                      | 	jmp	L_yakc_5
  1598 | 00000A83 | 90                        | 	ALIGN	2
  1599 |          |                           | YKNewTask:
  1600 |          |                           | 	; >>>>> Line:	73
  1601 |          |                           | 	; >>>>> void YKNewTask(void (*task)(void), void* taskStack, unsigned char priority){ 
  1602 | 00000A84 | E97101                    | 	jmp	L_yakc_10
  1603 |          |                           | L_yakc_11:
  1604 |          |                           | 	; >>>>> Line:	77
  1605 |          |                           | 	; >>>>> YKEnterMutex(); 
  1606 | 00000A87 | E870FF                    | 	call	YKEnterMutex
  1607 |          |                           | 	; >>>>> Line:	78
  1608 |          |                           | 	; >>>>> YKTCBs[TCBi].state = 1; 
  1609 | 00000A8A | A1[420A]                  | 	mov	ax, word [TCBi]
  1610 | 00000A8D | B91200                    | 	mov	cx, 18
  1611 | 00000A90 | F7E9                      | 	imul	cx
  1612 | 00000A92 | 05[0412]                  | 	add	ax, YKTCBs
  1613 | 00000A95 | 89C6                      | 	mov	si, ax
  1614 | 00000A97 | 83C602                    | 	add	si, 2
  1615 | 00000A9A | C60401                    | 	mov	byte [si], 1
  1616 |          |                           | 	; >>>>> Line:	79
  1617 |          |                           | 	; >>>>> YKTCBs[TCBi].priority = priority; 
  1618 | 00000A9D | A1[420A]                  | 	mov	ax, word [TCBi]
  1619 | 00000AA0 | B91200                    | 	mov	cx, 18
  1620 | 00000AA3 | F7E9                      | 	imul	cx
  1621 | 00000AA5 | 05[0412]                  | 	add	ax, YKTCBs
  1622 | 00000AA8 | 89C6                      | 	mov	si, ax
  1623 | 00000AAA | 83C603                    | 	add	si, 3
  1624 | 00000AAD | 8A4608                    | 	mov	al, byte [bp+8]
  1625 | 00000AB0 | 8804                      | 	mov	byte [si], al
  1626 |          |                           | 	; >>>>> Line:	80
  1627 |          |                           | 	; >>>>> YKTCBs[TCBi].delay = 0; 
  1628 | 00000AB2 | A1[420A]                  | 	mov	ax, word [TCBi]
  1629 | 00000AB5 | B91200                    | 	mov	cx, 18
  1630 | 00000AB8 | F7E9                      | 	imul	cx
  1631 | 00000ABA | 05[0412]                  | 	add	ax, YKTCBs
  1632 | 00000ABD | 89C6                      | 	mov	si, ax
  1633 | 00000ABF | 83C606                    | 	add	si, 6
  1634 | 00000AC2 | C7040000                  | 	mov	word [si], 0
  1635 |          |                           | 	; >>>>> Line:	82
  1636 |          |                           | 	; >>>>> newStackPointer = (unsigned*)taskStack - 11; 
  1637 | 00000AC6 | 8B4606                    | 	mov	ax, word [bp+6]
  1638 | 00000AC9 | 83E816                    | 	sub	ax, 22
  1639 | 00000ACC | 8946FE                    | 	mov	word [bp-2], ax
  1640 |          |                           | 	; >>>>> Line:	84
  1641 |          |                           | 	; >>>>> for(i = 0; i < 8; i++){ 
  1642 | 00000ACF | C746FC0000                | 	mov	word [bp-4], 0
  1643 | 00000AD4 | EB11                      | 	jmp	L_yakc_13
  1644 |          |                           | L_yakc_12:
  1645 |          |                           | 	; >>>>> Line:	85
  1646 |          |                           | 	; >>>>> newStackPointer[i] = 0; 
  1647 | 00000AD6 | 8B46FC                    | 	mov	ax, word [bp-4]
  1648 | 00000AD9 | D1E0                      | 	shl	ax, 1
  1649 | 00000ADB | 89C6                      | 	mov	si, ax
  1650 | 00000ADD | 0376FE                    | 	add	si, word [bp-2]
  1651 | 00000AE0 | C7040000                  | 	mov	word [si], 0
  1652 |          |                           | L_yakc_15:
  1653 | 00000AE4 | FF46FC                    | 	inc	word [bp-4]
  1654 |          |                           | L_yakc_13:
  1655 | 00000AE7 | 837EFC08                  | 	cmp	word [bp-4], 8
  1656 | 00000AEB | 7CE9                      | 	jl	L_yakc_12
  1657 |          |                           | L_yakc_14:
  1658 |          |                           | 	; >>>>> Line:	88
  1659 |          |                           | 	; >>>>> newStackPointer[8] = (unsigned) task; 
  1660 | 00000AED | 8B76FE                    | 	mov	si, word [bp-2]
  1661 | 00000AF0 | 83C610                    | 	add	si, 16
  1662 | 00000AF3 | 8B4604                    | 	mov	ax, word [bp+4]
  1663 | 00000AF6 | 8904                      | 	mov	word [si], ax
  1664 |          |                           | 	; >>>>> Line:	89
  1665 |          |                           | 	; >>>>> newStackPointer[9] = 0; 
  1666 | 00000AF8 | 8B76FE                    | 	mov	si, word [bp-2]
  1667 | 00000AFB | 83C612                    | 	add	si, 18
  1668 | 00000AFE | C7040000                  | 	mov	word [si], 0
  1669 |          |                           | 	; >>>>> Line:	90
  1670 |          |                           | 	; >>>>> newStackPointer[10] 
  1671 | 00000B02 | 8B76FE                    | 	mov	si, word [bp-2]
  1672 | 00000B05 | 83C614                    | 	add	si, 20
  1673 | 00000B08 | C7040002                  | 	mov	word [si], 512
  1674 |          |                           | 	; >>>>> Line:	93
  1675 |          |                           | 	; >>>>> YKTCBs[TCBi].stackPtr = newStackPointer - 1; 
  1676 | 00000B0C | 8B46FE                    | 	mov	ax, word [bp-2]
  1677 | 00000B0F | 83E802                    | 	sub	ax, 2
  1678 | 00000B12 | 50                        | 	push	ax
  1679 | 00000B13 | A1[420A]                  | 	mov	ax, word [TCBi]
  1680 | 00000B16 | B91200                    | 	mov	cx, 18
  1681 | 00000B19 | F7E9                      | 	imul	cx
  1682 | 00000B1B | 89C2                      | 	mov	dx, ax
  1683 | 00000B1D | 89D6                      | 	mov	si, dx
  1684 | 00000B1F | 81C6[0412]                | 	add	si, YKTCBs
  1685 | 00000B23 | 58                        | 	pop	ax
  1686 | 00000B24 | 8904                      | 	mov	word [si], ax
  1687 |          |                           | 	; >>>>> Line:	95
  1688 |          |                           | 	; >>>>> if(TCBi == 0){ 
  1689 | 00000B26 | A1[420A]                  | 	mov	ax, word [TCBi]
  1690 | 00000B29 | 85C0                      | 	test	ax, ax
  1691 | 00000B2B | 7525                      | 	jne	L_yakc_16
  1692 |          |                           | 	; >>>>> Line:	96
  1693 |          |                           | 	; >>>>> readyRoot = &YKTCBs[TCBi]; 
  1694 | 00000B2D | A1[420A]                  | 	mov	ax, word [TCBi]
  1695 | 00000B30 | B91200                    | 	mov	cx, 18
  1696 | 00000B33 | F7E9                      | 	imul	cx
  1697 | 00000B35 | 05[0412]                  | 	add	ax, YKTCBs
  1698 | 00000B38 | A3[E413]                  | 	mov	word [readyRoot], ax
  1699 |          |                           | 	; >>>>> Line:	97
  1700 |          |                           | 	; >>>>> YKTCBs[TCBi].next = 0; 
  1701 | 00000B3B | A1[420A]                  | 	mov	ax, word [TCBi]
  1702 | 00000B3E | B91200                    | 	mov	cx, 18
  1703 | 00000B41 | F7E9                      | 	imul	cx
  1704 | 00000B43 | 05[0412]                  | 	add	ax, YKTCBs
  1705 | 00000B46 | 89C6                      | 	mov	si, ax
  1706 | 00000B48 | 83C604                    | 	add	si, 4
  1707 | 00000B4B | C7040000                  | 	mov	word [si], 0
  1708 | 00000B4F | E98E00                    | 	jmp	L_yakc_17
  1709 |          |                           | L_yakc_16:
  1710 |          |                           | 	; >>>>> Line:	99
  1711 |          |                           | 	; >>>>> if(priority < readyRoot->priority){ 
  1712 | 00000B52 | 8B36[E413]                | 	mov	si, word [readyRoot]
  1713 | 00000B56 | 83C603                    | 	add	si, 3
  1714 | 00000B59 | 8A4608                    | 	mov	al, byte [bp+8]
  1715 | 00000B5C | 3A04                      | 	cmp	al, byte [si]
  1716 | 00000B5E | 7325                      | 	jae	L_yakc_18
  1717 |          |                           | 	; >>>>> Line:	100
  1718 |          |                           | 	; >>>>> YKTCBs[TCBi].next = readyRoot; 
  1719 | 00000B60 | A1[420A]                  | 	mov	ax, word [TCBi]
  1720 | 00000B63 | B91200                    | 	mov	cx, 18
  1721 | 00000B66 | F7E9                      | 	imul	cx
  1722 | 00000B68 | 05[0412]                  | 	add	ax, YKTCBs
  1723 | 00000B6B | 89C6                      | 	mov	si, ax
  1724 | 00000B6D | 83C604                    | 	add	si, 4
  1725 | 00000B70 | A1[E413]                  | 	mov	ax, word [readyRoot]
  1726 | 00000B73 | 8904                      | 	mov	word [si], ax
  1727 |          |                           | 	; >>>>> Line:	101
  1728 |          |                           | 	; >>>>> readyRoot = &YKTCBs[TCBi]; 
  1729 | 00000B75 | A1[420A]                  | 	mov	ax, word [TCBi]
  1730 | 00000B78 | B91200                    | 	mov	cx, 18
  1731 | 00000B7B | F7E9                      | 	imul	cx
  1732 | 00000B7D | 05[0412]                  | 	add	ax, YKTCBs
  1733 | 00000B80 | A3[E413]                  | 	mov	word [readyRoot], ax
  1734 | 00000B83 | EB5B                      | 	jmp	L_yakc_19
  1735 |          |                           | L_yakc_18:
  1736 |          |                           | 	; >>>>> Line:	104
  1737 |          |                           | 	; >>>>> browser = readyRoot; 
  1738 | 00000B85 | A1[E413]                  | 	mov	ax, word [readyRoot]
  1739 | 00000B88 | 8946FA                    | 	mov	word [bp-6], ax
  1740 |          |                           | 	; >>>>> Line:	106
  1741 |          |                           | 	; >>>>> while(browser){ 
  1742 | 00000B8B | EB4C                      | 	jmp	L_yakc_21
  1743 |          |                           | L_yakc_20:
  1744 |          |                           | 	; >>>>> Line:	107
  1745 |          |                           | 	; >>>>> if(priority < browser->next->priority){ 
  1746 | 00000B8D | 8B76FA                    | 	mov	si, word [bp-6]
  1747 | 00000B90 | 83C604                    | 	add	si, 4
  1748 | 00000B93 | 8B34                      | 	mov	si, word [si]
  1749 | 00000B95 | 83C603                    | 	add	si, 3
  1750 | 00000B98 | 8A4608                    | 	mov	al, byte [bp+8]
  1751 | 00000B9B | 3A04                      | 	cmp	al, byte [si]
  1752 | 00000B9D | 732F                      | 	jae	L_yakc_23
  1753 |          |                           | 	; >>>>> Line:	108
  1754 |          |                           | 	; >>>>> YKTCBs[TCBi].next = browser->next; 
  1755 | 00000B9F | 8B76FA                    | 	mov	si, word [bp-6]
  1756 | 00000BA2 | 83C604                    | 	add	si, 4
  1757 | 00000BA5 | A1[420A]                  | 	mov	ax, word [TCBi]
  1758 | 00000BA8 | B91200                    | 	mov	cx, 18
  1759 | 00000BAB | F7E9                      | 	imul	cx
  1760 | 00000BAD | 05[0412]                  | 	add	ax, YKTCBs
  1761 | 00000BB0 | 89C7                      | 	mov	di, ax
  1762 | 00000BB2 | 83C704                    | 	add	di, 4
  1763 | 00000BB5 | 8B04                      | 	mov	ax, word [si]
  1764 | 00000BB7 | 8905                      | 	mov	word [di], ax
  1765 |          |                           | 	; >>>>> Line:	109
  1766 |          |                           | 	; >>>>> oRun  
  1767 | 00000BB9 | A1[420A]                  | 	mov	ax, word [TCBi]
  1768 | 00000BBC | B91200                    | 	mov	cx, 18
  1769 | 00000BBF | F7E9                      | 	imul	cx
  1770 | 00000BC1 | 05[0412]                  | 	add	ax, YKTCBs
  1771 | 00000BC4 | 8B76FA                    | 	mov	si, word [bp-6]
  1772 | 00000BC7 | 83C604                    | 	add	si, 4
  1773 | 00000BCA | 8904                      | 	mov	word [si], ax
  1774 |          |                           | 	; >>>>> Line:	110
  1775 |          |                           | 	; >>>>> break; 
  1776 | 00000BCC | EB12                      | 	jmp	L_yakc_22
  1777 |          |                           | L_yakc_23:
  1778 |          |                           | 	; >>>>> Line:	112
  1779 |          |                           | 	; >>>>> browser = browser->next; 
  1780 | 00000BCE | 8B76FA                    | 	mov	si, word [bp-6]
  1781 | 00000BD1 | 83C604                    | 	add	si, 4
  1782 | 00000BD4 | 8B04                      | 	mov	ax, word [si]
  1783 | 00000BD6 | 8946FA                    | 	mov	word [bp-6], ax
  1784 |          |                           | L_yakc_21:
  1785 | 00000BD9 | 8B46FA                    | 	mov	ax, word [bp-6]
  1786 | 00000BDC | 85C0                      | 	test	ax, ax
  1787 | 00000BDE | 75AD                      | 	jne	L_yakc_20
  1788 |          |                           | L_yakc_22:
  1789 |          |                           | L_yakc_19:
  1790 |          |                           | L_yakc_17:
  1791 |          |                           | 	; >>>>> Line:	117
  1792 |          |                           | 	; >>>>> TCBi++; 
  1793 | 00000BE0 | FF06[420A]                | 	inc	word [TCBi]
  1794 |          |                           | 	; >>>>> Line:	118
  1795 |          |                           | 	; >>>>> if(running){ 
  1796 | 00000BE4 | A0[400A]                  | 	mov	al, byte [running]
  1797 | 00000BE7 | 84C0                      | 	test	al, al
  1798 | 00000BE9 | 7409                      | 	je	L_yakc_24
  1799 |          |                           | 	; >>>>> Line:	119
  1800 |          |                           | 	; >>>>> YKScheduler(1); 
  1801 | 00000BEB | B001                      | 	mov	al, 1
  1802 | 00000BED | 50                        | 	push	ax
  1803 | 00000BEE | E81100                    | 	call	YKScheduler
  1804 | 00000BF1 | 83C402                    | 	add	sp, 2
  1805 |          |                           | L_yakc_24:
  1806 | 00000BF4 | 89EC                      | 	mov	sp, bp
  1807 | 00000BF6 | 5D                        | 	pop	bp
  1808 | 00000BF7 | C3                        | 	ret
  1809 |          |                           | L_yakc_10:
  1810 | 00000BF8 | 55                        | 	push	bp
  1811 | 00000BF9 | 89E5                      | 	mov	bp, sp
  1812 | 00000BFB | 83EC06                    | 	sub	sp, 6
  1813 | 00000BFE | E986FE                    | 	jmp	L_yakc_11
  1814 | 00000C01 | 90                        | 	ALIGN	2
  1815 |          |                           | YKScheduler:
  1816 |          |                           | 	; >>>>> Line:	123
  1817 |          |                           | 	; >>>>> void YKScheduler(unsigned char saveContext){ 
  1818 | 00000C02 | EB56                      | 	jmp	L_yakc_26
  1819 |          |                           | L_yakc_27:
  1820 |          |                           | 	; >>>>> Line:	126
  1821 |          |                           | 	; >>>>> browser = readyRoot; 
  1822 | 00000C04 | A1[E413]                  | 	mov	ax, word [readyRoot]
  1823 | 00000C07 | 8946FE                    | 	mov	word [bp-2], ax
  1824 |          |                           | 	; >>>>> Line:	127
  1825 |          |                           | 	; >>>>> YKEnterMutex(); 
  1826 | 00000C0A | E8EDFD                    | 	call	YKEnterMutex
  1827 |          |                           | 	; >>>>> Line:	128
  1828 |          |                           | 	; >>>>> while(browser){ 
  1829 | 00000C0D | EB1E                      | 	jmp	L_yakc_29
  1830 |          |                           | L_yakc_28:
  1831 |          |                           | 	; >>>>> Line:	129
  1832 |          |                           | 	; >>>>> if(browser->state == 1){ 
  1833 | 00000C0F | 8B76FE                    | 	mov	si, word [bp-2]
  1834 | 00000C12 | 83C602                    | 	add	si, 2
  1835 | 00000C15 | 803C01                    | 	cmp	byte [si], 1
  1836 | 00000C18 | 7508                      | 	jne	L_yakc_31
  1837 |          |                           | 	; >>>>> Line:	130
  1838 |          |                           | 	; >>>>> taskToRun = browser; 
  1839 | 00000C1A | 8B46FE                    | 	mov	ax, word [bp-2]
  1840 | 00000C1D | A3[E613]                  | 	mov	word [taskToRun], ax
  1841 |          |                           | 	; >>>>> Line:	131
  1842 |          |                           | 	; >>>>> break; 
  1843 | 00000C20 | EB12                      | 	jmp	L_yakc_30
  1844 |          |                           | L_yakc_31:
  1845 |          |                           | 	; >>>>> Line:	133
  1846 |          |                           | 	; >>>>> browser = browser->next; 
  1847 | 00000C22 | 8B76FE                    | 	mov	si, word [bp-2]
  1848 | 00000C25 | 83C604                    | 	add	si, 4
  1849 | 00000C28 | 8B04                      | 	mov	ax, word [si]
  1850 | 00000C2A | 8946FE                    | 	mov	word [bp-2], ax
  1851 |          |                           | L_yakc_29:
  1852 | 00000C2D | 8B46FE                    | 	mov	ax, word [bp-2]
  1853 | 00000C30 | 85C0                      | 	test	ax, ax
  1854 | 00000C32 | 75DB                      | 	jne	L_yakc_28
  1855 |          |                           | L_yakc_30:
  1856 |          |                           | 	; >>>>> Line:	136
  1857 |          |                           | 	; >>>>> if(taskToRun  
  1858 | 00000C34 | A1[3C0A]                  | 	mov	ax, word [currentTask]
  1859 | 00000C37 | 3B06[E613]                | 	cmp	ax, word [taskToRun]
  1860 | 00000C3B | 7419                      | 	je	L_yakc_32
  1861 |          |                           | 	; >>>>> Line:	138
  1862 |          |                           | 	; >>>>> saveContextTask = currentTask; 
  1863 | 00000C3D | A1[3C0A]                  | 	mov	ax, word [currentTask]
  1864 | 00000C40 | A3[3E0A]                  | 	mov	word [saveContextTask], ax
  1865 |          |                           | 	; >>>>> Line:	139
  1866 |          |                           | 	; >>>>> currentTask = taskToRun; 
  1867 | 00000C43 | A1[E613]                  | 	mov	ax, word [taskToRun]
  1868 | 00000C46 | A3[3C0A]                  | 	mov	word [currentTask], ax
  1869 |          |                           | 	; >>>>> Line:	142
  1870 |          |                           | 	; >>>>> YKCtxSwCount++; 
  1871 | 00000C49 | FF06[340A]                | 	inc	word [YKCtxSwCount]
  1872 |          |                           | 	; >>>>> Line:	143
  1873 |          |                           | 	; >>>>> YKDispatcher(saveContext); 
  1874 | 00000C4D | FF7604                    | 	push	word [bp+4]
  1875 | 00000C50 | E8C1FD                    | 	call	YKDispatcher
  1876 | 00000C53 | 83C402                    | 	add	sp, 2
  1877 |          |                           | L_yakc_32:
  1878 | 00000C56 | 89EC                      | 	mov	sp, bp
  1879 | 00000C58 | 5D                        | 	pop	bp
  1880 | 00000C59 | C3                        | 	ret
  1881 |          |                           | L_yakc_26:
  1882 | 00000C5A | 55                        | 	push	bp
  1883 | 00000C5B | 89E5                      | 	mov	bp, sp
  1884 | 00000C5D | 51                        | 	push	cx
  1885 | 00000C5E | EBA4                      | 	jmp	L_yakc_27
  1886 |          |                           | 	ALIGN	2
  1887 |          |                           | YKRun:
  1888 |          |                           | 	; >>>>> Line:	148
  1889 |          |                           | 	; >>>>> void YKRun() { 
  1890 | 00000C60 | EB12                      | 	jmp	L_yakc_34
  1891 |          |                           | L_yakc_35:
  1892 |          |                           | 	; >>>>> Line:	150
  1893 |          |                           | 	; >>>>> running = 1; 
  1894 | 00000C62 | C606[400A]01              | 	mov	byte [running], 1
  1895 |          |                           | 	; >>>>> Line:	151
  1896 |          |                           | 	; >>>>> YKScheduler(0); 
  1897 | 00000C67 | 30C0                      | 	xor	al, al
  1898 | 00000C69 | 50                        | 	push	ax
  1899 | 00000C6A | E895FF                    | 	call	YKScheduler
  1900 | 00000C6D | 83C402                    | 	add	sp, 2
  1901 | 00000C70 | 89EC                      | 	mov	sp, bp
  1902 | 00000C72 | 5D                        | 	pop	bp
  1903 | 00000C73 | C3                        | 	ret
  1904 |          |                           | L_yakc_34:
  1905 | 00000C74 | 55                        | 	push	bp
  1906 | 00000C75 | 89E5                      | 	mov	bp, sp
  1907 | 00000C77 | EBE9                      | 	jmp	L_yakc_35
  1908 | 00000C79 | 90                        | 	ALIGN	2
  1909 |          |                           | YKDelayTask:
  1910 |          |                           | 	; >>>>> Line:	154
  1911 |          |                           | 	; >>>>> void YKDelayTask(unsigned count){ 
  1912 | 00000C7A | EB34                      | 	jmp	L_yakc_37
  1913 |          |                           | L_yakc_38:
  1914 |          |                           | 	; >>>>> Line:	156
  1915 |          |                           | 	; >>>>> YKEnterMutex(); 
  1916 | 00000C7C | E87BFD                    | 	call	YKEnterMutex
  1917 |          |                           | 	; >>>>> Line:	158
  1918 |          |                           | 	; >>>>> if(!count){ 
  1919 | 00000C7F | 8B4604                    | 	mov	ax, word [bp+4]
  1920 | 00000C82 | 85C0                      | 	test	ax, ax
  1921 | 00000C84 | 7504                      | 	jne	L_yakc_39
  1922 |          |                           | 	; >>>>> Line:	160
  1923 |          |                           | 	; >>>>> return; 
  1924 | 00000C86 | EB24                      | 	jmp	L_yakc_40
  1925 | 00000C88 | EB22                      | 	jmp	L_yakc_41
  1926 |          |                           | L_yakc_39:
  1927 |          |                           | 	; >>>>> Line:	164
  1928 |          |                           | 	; >>>>> currentTask->delay = count; 
  1929 | 00000C8A | 8B36[3C0A]                | 	mov	si, word [currentTask]
  1930 | 00000C8E | 83C606                    | 	add	si, 6
  1931 | 00000C91 | 8B4604                    | 	mov	ax, word [bp+4]
  1932 | 00000C94 | 8904                      | 	mov	word [si], ax
  1933 |          |                           | 	; >>>>> Line:	165
  1934 |          |                           | 	; >>>>> currentTask->state = 0; 
  1935 | 00000C96 | 8B36[3C0A]                | 	mov	si, word [currentTask]
  1936 | 00000C9A | 83C602                    | 	add	si, 2
  1937 | 00000C9D | C60400                    | 	mov	byte [si], 0
  1938 |          |                           | 	; >>>>> Line:	167
  1939 |          |                           | 	; >>>>> YKScheduler(1); 
  1940 | 00000CA0 | B001                      | 	mov	al, 1
  1941 | 00000CA2 | 50                        | 	push	ax
  1942 | 00000CA3 | E85CFF                    | 	call	YKScheduler
  1943 | 00000CA6 | 83C402                    | 	add	sp, 2
  1944 |          |                           | 	; >>>>> Line:	168
  1945 |          |                           | 	; >>>>> YKExitMutex(); 
  1946 | 00000CA9 | E850FD                    | 	call	YKExitMutex
  1947 |          |                           | L_yakc_41:
  1948 |          |                           | L_yakc_40:
  1949 | 00000CAC | 89EC                      | 	mov	sp, bp
  1950 | 00000CAE | 5D                        | 	pop	bp
  1951 | 00000CAF | C3                        | 	ret
  1952 |          |                           | L_yakc_37:
  1953 | 00000CB0 | 55                        | 	push	bp
  1954 | 00000CB1 | 89E5                      | 	mov	bp, sp
  1955 | 00000CB3 | EBC7                      | 	jmp	L_yakc_38
  1956 | 00000CB5 | 90                        | 	ALIGN	2
  1957 |          |                           | YKEnterISR:
  1958 |          |                           | 	; >>>>> Line:	173
  1959 |          |                           | 	; >>>>> void YKEnterISR(void){ 
  1960 | 00000CB6 | EB08                      | 	jmp	L_yakc_43
  1961 |          |                           | L_yakc_44:
  1962 |          |                           | 	; >>>>> Line:	175
  1963 |          |                           | 	; >>>>> YKISRCallDepth++; 
  1964 | 00000CB8 | FF06[380A]                | 	inc	word [YKISRCallDepth]
  1965 | 00000CBC | 89EC                      | 	mov	sp, bp
  1966 | 00000CBE | 5D                        | 	pop	bp
  1967 | 00000CBF | C3                        | 	ret
  1968 |          |                           | L_yakc_43:
  1969 | 00000CC0 | 55                        | 	push	bp
  1970 | 00000CC1 | 89E5                      | 	mov	bp, sp
  1971 | 00000CC3 | EBF3                      | 	jmp	L_yakc_44
  1972 | 00000CC5 | 90                        | 	ALIGN	2
  1973 |          |                           | YKExitISR:
  1974 |          |                           | 	; >>>>> Line:	178
  1975 |          |                           | 	; >>>>> < 0){ 
  1976 | 00000CC6 | EB1B                      | 	jmp	L_yakc_46
  1977 |          |                           | L_yakc_47:
  1978 |          |                           | 	; >>>>> Line:	179
  1979 |          |                           | 	; >>>>> YKISRCallDepth--; 
  1980 | 00000CC8 | FF0E[380A]                | 	dec	word [YKISRCallDepth]
  1981 |          |                           | 	; >>>>> Line:	182
  1982 |          |                           | 	; >>>>> if(!YKISRCallDepth){ 
  1983 | 00000CCC | A1[380A]                  | 	mov	ax, word [YKISRCallDepth]
  1984 | 00000CCF | 85C0                      | 	test	ax, ax
  1985 | 00000CD1 | 750C                      | 	jne	L_yakc_48
  1986 |          |                           | 	; >>>>> Line:	183
  1987 |          |                           | 	; >>>>> YKScheduler(1); 
  1988 | 00000CD3 | B001                      | 	mov	al, 1
  1989 | 00000CD5 | 50                        | 	push	ax
  1990 | 00000CD6 | E829FF                    | 	call	YKScheduler
  1991 | 00000CD9 | 83C402                    | 	add	sp, 2
  1992 |          |                           | 	; >>>>> Line:	184
  1993 |          |                           | 	; >>>>> YKExitMutex(); 
  1994 | 00000CDC | E81DFD                    | 	call	YKExitMutex
  1995 |          |                           | L_yakc_48:
  1996 | 00000CDF | 89EC                      | 	mov	sp, bp
  1997 | 00000CE1 | 5D                        | 	pop	bp
  1998 | 00000CE2 | C3                        | 	ret
  1999 |          |                           | L_yakc_46:
  2000 | 00000CE3 | 55                        | 	push	bp
  2001 | 00000CE4 | 89E5                      | 	mov	bp, sp
  2002 | 00000CE6 | EBE0                      | 	jmp	L_yakc_47
  2003 |          |                           | 	ALIGN	2
  2004 |          |                           | YKTickHandler:
  2005 |          |                           | 	; >>>>> Line:	188
  2006 |          |                           | 	; >>>>> void YKTickHandler(void){ 
  2007 | 00000CE8 | EB4B                      | 	jmp	L_yakc_50
  2008 |          |                           | L_yakc_51:
  2009 |          |                           | 	; >>>>> Line:	192
  2010 |          |                           | 	; >>>>> YKTickNum++; 
  2011 | 00000CEA | FF06[3A0A]                | 	inc	word [YKTickNum]
  2012 |          |                           | 	; >>>>> Line:	194
  2013 |          |                           | 	; >>>>> browser = readyRoot; 
  2014 | 00000CEE | A1[E413]                  | 	mov	ax, word [readyRoot]
  2015 | 00000CF1 | 8946FE                    | 	mov	word [bp-2], ax
  2016 |          |                           | 	; >>>>> Line:	195
  2017 |          |                           | 	; >>>>> while(browser){ 
  2018 | 00000CF4 | EB34                      | 	jmp	L_yakc_53
  2019 |          |                           | L_yakc_52:
  2020 |          |                           | 	; >>>>> Line:	196
  2021 |          |                           | 	; >>>>> if(browser->state == 0){ 
  2022 | 00000CF6 | 8B76FE                    | 	mov	si, word [bp-2]
  2023 | 00000CF9 | 83C602                    | 	add	si, 2
  2024 | 00000CFC | 8A04                      | 	mov	al, byte [si]
  2025 | 00000CFE | 84C0                      | 	test	al, al
  2026 | 00000D00 | 751D                      | 	jne	L_yakc_55
  2027 |          |                           | 	; >>>>> Line:	197
  2028 |          |                           | 	; >>>>> browser->delay--; 
  2029 | 00000D02 | 8B76FE                    | 	mov	si, word [bp-2]
  2030 | 00000D05 | 83C606                    | 	add	si, 6
  2031 | 00000D08 | FF0C                      | 	dec	word [si]
  2032 |          |                           | 	; >>>>> Line:	203
  2033 |          |                           | 	; >>>>> if(!(browser->delay)){ 
  2034 | 00000D0A | 8B76FE                    | 	mov	si, word [bp-2]
  2035 | 00000D0D | 83C606                    | 	add	si, 6
  2036 | 00000D10 | 8B04                      | 	mov	ax, word [si]
  2037 | 00000D12 | 85C0                      | 	test	ax, ax
  2038 | 00000D14 | 7509                      | 	jne	L_yakc_56
  2039 |          |                           | 	; >>>>> Line:	204
  2040 |          |                           | 	; >>>>> browser->state = 1; 
  2041 | 00000D16 | 8B76FE                    | 	mov	si, word [bp-2]
  2042 | 00000D19 | 83C602                    | 	add	si, 2
  2043 | 00000D1C | C60401                    | 	mov	byte [si], 1
  2044 |          |                           | L_yakc_56:
  2045 |          |                           | L_yakc_55:
  2046 |          |                           | 	; >>>>> Line:	209
  2047 |          |                           | 	; >>>>> browser = browser->next; 
  2048 | 00000D1F | 8B76FE                    | 	mov	si, word [bp-2]
  2049 | 00000D22 | 83C604                    | 	add	si, 4
  2050 | 00000D25 | 8B04                      | 	mov	ax, word [si]
  2051 | 00000D27 | 8946FE                    | 	mov	word [bp-2], ax
  2052 |          |                           | L_yakc_53:
  2053 | 00000D2A | 8B46FE                    | 	mov	ax, word [bp-2]
  2054 | 00000D2D | 85C0                      | 	test	ax, ax
  2055 | 00000D2F | 75C5                      | 	jne	L_yakc_52
  2056 |          |                           | L_yakc_54:
  2057 | 00000D31 | 89EC                      | 	mov	sp, bp
  2058 | 00000D33 | 5D                        | 	pop	bp
  2059 | 00000D34 | C3                        | 	ret
  2060 |          |                           | L_yakc_50:
  2061 | 00000D35 | 55                        | 	push	bp
  2062 | 00000D36 | 89E5                      | 	mov	bp, sp
  2063 | 00000D38 | 51                        | 	push	cx
  2064 | 00000D39 | EBAF                      | 	jmp	L_yakc_51
  2065 | 00000D3B | 90                        | 	ALIGN	2
  2066 |          |                           | YKSemCreate:
  2067 |          |                           | 	; >>>>> Line:	213
  2068 |          |                           | 	; >>>>> YKSem* YKSemCreate(int val){ 
  2069 | 00000D3C | EB28                      | 	jmp	L_yakc_58
  2070 |          |                           | L_yakc_59:
  2071 |          |                           | 	; >>>>> Line:	215
  2072 |          |                           | 	; >>>>> if(val < 0){ 
  2073 | 00000D3E | 837E0400                  | 	cmp	word [bp+4], 0
  2074 | 00000D42 | 7D04                      | 	jge	L_yakc_60
  2075 |          |                           | 	; >>>>> Line:	216
  2076 |          |                           | 	; >>>>> return  
  2077 | 00000D44 | 31C0                      | 	xor	ax, ax
  2078 | 00000D46 | EB1A                      | 	jmp	L_yakc_61
  2079 |          |                           | L_yakc_60:
  2080 |          |                           | 	; >>>>> Line:	219
  2081 |          |                           | 	; >>>>> newSem = &YKSEMS[semi]; 
  2082 | 00000D48 | A1[440A]                  | 	mov	ax, word [semi]
  2083 | 00000D4B | D1E0                      | 	shl	ax, 1
  2084 | 00000D4D | 05[B812]                  | 	add	ax, YKSEMS
  2085 | 00000D50 | 8946FE                    | 	mov	word [bp-2], ax
  2086 |          |                           | 	; >>>>> Line:	220
  2087 |          |                           | 	; >>>>> *newSem = val; 
  2088 | 00000D53 | 8B76FE                    | 	mov	si, word [bp-2]
  2089 | 00000D56 | 8B4604                    | 	mov	ax, word [bp+4]
  2090 | 00000D59 | 8904                      | 	mov	word [si], ax
  2091 |          |                           | 	; >>>>> Line:	221
  2092 |          |                           | 	; >>>>> semi++; 
  2093 | 00000D5B | FF06[440A]                | 	inc	word [semi]
  2094 |          |                           | 	; >>>>> Line:	222
  2095 |          |                           | 	; >>>>> return newSem; 
  2096 | 00000D5F | 8B46FE                    | 	mov	ax, word [bp-2]
  2097 |          |                           | L_yakc_61:
  2098 | 00000D62 | 89EC                      | 	mov	sp, bp
  2099 | 00000D64 | 5D                        | 	pop	bp
  2100 | 00000D65 | C3                        | 	ret
  2101 |          |                           | L_yakc_58:
  2102 | 00000D66 | 55                        | 	push	bp
  2103 | 00000D67 | 89E5                      | 	mov	bp, sp
  2104 | 00000D69 | 51                        | 	push	cx
  2105 | 00000D6A | EBD2                      | 	jmp	L_yakc_59
  2106 |          |                           | 	ALIGN	2
  2107 |          |                           | YKSemPend:
  2108 |          |                           | 	; >>>>> Line:	225
  2109 |          |                           | 	; >>>>> void YKSemPend(YKSem* sem){ 
  2110 | 00000D6C | EB37                      | 	jmp	L_yakc_63
  2111 |          |                           | L_yakc_64:
  2112 |          |                           | 	; >>>>> Line:	226
  2113 |          |                           | 	; >>>>> YKEnterMutex(); 
  2114 | 00000D6E | E889FC                    | 	call	YKEnterMutex
  2115 |          |                           | 	; >>>>> Line:	227
  2116 |          |                           | 	; >>>>> if(!(*sem)){ 
  2117 | 00000D71 | 8B7604                    | 	mov	si, word [bp+4]
  2118 | 00000D74 | 8B04                      | 	mov	ax, word [si]
  2119 | 00000D76 | 85C0                      | 	test	ax, ax
  2120 | 00000D78 | 751F                      | 	jne	L_yakc_65
  2121 |          |                           | 	; >>>>> Line:	228
  2122 |          |                           | 	; >>>>> currentTask->state = 2; 
  2123 | 00000D7A | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2124 | 00000D7E | 83C602                    | 	add	si, 2
  2125 | 00000D81 | C60402                    | 	mov	byte [si], 2
  2126 |          |                           | 	; >>>>> Line:	229
  2127 |          |                           | 	; >>>>> currentTask->semBlock = sem; 
  2128 | 00000D84 | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2129 | 00000D88 | 83C608                    | 	add	si, 8
  2130 | 00000D8B | 8B4604                    | 	mov	ax, word [bp+4]
  2131 | 00000D8E | 8904                      | 	mov	word [si], ax
  2132 |          |                           | 	; >>>>> Line:	230
  2133 |          |                           | 	; >>>>> YKScheduler(1); 
  2134 | 00000D90 | B001                      | 	mov	al, 1
  2135 | 00000D92 | 50                        | 	push	ax
  2136 | 00000D93 | E86CFE                    | 	call	YKScheduler
  2137 | 00000D96 | 83C402                    | 	add	sp, 2
  2138 |          |                           | L_yakc_65:
  2139 |          |                           | 	; >>>>> Line:	232
  2140 |          |                           | 	; >>>>> (*sem)--; 
  2141 | 00000D99 | 8B7604                    | 	mov	si, word [bp+4]
  2142 | 00000D9C | FF0C                      | 	dec	word [si]
  2143 |          |                           | 	; >>>>> Line:	233
  2144 |          |                           | 	; >>>>> YKExitMutex(); 
  2145 | 00000D9E | E85BFC                    | 	call	YKExitMutex
  2146 | 00000DA1 | 89EC                      | 	mov	sp, bp
  2147 | 00000DA3 | 5D                        | 	pop	bp
  2148 | 00000DA4 | C3                        | 	ret
  2149 |          |                           | L_yakc_63:
  2150 | 00000DA5 | 55                        | 	push	bp
  2151 | 00000DA6 | 89E5                      | 	mov	bp, sp
  2152 | 00000DA8 | EBC4                      | 	jmp	L_yakc_64
  2153 |          |                           | 	ALIGN	2
  2154 |          |                           | YKSemPost:
  2155 |          |                           | 	; >>>>> Line:	237
  2156 |          |                           | 	; >>>>> void YKSemPost(YKSem* sem){ 
  2157 | 00000DAA | EB66                      | 	jmp	L_yakc_67
  2158 |          |                           | L_yakc_68:
  2159 |          |                           | 	; >>>>> Line:	240
  2160 |          |                           | 	; >>>>> YKEnterMutex(); 
  2161 | 00000DAC | E84BFC                    | 	call	YKEnterMutex
  2162 |          |                           | 	; >>>>> Line:	241
  2163 |          |                           | 	; >>>>> (*sem)++; 
  2164 | 00000DAF | 8B7604                    | 	mov	si, word [bp+4]
  2165 | 00000DB2 | FF04                      | 	inc	word [si]
  2166 |          |                           | 	; >>>>> Line:	242
  2167 |          |                           | 	; >>>>> browser = readyRoot; 
  2168 | 00000DB4 | A1[E413]                  | 	mov	ax, word [readyRoot]
  2169 | 00000DB7 | 8946FE                    | 	mov	word [bp-2], ax
  2170 |          |                           | 	; >>>>> Line:	244
  2171 |          |                           | 	; >>>>> while(browser){ 
  2172 | 00000DBA | EB38                      | 	jmp	L_yakc_70
  2173 |          |                           | L_yakc_69:
  2174 |          |                           | 	; >>>>> Line:	245
  2175 |          |                           | 	; >>>>> if(browser->state == 2 && browser->semBlock == sem){ 
  2176 | 00000DBC | 8B76FE                    | 	mov	si, word [bp-2]
  2177 | 00000DBF | 83C602                    | 	add	si, 2
  2178 | 00000DC2 | 803C02                    | 	cmp	byte [si], 2
  2179 | 00000DC5 | 7522                      | 	jne	L_yakc_72
  2180 | 00000DC7 | 8B76FE                    | 	mov	si, word [bp-2]
  2181 | 00000DCA | 83C608                    | 	add	si, 8
  2182 | 00000DCD | 8B4604                    | 	mov	ax, word [bp+4]
  2183 | 00000DD0 | 3B04                      | 	cmp	ax, word [si]
  2184 | 00000DD2 | 7515                      | 	jne	L_yakc_72
  2185 |          |                           | 	; >>>>> Line:	246
  2186 |          |                           | 	; >>>>> browser-> 
  2187 | 00000DD4 | 8B76FE                    | 	mov	si, word [bp-2]
  2188 | 00000DD7 | 83C602                    | 	add	si, 2
  2189 | 00000DDA | C60401                    | 	mov	byte [si], 1
  2190 |          |                           | 	; >>>>> Line:	247
  2191 |          |                           | 	; >>>>> browser->semBlock = 0; 
  2192 | 00000DDD | 8B76FE                    | 	mov	si, word [bp-2]
  2193 | 00000DE0 | 83C608                    | 	add	si, 8
  2194 | 00000DE3 | C7040000                  | 	mov	word [si], 0
  2195 |          |                           | 	; >>>>> Line:	248
  2196 |          |                           | 	; >>>>> break; 
  2197 | 00000DE7 | EB12                      | 	jmp	L_yakc_71
  2198 |          |                           | L_yakc_72:
  2199 |          |                           | 	; >>>>> Line:	250
  2200 |          |                           | 	; >>>>> browser = browser->next; 
  2201 | 00000DE9 | 8B76FE                    | 	mov	si, word [bp-2]
  2202 | 00000DEC | 83C604                    | 	add	si, 4
  2203 | 00000DEF | 8B04                      | 	mov	ax, word [si]
  2204 | 00000DF1 | 8946FE                    | 	mov	word [bp-2], ax
  2205 |          |                           | L_yakc_70:
  2206 | 00000DF4 | 8B46FE                    | 	mov	ax, word [bp-2]
  2207 | 00000DF7 | 85C0                      | 	test	ax, ax
  2208 | 00000DF9 | 75C1                      | 	jne	L_yakc_69
  2209 |          |                           | L_yakc_71:
  2210 |          |                           | 	; >>>>> Line:	253
  2211 |          |                           | 	; >>>>> if(YKISRCallDepth == 0){ 
  2212 | 00000DFB | A1[380A]                  | 	mov	ax, word [YKISRCallDepth]
  2213 | 00000DFE | 85C0                      | 	test	ax, ax
  2214 | 00000E00 | 7509                      | 	jne	L_yakc_73
  2215 |          |                           | 	; >>>>> Line:	254
  2216 |          |                           | 	; >>>>> YKScheduler(1); 
  2217 | 00000E02 | B001                      | 	mov	al, 1
  2218 | 00000E04 | 50                        | 	push	ax
  2219 | 00000E05 | E8FAFD                    | 	call	YKScheduler
  2220 | 00000E08 | 83C402                    | 	add	sp, 2
  2221 |          |                           | L_yakc_73:
  2222 |          |                           | 	; >>>>> Line:	256
  2223 |          |                           | 	; >>>>> YKExitMutex(); 
  2224 | 00000E0B | E8EEFB                    | 	call	YKExitMutex
  2225 | 00000E0E | 89EC                      | 	mov	sp, bp
  2226 | 00000E10 | 5D                        | 	pop	bp
  2227 | 00000E11 | C3                        | 	ret
  2228 |          |                           | L_yakc_67:
  2229 | 00000E12 | 55                        | 	push	bp
  2230 | 00000E13 | 89E5                      | 	mov	bp, sp
  2231 | 00000E15 | 51                        | 	push	cx
  2232 | 00000E16 | EB94                      | 	jmp	L_yakc_68
  2233 |          |                           | 	ALIGN	2
  2234 |          |                           | YKQCreate:
  2235 |          |                           | 	; >>>>> Line:	259
  2236 |          |                           | 	; >>>>> YKQ* YKQCreate(void** start, unsigned size){ 
  2237 | 00000E18 | EB7A                      | 	jmp	L_yakc_75
  2238 |          |                           | L_yakc_76:
  2239 |          |                           | 	; >>>>> Line:	260
  2240 |          |                           | 	; >>>>> YKQS[Qi].length = size; 
  2241 | 00000E1A | A1[460A]                  | 	mov	ax, word [Qi]
  2242 | 00000E1D | B90A00                    | 	mov	cx, 10
  2243 | 00000E20 | F7E9                      | 	imul	cx
  2244 | 00000E22 | 05[1C13]                  | 	add	ax, YKQS
  2245 | 00000E25 | 89C6                      | 	mov	si, ax
  2246 | 00000E27 | 83C602                    | 	add	si, 2
  2247 | 00000E2A | 8B4606                    | 	mov	ax, word [bp+6]
  2248 | 00000E2D | 8904                      | 	mov	word [si], ax
  2249 |          |                           | 	; >>>>> Line:	261
  2250 |          |                           | 	; >>>>> YKQS[Qi].queueAddress = start; 
  2251 | 00000E2F | A1[460A]                  | 	mov	ax, word [Qi]
  2252 | 00000E32 | B90A00                    | 	mov	cx, 10
  2253 | 00000E35 | F7E9                      | 	imul	cx
  2254 | 00000E37 | 89C6                      | 	mov	si, ax
  2255 | 00000E39 | 81C6[1C13]                | 	add	si, YKQS
  2256 | 00000E3D | 8B4604                    | 	mov	ax, word [bp+4]
  2257 | 00000E40 | 8904                      | 	mov	word [si], ax
  2258 |          |                           | 	; >>>>> Line:	262
  2259 |          |                           | 	; >>>>> YKQS[Qi].nextEmpty = start; 
  2260 | 00000E42 | A1[460A]                  | 	mov	ax, word [Qi]
  2261 | 00000E45 | B90A00                    | 	mov	cx, 10
  2262 | 00000E48 | F7E9                      | 	imul	cx
  2263 | 00000E4A | 05[1C13]                  | 	add	ax, YKQS
  2264 | 00000E4D | 89C6                      | 	mov	si, ax
  2265 | 00000E4F | 83C604                    | 	add	si, 4
  2266 | 00000E52 | 8B4604                    | 	mov	ax, word [bp+4]
  2267 | 00000E55 | 8904                      | 	mov	word [si], ax
  2268 |          |                           | 	; >>>>> Line:	263
  2269 |          |                           | 	; >>>>> YKQS[Qi].nextRemove = start; 
  2270 | 00000E57 | A1[460A]                  | 	mov	ax, word [Qi]
  2271 | 00000E5A | B90A00                    | 	mov	cx, 10
  2272 | 00000E5D | F7E9                      | 	imul	cx
  2273 | 00000E5F | 05[1C13]                  | 	add	ax, YKQS
  2274 | 00000E62 | 89C6                      | 	mov	si, ax
  2275 | 00000E64 | 83C606                    | 	add	si, 6
  2276 | 00000E67 | 8B4604                    | 	mov	ax, word [bp+4]
  2277 | 00000E6A | 8904                      | 	mov	word [si], ax
  2278 |          |                           | 	; >>>>> Line:	264
  2279 |          |                           | 	; >>>>> YKQS[Qi].state = 0; 
  2280 | 00000E6C | A1[460A]                  | 	mov	ax, word [Qi]
  2281 | 00000E6F | B90A00                    | 	mov	cx, 10
  2282 | 00000E72 | F7E9                      | 	imul	cx
  2283 | 00000E74 | 05[1C13]                  | 	add	ax, YKQS
  2284 | 00000E77 | 89C6                      | 	mov	si, ax
  2285 | 00000E79 | 83C608                    | 	add	si, 8
  2286 | 00000E7C | C7040000                  | 	mov	word [si], 0
  2287 |          |                           | 	; >>>>> Line:	266
  2288 |          |                           | 	; >>>>> Qi++; 
  2289 | 00000E80 | FF06[460A]                | 	inc	word [Qi]
  2290 |          |                           | 	; >>>>> Line:	268
  2291 |          |                           | 	; >>>>> return &YKQS[Qi - 1]; 
  2292 | 00000E84 | A1[460A]                  | 	mov	ax, word [Qi]
  2293 | 00000E87 | 48                        | 	dec	ax
  2294 | 00000E88 | B90A00                    | 	mov	cx, 10
  2295 | 00000E8B | F7E9                      | 	imul	cx
  2296 | 00000E8D | 05[1C13]                  | 	add	ax, YKQS
  2297 |          |                           | L_yakc_77:
  2298 | 00000E90 | 89EC                      | 	mov	sp, bp
  2299 | 00000E92 | 5D                        | 	pop	bp
  2300 | 00000E93 | C3                        | 	ret
  2301 |          |                           | L_yakc_75:
  2302 | 00000E94 | 55                        | 	push	bp
  2303 | 00000E95 | 89E5                      | 	mov	bp, sp
  2304 | 00000E97 | EB81                      | 	jmp	L_yakc_76
  2305 | 00000E99 | 90                        | 	ALIGN	2
  2306 |          |                           | YKQPend:
  2307 |          |                           | 	; >>>>> Line:	271
  2308 |          |                           | 	; >>>>> void* YKQPend(YKQ* q){ 
  2309 | 00000E9A | E9A600                    | 	jmp	L_yakc_79
  2310 |          |                           | L_yakc_80:
  2311 |          |                           | 	; >>>>> Line:	273
  2312 |          |                           | 	; >>>>> YKEnterMutex(); 
  2313 | 00000E9D | E85AFB                    | 	call	YKEnterMutex
  2314 |          |                           | 	; >>>>> Line:	274
  2315 |          |                           | 	; >>>>> if(q->stat 
  2316 | 00000EA0 | 8B7604                    | 	mov	si, word [bp+4]
  2317 | 00000EA3 | 83C608                    | 	add	si, 8
  2318 | 00000EA6 | 8B04                      | 	mov	ax, word [si]
  2319 | 00000EA8 | 85C0                      | 	test	ax, ax
  2320 | 00000EAA | 751F                      | 	jne	L_yakc_81
  2321 |          |                           | 	; >>>>> Line:	275
  2322 |          |                           | 	; >>>>> currentTask->state = 3; 
  2323 | 00000EAC | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2324 | 00000EB0 | 83C602                    | 	add	si, 2
  2325 | 00000EB3 | C60403                    | 	mov	byte [si], 3
  2326 |          |                           | 	; >>>>> Line:	276
  2327 |          |                           | 	; >>>>> currentTask->qBlock = q; 
  2328 | 00000EB6 | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2329 | 00000EBA | 83C60A                    | 	add	si, 10
  2330 | 00000EBD | 8B4604                    | 	mov	ax, word [bp+4]
  2331 | 00000EC0 | 8904                      | 	mov	word [si], ax
  2332 |          |                           | 	; >>>>> Line:	277
  2333 |          |                           | 	; >>>>> YKScheduler(1); 
  2334 | 00000EC2 | B001                      | 	mov	al, 1
  2335 | 00000EC4 | 50                        | 	push	ax
  2336 | 00000EC5 | E83AFD                    | 	call	YKScheduler
  2337 | 00000EC8 | 83C402                    | 	add	sp, 2
  2338 |          |                           | L_yakc_81:
  2339 |          |                           | 	; >>>>> Line:	280
  2340 |          |                           | 	; >>>>> t = (void*)* q->nextRemove; 
  2341 | 00000ECB | 8B7604                    | 	mov	si, word [bp+4]
  2342 | 00000ECE | 83C606                    | 	add	si, 6
  2343 | 00000ED1 | 8B34                      | 	mov	si, word [si]
  2344 | 00000ED3 | 8B04                      | 	mov	ax, word [si]
  2345 | 00000ED5 | 8946FE                    | 	mov	word [bp-2], ax
  2346 |          |                           | 	; >>>>> Line:	281
  2347 |          |                           | 	; >>>>> q->nextRemove++; 
  2348 | 00000ED8 | 8B7604                    | 	mov	si, word [bp+4]
  2349 | 00000EDB | 83C606                    | 	add	si, 6
  2350 | 00000EDE | 830402                    | 	add	word [si], 2
  2351 |          |                           | 	; >>>>> Line:	283
  2352 |          |                           | 	; >>>>> if(q->nextRemove == q->queueAddress + q->length){ 
  2353 | 00000EE1 | 8B7604                    | 	mov	si, word [bp+4]
  2354 | 00000EE4 | 83C602                    | 	add	si, 2
  2355 | 00000EE7 | 8B04                      | 	mov	ax, word [si]
  2356 | 00000EE9 | D1E0                      | 	shl	ax, 1
  2357 | 00000EEB | 8B7604                    | 	mov	si, word [bp+4]
  2358 | 00000EEE | 0304                      | 	add	ax, word [si]
  2359 | 00000EF0 | 83C606                    | 	add	si, 6
  2360 | 00000EF3 | 8B14                      | 	mov	dx, word [si]
  2361 | 00000EF5 | 39C2                      | 	cmp	dx, ax
  2362 | 00000EF7 | 750D                      | 	jne	L_yakc_82
  2363 |          |                           | 	; >>>>> Line:	284
  2364 |          |                           | 	; >>>>> q->nextRemove = q->queueAddress; 
  2365 | 00000EF9 | 8B7604                    | 	mov	si, word [bp+4]
  2366 | 00000EFC | 8B7E04                    | 	mov	di, word [bp+4]
  2367 | 00000EFF | 83C706                    | 	add	di, 6
  2368 | 00000F02 | 8B04                      | 	mov	ax, word [si]
  2369 | 00000F04 | 8905                      | 	mov	word [di], ax
  2370 |          |                           | L_yakc_82:
  2371 |          |                           | 	; >>>>> Line:	287
  2372 |          |                           | 	; >>>>> if(q->state == 1){ 
  2373 | 00000F06 | 8B7604                    | 	mov	si, word [bp+4]
  2374 | 00000F09 | 83C608                    | 	add	si, 8
  2375 | 00000F0C | 833C01                    | 	cmp	word [si], 1
  2376 | 00000F0F | 750C                      | 	jne	L_yakc_83
  2377 |          |                           | 	; >>>>> Line:	288
  2378 |          |                           | 	; >>>>> q->state = 2; 
  2379 | 00000F11 | 8B7604                    | 	mov	si, word [bp+4]
  2380 | 00000F14 | 83C608                    | 	add	si, 8
  2381 | 00000F17 | C7040200                  | 	mov	word [si], 2
  2382 | 00000F1B | EB1C                      | 	jmp	L_yakc_84
  2383 |          |                           | L_yakc_83:
  2384 |          |                           | 	; >>>>> Line:	289
  2385 |          |                           | 	; >>>>> } else if(q->nextRemove == q->nextEmpty){ 
  2386 | 00000F1D | 8B7604                    | 	mov	si, word [bp+4]
  2387 | 00000F20 | 83C606                    | 	add	si, 6
  2388 | 00000F23 | 8B7E04                    | 	mov	di, word [bp+4]
  2389 | 00000F26 | 83C704                    | 	add	di, 4
  2390 | 00000F29 | 8B05                      | 	mov	ax, word [di]
  2391 | 00000F2B | 3B04                      | 	cmp	ax, word [si]
  2392 | 00000F2D | 750A                      | 	jne	L_yakc_85
  2393 |          |                           | 	; >>>>> Line:	290
  2394 |          |                           | 	; >>>>> q->state = 0; 
  2395 | 00000F2F | 8B7604                    | 	mov	si, word [bp+4]
  2396 | 00000F32 | 83C608                    | 	add	si, 8
  2397 | 00000F35 | C7040000                  | 	mov	word [si], 0
  2398 |          |                           | L_yakc_85:
  2399 |          |                           | L_yakc_84:
  2400 |          |                           | 	; >>>>> Line:	292
  2401 |          |                           | 	; >>>>> YKExitMutex(); 
  2402 | 00000F39 | E8C0FA                    | 	call	YKExitMutex
  2403 |          |                           | 	; >>>>> Line:	293
  2404 |          |                           | 	; >>>>> return t; 
  2405 | 00000F3C | 8B46FE                    | 	mov	ax, word [bp-2]
  2406 |          |                           | L_yakc_86:
  2407 | 00000F3F | 89EC                      | 	mov	sp, bp
  2408 | 00000F41 | 5D                        | 	pop	bp
  2409 | 00000F42 | C3                        | 	ret
  2410 |          |                           | L_yakc_79:
  2411 | 00000F43 | 55                        | 	push	bp
  2412 | 00000F44 | 89E5                      | 	mov	bp, sp
  2413 | 00000F46 | 51                        | 	push	cx
  2414 | 00000F47 | E953FF                    | 	jmp	L_yakc_80
  2415 |          |                           | 	ALIGN	2
  2416 |          |                           | YKQPost:
  2417 |          |                           | 	; >>>>> Line:	296
  2418 |          |                           | 	; >>>>> int YKQPost(YKQ* q, void* msg){ 
  2419 | 00000F4A | E9E900                    | 	jmp	L_yakc_88
  2420 |          |                           | L_yakc_89:
  2421 |          |                           | 	; >>>>> Line:	298
  2422 |          |                           | 	; >>>>> YKEnterMutex(); 
  2423 | 00000F4D | E8AAFA                    | 	call	YKEnterMutex
  2424 |          |                           | 	; >>>>> Line:	300
  2425 |          |                           | 	; >>>>> if(q->state == 
  2426 | 00000F50 | 8B7604                    | 	mov	si, word [bp+4]
  2427 | 00000F53 | 83C608                    | 	add	si, 8
  2428 | 00000F56 | 833C01                    | 	cmp	word [si], 1
  2429 | 00000F59 | 7508                      | 	jne	L_yakc_90
  2430 |          |                           | 	; >>>>> Line:	301
  2431 |          |                           | 	; >>>>> YKExitMutex(); 
  2432 | 00000F5B | E89EFA                    | 	call	YKExitMutex
  2433 |          |                           | 	; >>>>> Line:	302
  2434 |          |                           | 	; >>>>> return 0; 
  2435 | 00000F5E | 31C0                      | 	xor	ax, ax
  2436 | 00000F60 | E9CF00                    | 	jmp	L_yakc_91
  2437 |          |                           | L_yakc_90:
  2438 |          |                           | 	; >>>>> Line:	304
  2439 |          |                           | 	; >>>>> *(q->nextEmpty) = msg; 
  2440 | 00000F63 | 8B7604                    | 	mov	si, word [bp+4]
  2441 | 00000F66 | 83C604                    | 	add	si, 4
  2442 | 00000F69 | 8B34                      | 	mov	si, word [si]
  2443 | 00000F6B | 8B4606                    | 	mov	ax, word [bp+6]
  2444 | 00000F6E | 8904                      | 	mov	word [si], ax
  2445 |          |                           | 	; >>>>> Line:	305
  2446 |          |                           | 	; >>>>> q->nextEmpty++; 
  2447 | 00000F70 | 8B7604                    | 	mov	si, word [bp+4]
  2448 | 00000F73 | 83C604                    | 	add	si, 4
  2449 | 00000F76 | 830402                    | 	add	word [si], 2
  2450 |          |                           | 	; >>>>> Line:	307
  2451 |          |                           | 	; >>>>> if(q->nextEmpty == q->queueAddress + q->length){ 
  2452 | 00000F79 | 8B7604                    | 	mov	si, word [bp+4]
  2453 | 00000F7C | 83C602                    | 	add	si, 2
  2454 | 00000F7F | 8B04                      | 	mov	ax, word [si]
  2455 | 00000F81 | D1E0                      | 	shl	ax, 1
  2456 | 00000F83 | 8B7604                    | 	mov	si, word [bp+4]
  2457 | 00000F86 | 0304                      | 	add	ax, word [si]
  2458 | 00000F88 | 83C604                    | 	add	si, 4
  2459 | 00000F8B | 8B14                      | 	mov	dx, word [si]
  2460 | 00000F8D | 39C2                      | 	cmp	dx, ax
  2461 | 00000F8F | 750D                      | 	jne	L_yakc_92
  2462 |          |                           | 	; >>>>> Line:	308
  2463 |          |                           | 	; >>>>> q->nextEmpty = q->queueAddress; 
  2464 | 00000F91 | 8B7604                    | 	mov	si, word [bp+4]
  2465 | 00000F94 | 8B7E04                    | 	mov	di, word [bp+4]
  2466 | 00000F97 | 83C704                    | 	add	di, 4
  2467 | 00000F9A | 8B04                      | 	mov	ax, word [si]
  2468 | 00000F9C | 8905                      | 	mov	word [di], ax
  2469 |          |                           | L_yakc_92:
  2470 |          |                           | 	; >>>>> Line:	311
  2471 |          |                           | 	; >>>>> if(q->state == 0){ 
  2472 | 00000F9E | 8B7604                    | 	mov	si, word [bp+4]
  2473 | 00000FA1 | 83C608                    | 	add	si, 8
  2474 | 00000FA4 | 8B04                      | 	mov	ax, word [si]
  2475 | 00000FA6 | 85C0                      | 	test	ax, ax
  2476 | 00000FA8 | 750C                      | 	jne	L_yakc_93
  2477 |          |                           | 	; >>>>> Line:	312
  2478 |          |                           | 	; >>>>> q->state = 2; 
  2479 | 00000FAA | 8B7604                    | 	mov	si, word [bp+4]
  2480 | 00000FAD | 83C608                    | 	add	si, 8
  2481 | 00000FB0 | C7040200                  | 	mov	word [si], 2
  2482 | 00000FB4 | EB1C                      | 	jmp	L_yakc_94
  2483 |          |                           | L_yakc_93:
  2484 |          |                           | 	; >>>>> Line:	313
  2485 |          |                           | 	; >>>>> } else if(q->nextRemove == q->nextEmpty){ 
  2486 | 00000FB6 | 8B7604                    | 	mov	si, word [bp+4]
  2487 | 00000FB9 | 83C606                    | 	add	si, 6
  2488 | 00000FBC | 8B7E04                    | 	mov	di, word [bp+4]
  2489 | 00000FBF | 83C704                    | 	add	di, 4
  2490 | 00000FC2 | 8B05                      | 	mov	ax, word [di]
  2491 | 00000FC4 | 3B04                      | 	cmp	ax, word [si]
  2492 | 00000FC6 | 750A                      | 	jne	L_yakc_95
  2493 |          |                           | 	; >>>>> Line:	314
  2494 |          |                           | 	; >>>>> q->state = 1; 
  2495 | 00000FC8 | 8B7604                    | 	mov	si, word [bp+4]
  2496 | 00000FCB | 83C608                    | 	add	si, 8
  2497 | 00000FCE | C7040100                  | 	mov	word [si], 1
  2498 |          |                           | L_yakc_95:
  2499 |          |                           | L_yakc_94:
  2500 |          |                           | 	; >>>>> Line:	316
  2501 |          |                           | 	; >>>>> browser = readyRoot; 
  2502 | 00000FD2 | A1[E413]                  | 	mov	ax, word [readyRoot]
  2503 | 00000FD5 | 8946FE                    | 	mov	word [bp-2], ax
  2504 |          |                           | 	; >>>>> Line:	318
  2505 |          |                           | 	; >>>>> while(browser){ 
  2506 | 00000FD8 | EB3B                      | 	jmp	L_yakc_97
  2507 |          |                           | L_yakc_96:
  2508 |          |                           | 	; >>>>> Line:	319
  2509 |          |                           | 	; >>>>> if(browser->state == 3){ 
  2510 | 00000FDA | 8B76FE                    | 	mov	si, word [bp-2]
  2511 | 00000FDD | 83C602                    | 	add	si, 2
  2512 | 00000FE0 | 803C03                    | 	cmp	byte [si], 3
  2513 | 00000FE3 | 7522                      | 	jne	L_yakc_99
  2514 |          |                           | 	; >>>>> Line:	320
  2515 |          |                           | 	; >>>>> if(browser->qBlock == q){ 
  2516 | 00000FE5 | 8B76FE                    | 	mov	si, word [bp-2]
  2517 | 00000FE8 | 83C60A                    | 	add	si, 10
  2518 | 00000FEB | 8B4604                    | 	mov	ax, word [bp+4]
  2519 | 00000FEE | 3B04                      | 	cmp	ax, word [si]
  2520 | 00000FF0 | 7515                      | 	jne	L_yakc_100
  2521 |          |                           | 	; >>>>> Line:	321
  2522 |          |                           | 	; >>>>> browser->state = 1; 
  2523 | 00000FF2 | 8B76FE                    | 	mov	si, word [bp-2]
  2524 | 00000FF5 | 83C602                    | 	add	si, 2
  2525 | 00000FF8 | C60401                    | 	mov	byte [si], 1
  2526 |          |                           | 	; >>>>> Line:	322
  2527 |          |                           | 	; >>>>> browser->qBlock = 0; 
  2528 | 00000FFB | 8B76FE                    | 	mov	si, word [bp-2]
  2529 | 00000FFE | 83C60A                    | 	add	si, 10
  2530 | 00001001 | C7040000                  | 	mov	word [si], 0
  2531 |          |                           | 	; >>>>> Line:	323
  2532 |          |                           | 	; >>>>> f(e 
  2533 | 00001005 | EB15                      | 	jmp	L_yakc_98
  2534 |          |                           | L_yakc_100:
  2535 |          |                           | L_yakc_99:
  2536 |          |                           | 	; >>>>> Line:	326
  2537 |          |                           | 	; >>>>> browser = browser->next; 
  2538 | 00001007 | 8B76FE                    | 	mov	si, word [bp-2]
  2539 | 0000100A | 83C604                    | 	add	si, 4
  2540 | 0000100D | 8B04                      | 	mov	ax, word [si]
  2541 | 0000100F | 8946FE                    | 	mov	word [bp-2], ax
  2542 |          |                           | 	; >>>>> Line:	327
  2543 |          |                           | 	; >>>>> YKExitMutex(); 
  2544 | 00001012 | E8E7F9                    | 	call	YKExitMutex
  2545 |          |                           | L_yakc_97:
  2546 | 00001015 | 8B46FE                    | 	mov	ax, word [bp-2]
  2547 | 00001018 | 85C0                      | 	test	ax, ax
  2548 | 0000101A | 75BE                      | 	jne	L_yakc_96
  2549 |          |                           | L_yakc_98:
  2550 |          |                           | 	; >>>>> Line:	330
  2551 |          |                           | 	; >>>>> if(YKISRCallDepth == 0){ 
  2552 | 0000101C | A1[380A]                  | 	mov	ax, word [YKISRCallDepth]
  2553 | 0000101F | 85C0                      | 	test	ax, ax
  2554 | 00001021 | 7509                      | 	jne	L_yakc_101
  2555 |          |                           | 	; >>>>> Line:	331
  2556 |          |                           | 	; >>>>> YKScheduler(1); 
  2557 | 00001023 | B001                      | 	mov	al, 1
  2558 | 00001025 | 50                        | 	push	ax
  2559 | 00001026 | E8D9FB                    | 	call	YKScheduler
  2560 | 00001029 | 83C402                    | 	add	sp, 2
  2561 |          |                           | L_yakc_101:
  2562 |          |                           | 	; >>>>> Line:	334
  2563 |          |                           | 	; >>>>> YKExitMutex(); 
  2564 | 0000102C | E8CDF9                    | 	call	YKExitMutex
  2565 |          |                           | 	; >>>>> Line:	335
  2566 |          |                           | 	; >>>>> return 1; 
  2567 | 0000102F | B80100                    | 	mov	ax, 1
  2568 |          |                           | L_yakc_91:
  2569 | 00001032 | 89EC                      | 	mov	sp, bp
  2570 | 00001034 | 5D                        | 	pop	bp
  2571 | 00001035 | C3                        | 	ret
  2572 |          |                           | L_yakc_88:
  2573 | 00001036 | 55                        | 	push	bp
  2574 | 00001037 | 89E5                      | 	mov	bp, sp
  2575 | 00001039 | 51                        | 	push	cx
  2576 | 0000103A | E910FF                    | 	jmp	L_yakc_89
  2577 | 0000103D | 90                        | 	ALIGN	2
  2578 |          |                           | YKEventCreate:
  2579 |          |                           | 	; >>>>> Line:	347
  2580 |          |                           | 	; >>>>> YKEVENT *YKEventCreate(unsigned initialValue) { 
  2581 | 0000103E | EB21                      | 	jmp	L_yakc_103
  2582 |          |                           | L_yakc_104:
  2583 |          |                           | 	; >>>>> Line:	348
  2584 |          |                           | 	; >>>>> YKEvents[eventIndex].flag = initialValue; 
  2585 | 00001040 | A1[480A]                  | 	mov	ax, word [eventIndex]
  2586 | 00001043 | D1E0                      | 	shl	ax, 1
  2587 | 00001045 | 89C6                      | 	mov	si, ax
  2588 | 00001047 | 81C6[8013]                | 	add	si, YKEvents
  2589 | 0000104B | 8B4604                    | 	mov	ax, word [bp+4]
  2590 | 0000104E | 8904                      | 	mov	word [si], ax
  2591 |          |                           | 	; >>>>> Line:	349
  2592 |          |                           | 	; >>>>> eventIndex++; 
  2593 | 00001050 | FF06[480A]                | 	inc	word [eventIndex]
  2594 |          |                           | 	; >>>>> Line:	351
  2595 |          |                           | 	; >>>>> return &YKEvents[eventIndex-1]; 
  2596 | 00001054 | A1[480A]                  | 	mov	ax, word [eventIndex]
  2597 | 00001057 | 48                        | 	dec	ax
  2598 | 00001058 | D1E0                      | 	shl	ax, 1
  2599 | 0000105A | 05[8013]                  | 	add	ax, YKEvents
  2600 |          |                           | L_yakc_105:
  2601 | 0000105D | 89EC                      | 	mov	sp, bp
  2602 | 0000105F | 5D                        | 	pop	bp
  2603 | 00001060 | C3                        | 	ret
  2604 |          |                           | L_yakc_103:
  2605 | 00001061 | 55                        | 	push	bp
  2606 | 00001062 | 89E5                      | 	mov	bp, sp
  2607 | 00001064 | EBDA                      | 	jmp	L_yakc_104
  2608 |          |                           | 	ALIGN	2
  2609 |          |                           | YKEventPend:
  2610 |          |                           | 	; >>>>> Line:	366
  2611 |          |                           | 	; >>>>> unsigned YKEventPend(YKEVENT *event, unsigned eventMask, int waitMode) { 
  2612 | 00001066 | EB70                      | 	jmp	L_yakc_107
  2613 |          |                           | L_yakc_108:
  2614 |          |                           | 	; >>>>> Line:	367
  2615 |          |                           | 	; >>>>> YKEnterMutex(); 
  2616 | 00001068 | E88FF9                    | 	call	YKEnterMutex
  2617 |          |                           | 	; >>>>> Line:	369
  2618 |          |                           | 	; >>>>> if(waitMode == 2){ 
  2619 | 0000106B | 837E0802                  | 	cmp	word [bp+8], 2
  2620 | 0000106F | 7510                      | 	jne	L_yakc_109
  2621 |          |                           | 	; >>>>> Line:	370
  2622 |          |                           | 	; >>>>> if(e 
  2623 | 00001071 | 8B7604                    | 	mov	si, word [bp+4]
  2624 | 00001074 | 8B4606                    | 	mov	ax, word [bp+6]
  2625 | 00001077 | 3B04                      | 	cmp	ax, word [si]
  2626 | 00001079 | 7504                      | 	jne	L_yakc_110
  2627 |          |                           | 	; >>>>> Line:	371
  2628 |          |                           | 	; >>>>> return event->flag; 
  2629 | 0000107B | 8B04                      | 	mov	ax, word [si]
  2630 | 0000107D | EB55                      | 	jmp	L_yakc_111
  2631 |          |                           | L_yakc_110:
  2632 | 0000107F | EB14                      | 	jmp	L_yakc_112
  2633 |          |                           | L_yakc_109:
  2634 |          |                           | 	; >>>>> Line:	374
  2635 |          |                           | 	; >>>>> else if(waitMode == 1){ 
  2636 | 00001081 | 837E0801                  | 	cmp	word [bp+8], 1
  2637 | 00001085 | 750E                      | 	jne	L_yakc_113
  2638 |          |                           | 	; >>>>> Line:	375
  2639 |          |                           | 	; >>>>> if(event->flag & eventMask){ 
  2640 | 00001087 | 8B7604                    | 	mov	si, word [bp+4]
  2641 | 0000108A | 8B04                      | 	mov	ax, word [si]
  2642 | 0000108C | 234606                    | 	and	ax, word [bp+6]
  2643 | 0000108F | 7404                      | 	je	L_yakc_114
  2644 |          |                           | 	; >>>>> Line:	376
  2645 |          |                           | 	; >>>>> return event->flag; 
  2646 | 00001091 | 8B04                      | 	mov	ax, word [si]
  2647 | 00001093 | EB3F                      | 	jmp	L_yakc_111
  2648 |          |                           | L_yakc_114:
  2649 |          |                           | L_yakc_113:
  2650 |          |                           | L_yakc_112:
  2651 |          |                           | 	; >>>>> Line:	380
  2652 |          |                           | 	; >>>>> currentTask->event = event; 
  2653 | 00001095 | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2654 | 00001099 | 83C60C                    | 	add	si, 12
  2655 | 0000109C | 8B4604                    | 	mov	ax, word [bp+4]
  2656 | 0000109F | 8904                      | 	mov	word [si], ax
  2657 |          |                           | 	; >>>>> Line:	381
  2658 |          |                           | 	; >>>>> currentTask->mask = eventMask; 
  2659 | 000010A1 | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2660 | 000010A5 | 83C610                    | 	add	si, 16
  2661 | 000010A8 | 8B4606                    | 	mov	ax, word [bp+6]
  2662 | 000010AB | 8904                      | 	mov	word [si], ax
  2663 |          |                           | 	; >>>>> Line:	382
  2664 |          |                           | 	; >>>>> currentTask->mode = waitMode; 
  2665 | 000010AD | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2666 | 000010B1 | 83C60E                    | 	add	si, 14
  2667 | 000010B4 | 8B4608                    | 	mov	ax, word [bp+8]
  2668 | 000010B7 | 8904                      | 	mov	word [si], ax
  2669 |          |                           | 	; >>>>> Line:	383
  2670 |          |                           | 	; >>>>> currentTask->state = 5; 
  2671 | 000010B9 | 8B36[3C0A]                | 	mov	si, word [currentTask]
  2672 | 000010BD | 83C602                    | 	add	si, 2
  2673 | 000010C0 | C60405                    | 	mov	byte [si], 5
  2674 |          |                           | 	; >>>>> Line:	385
  2675 |          |                           | 	; >>>>> YKScheduler(1); 
  2676 | 000010C3 | B001                      | 	mov	al, 1
  2677 | 000010C5 | 50                        | 	push	ax
  2678 | 000010C6 | E839FB                    | 	call	YKScheduler
  2679 | 000010C9 | 83C402                    | 	add	sp, 2
  2680 |          |                           | 	; >>>>> Line:	387
  2681 |          |                           | 	; >>>>> YKExitMutex(); 
  2682 | 000010CC | E82DF9                    | 	call	YKExitMutex
  2683 |          |                           | 	; >>>>> Line:	388
  2684 |          |                           | 	; >>>>> return event->flag; 
  2685 | 000010CF | 8B7604                    | 	mov	si, word [bp+4]
  2686 | 000010D2 | 8B04                      | 	mov	ax, word [si]
  2687 |          |                           | L_yakc_111:
  2688 | 000010D4 | 89EC                      | 	mov	sp, bp
  2689 | 000010D6 | 5D                        | 	pop	bp
  2690 | 000010D7 | C3                        | 	ret
  2691 |          |                           | L_yakc_107:
  2692 | 000010D8 | 55                        | 	push	bp
  2693 | 000010D9 | 89E5                      | 	mov	bp, sp
  2694 | 000010DB | EB8B                      | 	jmp	L_yakc_108
  2695 |          |                           | L_yakc_117:
  2696 | 000010DD | 414E5900                  | 	DB	"ANY",0
  2697 |          |                           | L_yakc_116:
  2698 | 000010E1 | 414C4C00                  | 	DB	"ALL",0
  2699 | 000010E5 | 90                        | 	ALIGN	2
  2700 |          |                           | YKEventSet:
  2701 |          |                           | 	; >>>>> Line:	398
  2702 |          |                           | 	; >>>>> void YKEventSet(YKEVENT *event, unsigned eventMask) { 
  2703 | 000010E6 | E9FB00                    | 	jmp	L_yakc_118
  2704 |          |                           | L_yakc_119:
  2705 |          |                           | 	; >>>>> Line:	400
  2706 |          |                           | 	; >>>>> event->flag = event->flag | e 
  2707 | 000010E9 | 8B7604                    | 	mov	si, word [bp+4]
  2708 | 000010EC | 8B04                      | 	mov	ax, word [si]
  2709 | 000010EE | 0B4606                    | 	or	ax, word [bp+6]
  2710 | 000010F1 | 8904                      | 	mov	word [si], ax
  2711 |          |                           | 	; >>>>> Line:	402
  2712 |          |                           | 	; >>>>> YKEnterMutex(); 
  2713 | 000010F3 | E804F9                    | 	call	YKEnterMutex
  2714 |          |                           | 	; >>>>> Line:	404
  2715 |          |                           | 	; >>>>> browser = readyRoot; 
  2716 | 000010F6 | A1[E413]                  | 	mov	ax, word [readyRoot]
  2717 | 000010F9 | 8946FE                    | 	mov	word [bp-2], ax
  2718 |          |                           | 	; >>>>> Line:	405
  2719 |          |                           | 	; >>>>> while(browser){ 
  2720 | 000010FC | E9C400                    | 	jmp	L_yakc_121
  2721 |          |                           | L_yakc_120:
  2722 |          |                           | 	; >>>>> Line:	406
  2723 |          |                           | 	; >>>>> if ((browser->state == 5) && (browser->event == event)) { 
  2724 | 000010FF | 8B76FE                    | 	mov	si, word [bp-2]
  2725 | 00001102 | 83C602                    | 	add	si, 2
  2726 | 00001105 | 803C05                    | 	cmp	byte [si], 5
  2727 | 00001108 | 7403E9A800                | 	jne	L_yakc_123
  2728 | 0000110D | 8B76FE                    | 	mov	si, word [bp-2]
  2729 | 00001110 | 83C60C                    | 	add	si, 12
  2730 | 00001113 | 8B4604                    | 	mov	ax, word [bp+4]
  2731 | 00001116 | 3B04                      | 	cmp	ax, word [si]
  2732 | 00001118 | 7403E99800                | 	jne	L_yakc_123
  2733 |          |                           | 	; >>>>> Line:	407
  2734 |          |                           | 	; >>>>> if(browser->mode == 2){ 
  2735 | 0000111D | 8B76FE                    | 	mov	si, word [bp-2]
  2736 | 00001120 | 83C60E                    | 	add	si, 14
  2737 | 00001123 | 833C02                    | 	cmp	word [si], 2
  2738 | 00001126 | 7542                      | 	jne	L_yakc_124
  2739 |          |                           | 	; >>>>> Line:	408
  2740 |          |                           | 	; >>>>> if(event->flag == browser->mask){ 
  2741 | 00001128 | 8B76FE                    | 	mov	si, word [bp-2]
  2742 | 0000112B | 83C610                    | 	add	si, 16
  2743 | 0000112E | 8B7E04                    | 	mov	di, word [bp+4]
  2744 | 00001131 | 8B05                      | 	mov	ax, word [di]
  2745 | 00001133 | 3B04                      | 	cmp	ax, word [si]
  2746 | 00001135 | 7531                      | 	jne	L_yakc_125
  2747 |          |                           | 	; >>>>> Line:	409
  2748 |          |                           | 	; >>>>> printString("ALL"); 
  2749 | 00001137 | B8[E110]                  | 	mov	ax, L_yakc_116
  2750 | 0000113A | 50                        | 	push	ax
  2751 | 0000113B | E8EAF2                    | 	call	printString
  2752 | 0000113E | 83C402                    | 	add	sp, 2
  2753 |          |                           | 	; >>>>> Line:	410
  2754 |          |                           | 	; >>>>> browser->state = 1; 
  2755 | 00001141 | 8B76FE                    | 	mov	si, word [bp-2]
  2756 | 00001144 | 83C602                    | 	add	si, 2
  2757 | 00001147 | C60401                    | 	mov	byte [si], 1
  2758 |          |                           | 	; >>>>> Line:	411
  2759 |          |                           | 	; >>>>> browser->event = 0; 
  2760 | 0000114A | 8B76FE                    | 	mov	si, word [bp-2]
  2761 | 0000114D | 83C60C                    | 	add	si, 12
  2762 | 00001150 | C7040000                  | 	mov	word [si], 0
  2763 |          |                           | 	; >>>>> Line:	412
  2764 |          |                           | 	; >>>>> browser->mask = 0; 
  2765 | 00001154 | 8B76FE                    | 	mov	si, word [bp-2]
  2766 | 00001157 | 83C610                    | 	add	si, 16
  2767 | 0000115A | C7040000                  | 	mov	word [si], 0
  2768 |          |                           | 	; >>>>> Line:	413
  2769 |          |                           | 	; >>>>> browser->mode = 0; 
  2770 | 0000115E | 8B76FE                    | 	mov	si, word [bp-2]
  2771 | 00001161 | 83C60E                    | 	add	si, 14
  2772 | 00001164 | C7040000                  | 	mov	word [si], 0
  2773 |          |                           | L_yakc_125:
  2774 | 00001168 | EB4B                      | 	jmp	L_yakc_126
  2775 |          |                           | L_yakc_124:
  2776 |          |                           | 	; >>>>> Line:	416
  2777 |          |                           | 	; >>>>> else if(browser->mode == 1){ 
  2778 | 0000116A | 8B76FE                    | 	mov	si, word [bp-2]
  2779 | 0000116D | 83C60E                    | 	add	si, 14
  2780 | 00001170 | 833C01                    | 	cmp	word [si], 1
  2781 | 00001173 | 7540                      | 	jne	L_yakc_127
  2782 |          |                           | 	; >>>>> Line:	417
  2783 |          |                           | 	; >>>>> t->flag & ~ 
  2784 | 00001175 | 8B76FE                    | 	mov	si, word [bp-2]
  2785 | 00001178 | 83C610                    | 	add	si, 16
  2786 | 0000117B | 8B04                      | 	mov	ax, word [si]
  2787 | 0000117D | 8B7604                    | 	mov	si, word [bp+4]
  2788 | 00001180 | 2304                      | 	and	ax, word [si]
  2789 | 00001182 | 7431                      | 	je	L_yakc_128
  2790 |          |                           | 	; >>>>> Line:	418
  2791 |          |                           | 	; >>>>> printString("ANY"); 
  2792 | 00001184 | B8[DD10]                  | 	mov	ax, L_yakc_117
  2793 | 00001187 | 50                        | 	push	ax
  2794 | 00001188 | E89DF2                    | 	call	printString
  2795 | 0000118B | 83C402                    | 	add	sp, 2
  2796 |          |                           | 	; >>>>> Line:	419
  2797 |          |                           | 	; >>>>> browser->state = 1; 
  2798 | 0000118E | 8B76FE                    | 	mov	si, word [bp-2]
  2799 | 00001191 | 83C602                    | 	add	si, 2
  2800 | 00001194 | C60401                    | 	mov	byte [si], 1
  2801 |          |                           | 	; >>>>> Line:	420
  2802 |          |                           | 	; >>>>> browser->event = 0; 
  2803 | 00001197 | 8B76FE                    | 	mov	si, word [bp-2]
  2804 | 0000119A | 83C60C                    | 	add	si, 12
  2805 | 0000119D | C7040000                  | 	mov	word [si], 0
  2806 |          |                           | 	; >>>>> Line:	421
  2807 |          |                           | 	; >>>>> browser->mask = 0; 
  2808 | 000011A1 | 8B76FE                    | 	mov	si, word [bp-2]
  2809 | 000011A4 | 83C610                    | 	add	si, 16
  2810 | 000011A7 | C7040000                  | 	mov	word [si], 0
  2811 |          |                           | 	; >>>>> Line:	422
  2812 |          |                           | 	; >>>>> browser->mode = 0; 
  2813 | 000011AB | 8B76FE                    | 	mov	si, word [bp-2]
  2814 | 000011AE | 83C60E                    | 	add	si, 14
  2815 | 000011B1 | C7040000                  | 	mov	word [si], 0
  2816 |          |                           | L_yakc_128:
  2817 |          |                           | L_yakc_127:
  2818 |          |                           | L_yakc_126:
  2819 |          |                           | L_yakc_123:
  2820 |          |                           | 	; >>>>> Line:	427
  2821 |          |                           | 	; >>>>> browser = browser->next; 
  2822 | 000011B5 | 8B76FE                    | 	mov	si, word [bp-2]
  2823 | 000011B8 | 83C604                    | 	add	si, 4
  2824 | 000011BB | 8B04                      | 	mov	ax, word [si]
  2825 | 000011BD | 8946FE                    | 	mov	word [bp-2], ax
  2826 |          |                           | 	; >>>>> Line:	428
  2827 |          |                           | 	; >>>>> YKExitMutex(); 
  2828 | 000011C0 | E839F8                    | 	call	YKExitMutex
  2829 |          |                           | L_yakc_121:
  2830 | 000011C3 | 8B46FE                    | 	mov	ax, word [bp-2]
  2831 | 000011C6 | 85C0                      | 	test	ax, ax
  2832 | 000011C8 | 7403E932FF                | 	jne	L_yakc_120
  2833 |          |                           | L_yakc_122:
  2834 |          |                           | 	; >>>>> Line:	431
  2835 |          |                           | 	; >>>>> if(YKISRCallDepth == 0){ 
  2836 | 000011CD | A1[380A]                  | 	mov	ax, word [YKISRCallDepth]
  2837 | 000011D0 | 85C0                      | 	test	ax, ax
  2838 | 000011D2 | 7509                      | 	jne	L_yakc_129
  2839 |          |                           | 	; >>>>> Line:	432
  2840 |          |                           | 	; >>>>> YKScheduler(1); 
  2841 | 000011D4 | B001                      | 	mov	al, 1
  2842 | 000011D6 | 50                        | 	push	ax
  2843 | 000011D7 | E828FA                    | 	call	YKScheduler
  2844 | 000011DA | 83C402                    | 	add	sp, 2
  2845 |          |                           | L_yakc_129:
  2846 |          |                           | 	; >>>>> Line:	435
  2847 |          |                           | 	; >>>>> YKExitMutex(); 
  2848 | 000011DD | E81CF8                    | 	call	YKExitMutex
  2849 | 000011E0 | 89EC                      | 	mov	sp, bp
  2850 | 000011E2 | 5D                        | 	pop	bp
  2851 | 000011E3 | C3                        | 	ret
  2852 |          |                           | L_yakc_118:
  2853 | 000011E4 | 55                        | 	push	bp
  2854 | 000011E5 | 89E5                      | 	mov	bp, sp
  2855 | 000011E7 | 51                        | 	push	cx
  2856 | 000011E8 | E9FEFE                    | 	jmp	L_yakc_119
  2857 | 000011EB | 90                        | 	ALIGN	2
  2858 |          |                           | YKEventReset:
  2859 |          |                           | 	; >>>>> Line:	438
  2860 |          |                           | 	; >>>>> void YKEventReset(YKEVENT *event, unsigned eventMask) { 
  2861 | 000011EC | EB10                      | 	jmp	L_yakc_131
  2862 |          |                           | L_yakc_132:
  2863 |          |                           | 	; >>>>> Line:	439
  2864 |          |                           | 	; >>>>> event->flag = event->flag & ~ 
  2865 | 000011EE | 8B4606                    | 	mov	ax, word [bp+6]
  2866 | 000011F1 | F7D0                      | 	not	ax
  2867 | 000011F3 | 8B7604                    | 	mov	si, word [bp+4]
  2868 | 000011F6 | 2304                      | 	and	ax, word [si]
  2869 | 000011F8 | 8904                      | 	mov	word [si], ax
  2870 | 000011FA | 89EC                      | 	mov	sp, bp
  2871 | 000011FC | 5D                        | 	pop	bp
  2872 | 000011FD | C3                        | 	ret
  2873 |          |                           | L_yakc_131:
  2874 | 000011FE | 55                        | 	push	bp
  2875 | 000011FF | 89E5                      | 	mov	bp, sp
  2876 | 00001201 | EBEB                      | 	jmp	L_yakc_132
  2877 | 00001203 | 90                        | 	ALIGN	2
  2878 |          |                           | YKTCBs:
  2879 | 00001204 | 00<rept>                  | 	TIMES	180 db 0
  2880 |          |                           | YKSEMS:
  2881 | 000012B8 | 00<rept>                  | 	TIMES	100 db 0
  2882 |          |                           | YKQS:
  2883 | 0000131C | 00<rept>                  | 	TIMES	100 db 0
  2884 |          |                           | YKEvents:
  2885 | 00001380 | 00<rept>                  | 	TIMES	100 db 0
  2886 |          |                           | readyRoot:
  2887 | 000013E4 | 00<rept>                  | 	TIMES	2 db 0
  2888 |          |                           | taskToRun:
  2889 | 000013E6 | 00<rept>                  | 	TIMES	2 db 0
  2890 |          |                           | YKIdleTasks:
  2891 | 000013E8 | 00<rept>                  | 	TIMES	512 db 0
  2892 |          |                           | ; Generated by c86 (BYU-NASM) 5.1 (beta) from simptrisApp.i
  2893 |          |                           | 	CPU	8086
  2894 |          |                           | 	ALIGN	2
  2895 | 000015E8 | E92B07                    | 	jmp	main	; Jump to program start
  2896 | 000015EB | 90                        | 	ALIGN	2
  2897 |          |                           | seed:
  2898 | 000015EC | DF040000                  | 	DD	1247
  2899 |          |                           | 	ALIGN	2
  2900 |          |                           | buildColumnsArray:
  2901 |          |                           | 	; >>>>> Line:	63
  2902 |          |                           | 	; >>>>> void buildColumnsArray(int centerCol, int rotation, int type) { 
  2903 | 000015F0 | E9DF00                    | 	jmp	L_simptrisApp_1
  2904 |          |                           | L_simptrisApp_2:
  2905 |          |                           | 	; >>>>> Line:	64
  2906 |          |                           | 	; >>>>> if (type == 0) { 
  2907 | 000015F3 | 8B4608                    | 	mov	ax, word [bp+8]
  2908 | 000015F6 | 85C0                      | 	test	ax, ax
  2909 | 000015F8 | 7403E98B00                | 	jne	L_simptrisApp_3
  2910 |          |                           | 	; >>>>> Line:	65
  2911 |          |                           | 	; >>>>> switch(rotation) { 
  2912 | 000015FD | 8B4606                    | 	mov	ax, word [bp+6]
  2913 | 00001600 | 83E800                    | 	sub	ax, 0
  2914 | 00001603 | 740B                      | 	je	L_simptrisApp_5
  2915 | 00001605 | 48                        | 	dec	ax
  2916 | 00001606 | 7426                      | 	je	L_simptrisApp_6
  2917 | 00001608 | 48                        | 	dec	ax
  2918 | 00001609 | 7441                      | 	je	L_simptrisApp_7
  2919 | 0000160B | 48                        | 	dec	ax
  2920 | 0000160C | 745C                      | 	je	L_simptrisApp_8
  2921 | 0000160E | EB76                      | 	jmp	L_simptrisApp_4
  2922 |          |                           | L_simptrisApp_5:
  2923 |          |                           | 	; >>>>> Line:	67
  2924 |          |                           | 	; >>>>> columns[centerCol] += 2; 
  2925 | 00001610 | 8B4604                    | 	mov	ax, word [bp+4]
  2926 | 00001613 | D1E0                      | 	shl	ax, 1
  2927 | 00001615 | 89C6                      | 	mov	si, ax
  2928 | 00001617 | 81C6[7429]                | 	add	si, columns
  2929 | 0000161B | 830402                    | 	add	word [si], 2
  2930 |          |                           | 	; >>>>> Line:	68
  2931 |          |                           | 	; >>>>> columns[centerCol + 1] += 1; 
  2932 | 0000161E | 8B4604                    | 	mov	ax, word [bp+4]
  2933 | 00001621 | 40                        | 	inc	ax
  2934 | 00001622 | D1E0                      | 	shl	ax, 1
  2935 | 00001624 | 89C6                      | 	mov	si, ax
  2936 | 00001626 | 81C6[7429]                | 	add	si, columns
  2937 | 0000162A | FF04                      | 	inc	word [si]
  2938 |          |                           | 	; >>>>> Line:	69
  2939 |          |                           | 	; >>>>> break; 
  2940 | 0000162C | EB58                      | 	jmp	L_simptrisApp_4
  2941 |          |                           | L_simptrisApp_6:
  2942 |          |                           | 	; >>>>> Line:	71
  2943 |          |                           | 	; >>>>> 1] += 1; 
  2944 | 0000162E | 8B4604                    | 	mov	ax, word [bp+4]
  2945 | 00001631 | D1E0                      | 	shl	ax, 1
  2946 | 00001633 | 89C6                      | 	mov	si, ax
  2947 | 00001635 | 81C6[7429]                | 	add	si, columns
  2948 | 00001639 | 830402                    | 	add	word [si], 2
  2949 |          |                           | 	; >>>>> Line:	72
  2950 |          |                           | 	; >>>>> columns[centerCol - 1] += 1; 
  2951 | 0000163C | 8B4604                    | 	mov	ax, word [bp+4]
  2952 | 0000163F | 48                        | 	dec	ax
  2953 | 00001640 | D1E0                      | 	shl	ax, 1
  2954 | 00001642 | 89C6                      | 	mov	si, ax
  2955 | 00001644 | 81C6[7429]                | 	add	si, columns
  2956 | 00001648 | FF04                      | 	inc	word [si]
  2957 |          |                           | 	; >>>>> Line:	73
  2958 |          |                           | 	; >>>>> break; 
  2959 | 0000164A | EB3A                      | 	jmp	L_simptrisApp_4
  2960 |          |                           | L_simptrisApp_7:
  2961 |          |                           | 	; >>>>> Line:	75
  2962 |          |                           | 	; >>>>> columns[centerCol] += 2; 
  2963 | 0000164C | 8B4604                    | 	mov	ax, word [bp+4]
  2964 | 0000164F | D1E0                      | 	shl	ax, 1
  2965 | 00001651 | 89C6                      | 	mov	si, ax
  2966 | 00001653 | 81C6[7429]                | 	add	si, columns
  2967 | 00001657 | 830402                    | 	add	word [si], 2
  2968 |          |                           | 	; >>>>> Line:	76
  2969 |          |                           | 	; >>>>> columns[centerCol - 1] += 1; 
  2970 | 0000165A | 8B4604                    | 	mov	ax, word [bp+4]
  2971 | 0000165D | 48                        | 	dec	ax
  2972 | 0000165E | D1E0                      | 	shl	ax, 1
  2973 | 00001660 | 89C6                      | 	mov	si, ax
  2974 | 00001662 | 81C6[7429]                | 	add	si, columns
  2975 | 00001666 | FF04                      | 	inc	word [si]
  2976 |          |                           | 	; >>>>> Line:	77
  2977 |          |                           | 	; >>>>> break; 
  2978 | 00001668 | EB1C                      | 	jmp	L_simptrisApp_4
  2979 |          |                           | L_simptrisApp_8:
  2980 |          |                           | 	; >>>>> Line:	79
  2981 |          |                           | 	; >>>>> columns[centerCol] += 2; 
  2982 | 0000166A | 8B4604                    | 	mov	ax, word [bp+4]
  2983 | 0000166D | D1E0                      | 	shl	ax, 1
  2984 | 0000166F | 89C6                      | 	mov	si, ax
  2985 | 00001671 | 81C6[7429]                | 	add	si, columns
  2986 | 00001675 | 830402                    | 	add	word [si], 2
  2987 |          |                           | 	; >>>>> Line:	80
  2988 |          |                           | 	; >>>>> columns[centerCol + 1] += 1; 
  2989 | 00001678 | 8B4604                    | 	mov	ax, word [bp+4]
  2990 | 0000167B | 40                        | 	inc	ax
  2991 | 0000167C | D1E0                      | 	shl	ax, 1
  2992 | 0000167E | 89C6                      | 	mov	si, ax
  2993 | 00001680 | 81C6[7429]                | 	add	si, columns
  2994 | 00001684 | FF04                      | 	inc	word [si]
  2995 |          |                           | L_simptrisApp_4:
  2996 |          |                           | 	; >>>>> Line:	81
  2997 |          |                           | 	; >>>>> break; 
  2998 | 00001686 | EB46                      | 	jmp	L_simptrisApp_9
  2999 |          |                           | L_simptrisApp_3:
  3000 |          |                           | 	; >>>>> Line:	84
  3001 |          |                           | 	; >>>>> switch(rotation) { 
  3002 | 00001688 | 8B4606                    | 	mov	ax, word [bp+6]
  3003 | 0000168B | 83E800                    | 	sub	ax, 0
  3004 | 0000168E | 7405                      | 	je	L_simptrisApp_11
  3005 | 00001690 | 48                        | 	dec	ax
  3006 | 00001691 | 742D                      | 	je	L_simptrisApp_12
  3007 | 00001693 | EB39                      | 	jmp	L_simptrisApp_10
  3008 |          |                           | L_simptrisApp_11:
  3009 |          |                           | 	; >>>>> Line:	86
  3010 |          |                           | 	; >>>>> columns[centerCol] += 1; 
  3011 | 00001695 | 8B4604                    | 	mov	ax, word [bp+4]
  3012 | 00001698 | D1E0                      | 	shl	ax, 1
  3013 | 0000169A | 89C6                      | 	mov	si, ax
  3014 | 0000169C | 81C6[7429]                | 	add	si, columns
  3015 | 000016A0 | FF04                      | 	inc	word [si]
  3016 |          |                           | 	; >>>>> Line:	87
  3017 |          |                           | 	; >>>>> columns[centerCol + 1] += 1; 
  3018 | 000016A2 | 8B4604                    | 	mov	ax, word [bp+4]
  3019 | 000016A5 | 40                        | 	inc	ax
  3020 | 000016A6 | D1E0                      | 	shl	ax, 1
  3021 | 000016A8 | 89C6                      | 	mov	si, ax
  3022 | 000016AA | 81C6[7429]                | 	add	si, columns
  3023 | 000016AE | FF04                      | 	inc	word [si]
  3024 |          |                           | 	; >>>>> Line:	88
  3025 |          |                           | 	; >>>>> de(be 
  3026 | 000016B0 | 8B4604                    | 	mov	ax, word [bp+4]
  3027 | 000016B3 | 48                        | 	dec	ax
  3028 | 000016B4 | D1E0                      | 	shl	ax, 1
  3029 | 000016B6 | 89C6                      | 	mov	si, ax
  3030 | 000016B8 | 81C6[7429]                | 	add	si, columns
  3031 | 000016BC | FF04                      | 	inc	word [si]
  3032 |          |                           | 	; >>>>> Line:	89
  3033 |          |                           | 	; >>>>> break; 
  3034 | 000016BE | EB0E                      | 	jmp	L_simptrisApp_10
  3035 |          |                           | L_simptrisApp_12:
  3036 |          |                           | 	; >>>>> Line:	91
  3037 |          |                           | 	; >>>>> columns[centerCol] += 3; 
  3038 | 000016C0 | 8B4604                    | 	mov	ax, word [bp+4]
  3039 | 000016C3 | D1E0                      | 	shl	ax, 1
  3040 | 000016C5 | 89C6                      | 	mov	si, ax
  3041 | 000016C7 | 81C6[7429]                | 	add	si, columns
  3042 | 000016CB | 830403                    | 	add	word [si], 3
  3043 |          |                           | L_simptrisApp_10:
  3044 |          |                           | L_simptrisApp_9:
  3045 |          |                           | 	; >>>>> Line:	92
  3046 |          |                           | 	; >>>>> break; 
  3047 | 000016CE | 89EC                      | 	mov	sp, bp
  3048 | 000016D0 | 5D                        | 	pop	bp
  3049 | 000016D1 | C3                        | 	ret
  3050 |          |                           | L_simptrisApp_1:
  3051 | 000016D2 | 55                        | 	push	bp
  3052 | 000016D3 | 89E5                      | 	mov	bp, sp
  3053 | 000016D5 | E91BFF                    | 	jmp	L_simptrisApp_2
  3054 |          |                           | 	ALIGN	2
  3055 |          |                           | placement:
  3056 |          |                           | 	; >>>>> Line:	97
  3057 |          |                           | 	; >>>>> void placement(int bestX, int rotation, int type, unsigned* next) { 
  3058 | 000016D8 | EB6C                      | 	jmp	L_simptrisApp_14
  3059 |          |                           | L_simptrisApp_15:
  3060 |          |                           | 	; >>>>> Line:	98
  3061 |          |                           | 	; >>>>> if (MyNewPieceColumn == 0) { 
  3062 | 000016DA | A1[681D]                  | 	mov	ax, word [MyNewPieceColumn]
  3063 | 000016DD | 85C0                      | 	test	ax, ax
  3064 | 000016DF | 751B                      | 	jne	L_simptrisApp_16
  3065 |          |                           | 	; >>>>> Line:	102
  3066 |          |                           | 	; >>>>> myPost(&SlidePiece, MyNewPieceID, 1, next); 
  3067 | 000016E1 | FF760A                    | 	push	word [bp+10]
  3068 | 000016E4 | B80100                    | 	mov	ax, 1
  3069 | 000016E7 | 50                        | 	push	ax
  3070 | 000016E8 | FF36[621D]                | 	push	word [MyNewPieceID]
  3071 | 000016EC | B8[5E2A]                  | 	mov	ax, SlidePiece
  3072 | 000016EF | 50                        | 	push	ax
  3073 | 000016F0 | E86505                    | 	call	myPost
  3074 | 000016F3 | 83C408                    | 	add	sp, 8
  3075 |          |                           | 	; >>>>> Line:	103
  3076 |          |                           | 	; >>>>> MyNewPieceColumn++; 
  3077 | 000016F6 | FF06[681D]                | 	inc	word [MyNewPieceColumn]
  3078 | 000016FA | EB1F                      | 	jmp	L_simptrisApp_17
  3079 |          |                           | L_simptrisApp_16:
  3080 |          |                           | 	; >>>>> Line:	104
  3081 |          |                           | 	; >>>>> } else if (MyNewPieceColumn == 5) { 
  3082 | 000016FC | 833E[681D]05              | 	cmp	word [MyNewPieceColumn], 5
  3083 | 00001701 | 7518                      | 	jne	L_simptrisApp_18
  3084 |          |                           | 	; >>>>> Line:	109
  3085 |          |                           | 	; >>>>> myPost(&SlidePiece, MyNewPieceID, 0, next); 
  3086 | 00001703 | FF760A                    | 	push	word [bp+10]
  3087 | 00001706 | 31C0                      | 	xor	ax, ax
  3088 | 00001708 | 50                        | 	push	ax
  3089 | 00001709 | FF36[621D]                | 	push	word [MyNewPieceID]
  3090 | 0000170D | B8[5E2A]                  | 	mov	ax, SlidePiece
  3091 | 00001710 | 50                        | 	push	ax
  3092 | 00001711 | E84405                    | 	call	myPost
  3093 | 00001714 | 83C408                    | 	add	sp, 8
  3094 |          |                           | 	; >>>>> Line:	110
  3095 |          |                           | 	; >>>>> MyNewPieceColumn--; 
  3096 | 00001717 | FF0E[681D]                | 	dec	word [MyNewPieceColumn]
  3097 |          |                           | L_simptrisApp_18:
  3098 |          |                           | L_simptrisApp_17:
  3099 |          |                           | 	; >>>>> Line:	120
  3100 |          |                           | 	; >>>>> slide(be 
  3101 | 0000171B | FF760A                    | 	push	word [bp+10]
  3102 | 0000171E | FF7604                    | 	push	word [bp+4]
  3103 | 00001721 | E8E402                    | 	call	slide
  3104 | 00001724 | 83C404                    | 	add	sp, 4
  3105 |          |                           | 	; >>>>> Line:	121
  3106 |          |                           | 	; >>>>> rotate(rotation, next); 
  3107 | 00001727 | FF760A                    | 	push	word [bp+10]
  3108 | 0000172A | FF7606                    | 	push	word [bp+6]
  3109 | 0000172D | E84603                    | 	call	rotate
  3110 | 00001730 | 83C404                    | 	add	sp, 4
  3111 |          |                           | 	; >>>>> Line:	122
  3112 |          |                           | 	; >>>>> buildColumnsArray(bestX, rotation, type); 
  3113 | 00001733 | FF7608                    | 	push	word [bp+8]
  3114 | 00001736 | FF7606                    | 	push	word [bp+6]
  3115 | 00001739 | FF7604                    | 	push	word [bp+4]
  3116 | 0000173C | E8B1FE                    | 	call	buildColumnsArray
  3117 | 0000173F | 83C406                    | 	add	sp, 6
  3118 | 00001742 | 89EC                      | 	mov	sp, bp
  3119 | 00001744 | 5D                        | 	pop	bp
  3120 | 00001745 | C3                        | 	ret
  3121 |          |                           | L_simptrisApp_14:
  3122 | 00001746 | 55                        | 	push	bp
  3123 | 00001747 | 89E5                      | 	mov	bp, sp
  3124 | 00001749 | EB8F                      | 	jmp	L_simptrisApp_15
  3125 | 0000174B | 90                        | 	ALIGN	2
  3126 |          |                           | L_simptrisApp_20:
  3127 | 0000174C | 0000                      | 	DW	0
  3128 |          |                           | L_simptrisApp_21:
  3129 | 0000174E | 0000                      | 	DW	0
  3130 |          |                           | L_simptrisApp_23:
  3131 | 00001750 | 0A00                      | 	DB	0xA,0
  3132 |          |                           | L_simptrisApp_22:
  3133 | 00001752 | 546865726520776173-       | 	DB	"There was no good spot found",0
  3134 | 0000175B | 206E6F20676F6F6420-       | ...
  3135 | 00001764 | 73706F7420666F756E-       | ...
  3136 | 0000176D | 6400                      | ...
  3137 | 0000176F | 90                        | 	ALIGN	2
  3138 |          |                           | decidePlacementTask:
  3139 |          |                           | 	; >>>>> Line:	130
  3140 |          |                           | 	; >>>>> void decidePlacementTask(void) { 
  3141 | 00001770 | E98B02                    | 	jmp	L_simptrisApp_24
  3142 |          |                           | L_simptrisApp_25:
  3143 |          |                           | 	; >>>>> Line:	135
  3144 |          |                           | 	; >>>>> YKEnterMutex(); 
  3145 | 00001773 | E884F2                    | 	call	YKEnterMutex
  3146 |          |                           | 	; >>>>> Line:	136
  3147 |          |                           | 	; >>>>> straightCounter = 0; 
  3148 | 00001776 | C706[6A1D]0000            | 	mov	word [straightCounter], 0
  3149 |          |                           | 	; >>>>> Line:	137
  3150 |          |                           | 	; >>>>> cornerCounter = 0; 
  3151 | 0000177C | C706[6C1D]0000            | 	mov	word [cornerCounter], 0
  3152 |          |                           | 	; >>>>> Line:	138
  3153 |          |                           | 	; >>>>> YKExitMutex(); 
  3154 | 00001782 | E877F2                    | 	call	YKExitMutex
  3155 |          |                           | 	; >>>>> Line:	229
  3156 |          |                           | 	; >>>>> if (MyNewPieceType == 0) { 
  3157 | 00001785 | A1[641D]                  | 	mov	ax, word [MyNewPieceType]
  3158 | 00001788 | 85C0                      | 	test	ax, ax
  3159 | 0000178A | 7403E99701                | 	jne	L_simptrisApp_26
  3160 |          |                           | 	; >>>>> Line:	234
  3161 |          |                           | 	; >>>>> bestX1 = -1; 
  3162 | 0000178F | C746F8FFFF                | 	mov	word [bp-8], -1
  3163 |          |                           | 	; >>>>> Line:	235
  3164 |          |                           | 	; >>>>>  
  3165 | 00001794 | C746F6FFFF                | 	mov	word [bp-10], -1
  3166 |          |                           | 	; >>>>> Line:	236
  3167 |          |                           | 	; >>>>> bestHeight1 = 100; 
  3168 | 00001799 | C746F46400                | 	mov	word [bp-12], 100
  3169 |          |                           | 	; >>>>> Line:	237
  3170 |          |                           | 	; >>>>> bestHeight2 = 100; 
  3171 | 0000179E | C746F26400                | 	mov	word [bp-14], 100
  3172 |          |                           | 	; >>>>> Line:	240
  3173 |          |                           | 	; >>>>> printNewLine(); 
  3174 | 000017A3 | E870EC                    | 	call	printNewLine
  3175 |          |                           | 	; >>>>> Line:	241
  3176 |          |                           | 	; >>>>> for (col = 0; col < 6 -1; col++) { 
  3177 | 000017A6 | C746FA0000                | 	mov	word [bp-6], 0
  3178 | 000017AB | EB51                      | 	jmp	L_simptrisApp_28
  3179 |          |                           | L_simptrisApp_27:
  3180 |          |                           | 	; >>>>> Line:	243
  3181 |          |                           | 	; >>>>> if (columns[col] == columns[col + 1] + 1) { 
  3182 | 000017AD | 8B46FA                    | 	mov	ax, word [bp-6]
  3183 | 000017B0 | 40                        | 	inc	ax
  3184 | 000017B1 | D1E0                      | 	shl	ax, 1
  3185 | 000017B3 | 89C6                      | 	mov	si, ax
  3186 | 000017B5 | 81C6[7429]                | 	add	si, columns
  3187 | 000017B9 | 8B04                      | 	mov	ax, word [si]
  3188 | 000017BB | 40                        | 	inc	ax
  3189 | 000017BC | 8B56FA                    | 	mov	dx, word [bp-6]
  3190 | 000017BF | D1E2                      | 	shl	dx, 1
  3191 | 000017C1 | 89D6                      | 	mov	si, dx
  3192 | 000017C3 | 81C6[7429]                | 	add	si, columns
  3193 | 000017C7 | 8B14                      | 	mov	dx, word [si]
  3194 | 000017C9 | 39C2                      | 	cmp	dx, ax
  3195 | 000017CB | 752E                      | 	jne	L_simptrisApp_31
  3196 |          |                           | 	; >>>>> Line:	244
  3197 |          |                           | 	; >>>>> if (columns[col] < bestHeight1) { 
  3198 | 000017CD | 8B46FA                    | 	mov	ax, word [bp-6]
  3199 | 000017D0 | D1E0                      | 	shl	ax, 1
  3200 | 000017D2 | 89C6                      | 	mov	si, ax
  3201 | 000017D4 | 81C6[7429]                | 	add	si, columns
  3202 | 000017D8 | 8B46F4                    | 	mov	ax, word [bp-12]
  3203 | 000017DB | 3B04                      | 	cmp	ax, word [si]
  3204 | 000017DD | 7E1C                      | 	jle	L_simptrisApp_32
  3205 |          |                           | 	; >>>>> Line:	245
  3206 |          |                           | 	; >>>>> bestX1 = col + 1; 
  3207 | 000017DF | 8B46FA                    | 	mov	ax, word [bp-6]
  3208 | 000017E2 | 40                        | 	inc	ax
  3209 | 000017E3 | 8946F8                    | 	mov	word [bp-8], ax
  3210 |          |                           | 	; >>>>> Line:	246
  3211 |          |                           | 	; >>>>> bestHeight1 = columns[col]; 
  3212 | 000017E6 | 8B46FA                    | 	mov	ax, word [bp-6]
  3213 | 000017E9 | D1E0                      | 	shl	ax, 1
  3214 | 000017EB | 89C6                      | 	mov	si, ax
  3215 | 000017ED | 81C6[7429]                | 	add	si, columns
  3216 | 000017F1 | 8B04                      | 	mov	ax, word [si]
  3217 | 000017F3 | 8946F4                    | 	mov	word [bp-12], ax
  3218 |          |                           | 	; >>>>> Line:	247
  3219 |          |                           | 	; >>>>> rotation = 2; 
  3220 | 000017F6 | C746F00200                | 	mov	word [bp-16], 2
  3221 |          |                           | L_simptrisApp_32:
  3222 |          |                           | L_simptrisApp_31:
  3223 |          |                           | L_simptrisApp_30:
  3224 | 000017FB | FF46FA                    | 	inc	word [bp-6]
  3225 |          |                           | L_simptrisApp_28:
  3226 | 000017FE | 837EFA05                  | 	cmp	word [bp-6], 5
  3227 | 00001802 | 7CA9                      | 	jl	L_simptrisApp_27
  3228 |          |                           | L_simptrisApp_29:
  3229 |          |                           | 	; >>>>> Line:	252
  3230 |          |                           | 	; >>>>> printNewLine(); 
  3231 | 00001804 | E80FEC                    | 	call	printNewLine
  3232 |          |                           | 	; >>>>> Line:	254
  3233 |          |                           | 	; >>>>> for (c 
  3234 | 00001807 | C746FA0000                | 	mov	word [bp-6], 0
  3235 | 0000180C | EB51                      | 	jmp	L_simptrisApp_34
  3236 |          |                           | L_simptrisApp_33:
  3237 |          |                           | 	; >>>>> Line:	255
  3238 |          |                           | 	; >>>>> if (columns[col] == columns[col + 1] - 1) { 
  3239 | 0000180E | 8B46FA                    | 	mov	ax, word [bp-6]
  3240 | 00001811 | 40                        | 	inc	ax
  3241 | 00001812 | D1E0                      | 	shl	ax, 1
  3242 | 00001814 | 89C6                      | 	mov	si, ax
  3243 | 00001816 | 81C6[7429]                | 	add	si, columns
  3244 | 0000181A | 8B04                      | 	mov	ax, word [si]
  3245 | 0000181C | 48                        | 	dec	ax
  3246 | 0000181D | 8B56FA                    | 	mov	dx, word [bp-6]
  3247 | 00001820 | D1E2                      | 	shl	dx, 1
  3248 | 00001822 | 89D6                      | 	mov	si, dx
  3249 | 00001824 | 81C6[7429]                | 	add	si, columns
  3250 | 00001828 | 8B14                      | 	mov	dx, word [si]
  3251 | 0000182A | 39C2                      | 	cmp	dx, ax
  3252 | 0000182C | 752E                      | 	jne	L_simptrisApp_37
  3253 |          |                           | 	; >>>>> Line:	256
  3254 |          |                           | 	; >>>>> if (columns[col] < bestHeight2) { 
  3255 | 0000182E | 8B46FA                    | 	mov	ax, word [bp-6]
  3256 | 00001831 | D1E0                      | 	shl	ax, 1
  3257 | 00001833 | 89C6                      | 	mov	si, ax
  3258 | 00001835 | 81C6[7429]                | 	add	si, columns
  3259 | 00001839 | 8B46F2                    | 	mov	ax, word [bp-14]
  3260 | 0000183C | 3B04                      | 	cmp	ax, word [si]
  3261 | 0000183E | 7E1C                      | 	jle	L_simptrisApp_38
  3262 |          |                           | 	; >>>>> Line:	257
  3263 |          |                           | 	; >>>>> bestX2 = col; 
  3264 | 00001840 | 8B46FA                    | 	mov	ax, word [bp-6]
  3265 | 00001843 | 8946F6                    | 	mov	word [bp-10], ax
  3266 |          |                           | 	; >>>>> Line:	258
  3267 |          |                           | 	; >>>>> bestHeight2 = columns[col] + 1; 
  3268 | 00001846 | 8B46FA                    | 	mov	ax, word [bp-6]
  3269 | 00001849 | D1E0                      | 	shl	ax, 1
  3270 | 0000184B | 89C6                      | 	mov	si, ax
  3271 | 0000184D | 81C6[7429]                | 	add	si, columns
  3272 | 00001851 | 8B04                      | 	mov	ax, word [si]
  3273 | 00001853 | 40                        | 	inc	ax
  3274 | 00001854 | 8946F2                    | 	mov	word [bp-14], ax
  3275 |          |                           | 	; >>>>> Line:	259
  3276 |          |                           | 	; >>>>> rotation = 3; 
  3277 | 00001857 | C746F00300                | 	mov	word [bp-16], 3
  3278 |          |                           | L_simptrisApp_38:
  3279 |          |                           | L_simptrisApp_37:
  3280 |          |                           | L_simptrisApp_36:
  3281 | 0000185C | FF46FA                    | 	inc	word [bp-6]
  3282 |          |                           | L_simptrisApp_34:
  3283 | 0000185F | 837EFA05                  | 	cmp	word [bp-6], 5
  3284 | 00001863 | 7CA9                      | 	jl	L_simptrisApp_33
  3285 |          |                           | L_simptrisApp_35:
  3286 |          |                           | 	; >>>>> Line:	264
  3287 |          |                           | 	; >>>>> if (bestX1 == -1 && bestX2 == -1) { 
  3288 | 00001865 | 837EF8FF                  | 	cmp	word [bp-8], -1
  3289 | 00001869 | 7403E98500                | 	jne	L_simptrisApp_39
  3290 | 0000186E | 837EF6FF                  | 	cmp	word [bp-10], -1
  3291 | 00001872 | 757F                      | 	jne	L_simptrisApp_39
  3292 |          |                           | 	; >>>>> Line:	265
  3293 |          |                           | 	; >>>>> for (col = 0; col < 6 - 1; col++) { 
  3294 | 00001874 | C746FA0000                | 	mov	word [bp-6], 0
  3295 | 00001879 | EB4D                      | 	jmp	L_simptrisApp_41
  3296 |          |                           | L_simptrisApp_40:
  3297 |          |                           | 	; >>>>> Line:	266
  3298 |          |                           | 	; >>>>> if (columns[col] == columns[col + 1]) { 
  3299 | 0000187B | 8B46FA                    | 	mov	ax, word [bp-6]
  3300 | 0000187E | 40                        | 	inc	ax
  3301 | 0000187F | D1E0                      | 	shl	ax, 1
  3302 | 00001881 | 89C6                      | 	mov	si, ax
  3303 | 00001883 | 81C6[7429]                | 	add	si, columns
  3304 | 00001887 | 8B46FA                    | 	mov	ax, word [bp-6]
  3305 | 0000188A | D1E0                      | 	shl	ax, 1
  3306 | 0000188C | 89C7                      | 	mov	di, ax
  3307 | 0000188E | 81C7[7429]                | 	add	di, columns
  3308 | 00001892 | 8B05                      | 	mov	ax, word [di]
  3309 | 00001894 | 3B04                      | 	cmp	ax, word [si]
  3310 | 00001896 | 752D                      | 	jne	L_simptrisApp_44
  3311 |          |                           | 	; >>>>> Line:	267
  3312 |          |                           | 	; >>>>> ) { 
  3313 | 00001898 | 8B46FA                    | 	mov	ax, word [bp-6]
  3314 | 0000189B | D1E0                      | 	shl	ax, 1
  3315 | 0000189D | 89C6                      | 	mov	si, ax
  3316 | 0000189F | 81C6[7429]                | 	add	si, columns
  3317 | 000018A3 | 8B46F4                    | 	mov	ax, word [bp-12]
  3318 | 000018A6 | 3B04                      | 	cmp	ax, word [si]
  3319 | 000018A8 | 7E1B                      | 	jle	L_simptrisApp_45
  3320 |          |                           | 	; >>>>> Line:	268
  3321 |          |                           | 	; >>>>> bestX1 = col; 
  3322 | 000018AA | 8B46FA                    | 	mov	ax, word [bp-6]
  3323 | 000018AD | 8946F8                    | 	mov	word [bp-8], ax
  3324 |          |                           | 	; >>>>> Line:	269
  3325 |          |                           | 	; >>>>> bestHeight1 = columns[col]; 
  3326 | 000018B0 | 8B46FA                    | 	mov	ax, word [bp-6]
  3327 | 000018B3 | D1E0                      | 	shl	ax, 1
  3328 | 000018B5 | 89C6                      | 	mov	si, ax
  3329 | 000018B7 | 81C6[7429]                | 	add	si, columns
  3330 | 000018BB | 8B04                      | 	mov	ax, word [si]
  3331 | 000018BD | 8946F4                    | 	mov	word [bp-12], ax
  3332 |          |                           | 	; >>>>> Line:	270
  3333 |          |                           | 	; >>>>> rotation = 0; 
  3334 | 000018C0 | C746F00000                | 	mov	word [bp-16], 0
  3335 |          |                           | L_simptrisApp_45:
  3336 |          |                           | L_simptrisApp_44:
  3337 |          |                           | L_simptrisApp_43:
  3338 | 000018C5 | FF46FA                    | 	inc	word [bp-6]
  3339 |          |                           | L_simptrisApp_41:
  3340 | 000018C8 | 837EFA05                  | 	cmp	word [bp-6], 5
  3341 | 000018CC | 7CAD                      | 	jl	L_simptrisApp_40
  3342 |          |                           | L_simptrisApp_42:
  3343 |          |                           | 	; >>>>> Line:	279
  3344 |          |                           | 	; >>>>> placement(bestX1, rotation, 0, &next); 
  3345 | 000018CE | B8[4C17]                  | 	mov	ax, L_simptrisApp_20
  3346 | 000018D1 | 50                        | 	push	ax
  3347 | 000018D2 | 31C0                      | 	xor	ax, ax
  3348 | 000018D4 | 50                        | 	push	ax
  3349 | 000018D5 | FF76F0                    | 	push	word [bp-16]
  3350 | 000018D8 | FF76F8                    | 	push	word [bp-8]
  3351 | 000018DB | E8FAFD                    | 	call	placement
  3352 | 000018DE | 83C408                    | 	add	sp, 8
  3353 |          |                           | 	; >>>>> Line:	281
  3354 |          |                           | 	; >>>>> if (bestX1 == -1) { 
  3355 | 000018E1 | 837EF8FF                  | 	cmp	word [bp-8], -1
  3356 | 000018E5 | 750A                      | 	jne	L_simptrisApp_46
  3357 |          |                           | 	; >>>>> Line:	282
  3358 |          |                           | 	; >>>>> printString("There was no good spot found"); 
  3359 | 000018E7 | B8[5217]                  | 	mov	ax, L_simptrisApp_22
  3360 | 000018EA | 50                        | 	push	ax
  3361 | 000018EB | E83AEB                    | 	call	printString
  3362 | 000018EE | 83C402                    | 	add	sp, 2
  3363 |          |                           | L_simptrisApp_46:
  3364 | 000018F1 | EB30                      | 	jmp	L_simptrisApp_47
  3365 |          |                           | L_simptrisApp_39:
  3366 |          |                           | 	; >>>>> Line:	288
  3367 |          |                           | 	; >>>>> if (bestHeight1 < bestHeight2) { 
  3368 | 000018F3 | 8B46F2                    | 	mov	ax, word [bp-14]
  3369 | 000018F6 | 3B46F4                    | 	cmp	ax, word [bp-12]
  3370 | 000018F9 | 7E15                      | 	jle	L_simptrisApp_48
  3371 |          |                           | 	; >>>>> Line:	294
  3372 |          |                           | 	; >>>>> ns[col] == c 
  3373 | 000018FB | B8[4C17]                  | 	mov	ax, L_simptrisApp_20
  3374 | 000018FE | 50                        | 	push	ax
  3375 | 000018FF | 31C0                      | 	xor	ax, ax
  3376 | 00001901 | 50                        | 	push	ax
  3377 | 00001902 | FF76F0                    | 	push	word [bp-16]
  3378 | 00001905 | FF76F8                    | 	push	word [bp-8]
  3379 | 00001908 | E8CDFD                    | 	call	placement
  3380 | 0000190B | 83C408                    | 	add	sp, 8
  3381 | 0000190E | EB13                      | 	jmp	L_simptrisApp_49
  3382 |          |                           | L_simptrisApp_48:
  3383 |          |                           | 	; >>>>> Line:	302
  3384 |          |                           | 	; >>>>> placement(bestX2, rotation, 0, &next); 
  3385 | 00001910 | B8[4C17]                  | 	mov	ax, L_simptrisApp_20
  3386 | 00001913 | 50                        | 	push	ax
  3387 | 00001914 | 31C0                      | 	xor	ax, ax
  3388 | 00001916 | 50                        | 	push	ax
  3389 | 00001917 | FF76F0                    | 	push	word [bp-16]
  3390 | 0000191A | FF76F6                    | 	push	word [bp-10]
  3391 | 0000191D | E8B8FD                    | 	call	placement
  3392 | 00001920 | 83C408                    | 	add	sp, 8
  3393 |          |                           | L_simptrisApp_49:
  3394 |          |                           | L_simptrisApp_47:
  3395 | 00001923 | E9D400                    | 	jmp	L_simptrisApp_50
  3396 |          |                           | L_simptrisApp_26:
  3397 |          |                           | 	; >>>>> Line:	319
  3398 |          |                           | 	; >>>>> bestX = -1; 
  3399 | 00001926 | C746ECFFFF                | 	mov	word [bp-20], -1
  3400 |          |                           | 	; >>>>> Line:	320
  3401 |          |                           | 	; >>>>> bestHeight = 100; 
  3402 | 0000192B | C746EA6400                | 	mov	word [bp-22], 100
  3403 |          |                           | 	; >>>>> Line:	323
  3404 |          |                           | 	; >>>>> printString("\n"); 
  3405 | 00001930 | B8[5017]                  | 	mov	ax, L_simptrisApp_23
  3406 | 00001933 | 50                        | 	push	ax
  3407 | 00001934 | E8F1EA                    | 	call	printString
  3408 | 00001937 | 83C402                    | 	add	sp, 2
  3409 |          |                           | 	; >>>>> Line:	324
  3410 |          |                           | 	; >>>>> for (col = 0; col < 6 - 1; col++) { 
  3411 | 0000193A | C746EE0000                | 	mov	word [bp-18], 0
  3412 | 0000193F | EB7A                      | 	jmp	L_simptrisApp_52
  3413 |          |                           | L_simptrisApp_51:
  3414 |          |                           | 	; >>>>> Line:	325
  3415 |          |                           | 	; >>>>> printInt(columns[col]); 
  3416 | 00001941 | 8B46EE                    | 	mov	ax, word [bp-18]
  3417 | 00001944 | D1E0                      | 	shl	ax, 1
  3418 | 00001946 | 89C6                      | 	mov	si, ax
  3419 | 00001948 | 81C6[7429]                | 	add	si, columns
  3420 | 0000194C | FF34                      | 	push	word [si]
  3421 | 0000194E | E8FBEA                    | 	call	printInt
  3422 | 00001951 | 83C402                    | 	add	sp, 2
  3423 |          |                           | 	; >>>>> Line:	326
  3424 |          |                           | 	; >>>>> if (columns[col] == c 
  3425 | 00001954 | 8B46EE                    | 	mov	ax, word [bp-18]
  3426 | 00001957 | 40                        | 	inc	ax
  3427 | 00001958 | D1E0                      | 	shl	ax, 1
  3428 | 0000195A | 89C6                      | 	mov	si, ax
  3429 | 0000195C | 81C6[7429]                | 	add	si, columns
  3430 | 00001960 | 8B46EE                    | 	mov	ax, word [bp-18]
  3431 | 00001963 | D1E0                      | 	shl	ax, 1
  3432 | 00001965 | 89C7                      | 	mov	di, ax
  3433 | 00001967 | 81C7[7429]                | 	add	di, columns
  3434 | 0000196B | 8B05                      | 	mov	ax, word [di]
  3435 | 0000196D | 3B04                      | 	cmp	ax, word [si]
  3436 | 0000196F | 7547                      | 	jne	L_simptrisApp_55
  3437 | 00001971 | 8B46EE                    | 	mov	ax, word [bp-18]
  3438 | 00001974 | 83C002                    | 	add	ax, 2
  3439 | 00001977 | D1E0                      | 	shl	ax, 1
  3440 | 00001979 | 89C6                      | 	mov	si, ax
  3441 | 0000197B | 81C6[7429]                | 	add	si, columns
  3442 | 0000197F | 8B46EE                    | 	mov	ax, word [bp-18]
  3443 | 00001982 | D1E0                      | 	shl	ax, 1
  3444 | 00001984 | 89C7                      | 	mov	di, ax
  3445 | 00001986 | 81C7[7429]                | 	add	di, columns
  3446 | 0000198A | 8B05                      | 	mov	ax, word [di]
  3447 | 0000198C | 3B04                      | 	cmp	ax, word [si]
  3448 | 0000198E | 7528                      | 	jne	L_simptrisApp_55
  3449 |          |                           | 	; >>>>> Line:	327
  3450 |          |                           | 	; >>>>> if (columns[col] < bestHeight) { 
  3451 | 00001990 | 8B46EE                    | 	mov	ax, word [bp-18]
  3452 | 00001993 | D1E0                      | 	shl	ax, 1
  3453 | 00001995 | 89C6                      | 	mov	si, ax
  3454 | 00001997 | 81C6[7429]                | 	add	si, columns
  3455 | 0000199B | 8B46EA                    | 	mov	ax, word [bp-22]
  3456 | 0000199E | 3B04                      | 	cmp	ax, word [si]
  3457 | 000019A0 | 7E16                      | 	jle	L_simptrisApp_56
  3458 |          |                           | 	; >>>>> Line:	328
  3459 |          |                           | 	; >>>>> bestX = col; 
  3460 | 000019A2 | 8B46EE                    | 	mov	ax, word [bp-18]
  3461 | 000019A5 | 8946EC                    | 	mov	word [bp-20], ax
  3462 |          |                           | 	; >>>>> Line:	329
  3463 |          |                           | 	; >>>>> bestHeight = columns[col]; 
  3464 | 000019A8 | 8B46EE                    | 	mov	ax, word [bp-18]
  3465 | 000019AB | D1E0                      | 	shl	ax, 1
  3466 | 000019AD | 89C6                      | 	mov	si, ax
  3467 | 000019AF | 81C6[7429]                | 	add	si, columns
  3468 | 000019B3 | 8B04                      | 	mov	ax, word [si]
  3469 | 000019B5 | 8946EA                    | 	mov	word [bp-22], ax
  3470 |          |                           | L_simptrisApp_56:
  3471 |          |                           | L_simptrisApp_55:
  3472 |          |                           | L_simptrisApp_54:
  3473 | 000019B8 | FF46EE                    | 	inc	word [bp-18]
  3474 |          |                           | L_simptrisApp_52:
  3475 | 000019BB | 837EEE05                  | 	cmp	word [bp-18], 5
  3476 | 000019BF | 7C80                      | 	jl	L_simptrisApp_51
  3477 |          |                           | L_simptrisApp_53:
  3478 |          |                           | 	; >>>>> Line:	333
  3479 |          |                           | 	; >>>>> printString("\n"); 
  3480 | 000019C1 | B8[5017]                  | 	mov	ax, L_simptrisApp_23
  3481 | 000019C4 | 50                        | 	push	ax
  3482 | 000019C5 | E860EA                    | 	call	printString
  3483 | 000019C8 | 83C402                    | 	add	sp, 2
  3484 |          |                           | 	; >>>>> Line:	334
  3485 |          |                           | 	; >>>>> if (bestX != -1) { 
  3486 | 000019CB | 837EECFF                  | 	cmp	word [bp-20], -1
  3487 | 000019CF | 740A                      | 	je	L_simptrisApp_57
  3488 |          |                           | 	; >>>>> Line:	335
  3489 |          |                           | 	; >>>>> rotation = 0; 
  3490 | 000019D1 | C746E80000                | 	mov	word [bp-24], 0
  3491 |          |                           | 	; >>>>> Line:	336
  3492 |          |                           | 	; >>>>> bestX++; 
  3493 | 000019D6 | FF46EC                    | 	inc	word [bp-20]
  3494 | 000019D9 | EB0B                      | 	jmp	L_simptrisApp_58
  3495 |          |                           | L_simptrisApp_57:
  3496 |          |                           | 	; >>>>> Line:	341
  3497 |          |                           | 	; >>>>> bestX = getMinValueIndex(); 
  3498 | 000019DB | E84001                    | 	call	getMinValueIndex
  3499 | 000019DE | 8946EC                    | 	mov	word [bp-20], ax
  3500 |          |                           | 	; >>>>> Line:	342
  3501 |          |                           | 	; >>>>> rotation = 1; 
  3502 | 000019E1 | C746E80100                | 	mov	word [bp-24], 1
  3503 |          |                           | L_simptrisApp_58:
  3504 |          |                           | 	; >>>>> Line:	350
  3505 |          |                           | 	; >>>>> placement(bestX 
  3506 | 000019E6 | B8[4C17]                  | 	mov	ax, L_simptrisApp_20
  3507 | 000019E9 | 50                        | 	push	ax
  3508 | 000019EA | B80100                    | 	mov	ax, 1
  3509 | 000019ED | 50                        | 	push	ax
  3510 | 000019EE | FF76E8                    | 	push	word [bp-24]
  3511 | 000019F1 | FF76EC                    | 	push	word [bp-20]
  3512 | 000019F4 | E8E1FC                    | 	call	placement
  3513 | 000019F7 | 83C408                    | 	add	sp, 8
  3514 |          |                           | L_simptrisApp_50:
  3515 | 000019FA | 89EC                      | 	mov	sp, bp
  3516 | 000019FC | 5D                        | 	pop	bp
  3517 | 000019FD | C3                        | 	ret
  3518 |          |                           | L_simptrisApp_24:
  3519 | 000019FE | 55                        | 	push	bp
  3520 | 000019FF | 89E5                      | 	mov	bp, sp
  3521 | 00001A01 | 83EC18                    | 	sub	sp, 24
  3522 | 00001A04 | E96CFD                    | 	jmp	L_simptrisApp_25
  3523 | 00001A07 | 90                        | 	ALIGN	2
  3524 |          |                           | slide:
  3525 |          |                           | 	; >>>>> Line:	355
  3526 |          |                           | 	; >>>>> void slide(int targetCol, unsigned* next) { 
  3527 | 00001A08 | EB63                      | 	jmp	L_simptrisApp_60
  3528 |          |                           | L_simptrisApp_61:
  3529 |          |                           | 	; >>>>> Line:	358
  3530 |          |                           | 	; >>>>> isLeft = 0; 
  3531 | 00001A0A | C746FC0000                | 	mov	word [bp-4], 0
  3532 |          |                           | 	; >>>>> Line:	359
  3533 |          |                           | 	; >>>>> vectorMovement = targetCol - MyNewPieceColumn; 
  3534 | 00001A0F | 8B4604                    | 	mov	ax, word [bp+4]
  3535 | 00001A12 | 2B06[681D]                | 	sub	ax, word [MyNewPieceColumn]
  3536 | 00001A16 | 8946FE                    | 	mov	word [bp-2], ax
  3537 |          |                           | 	; >>>>> Line:	361
  3538 |          |                           | 	; >>>>> if (vectorMovement < 0) { 
  3539 | 00001A19 | 837EFE00                  | 	cmp	word [bp-2], 0
  3540 | 00001A1D | 7D0D                      | 	jge	L_simptrisApp_62
  3541 |          |                           | 	; >>>>> Line:	362
  3542 |          |                           | 	; >>>>> vectorMovement = -vectorMovement; 
  3543 | 00001A1F | 8B46FE                    | 	mov	ax, word [bp-2]
  3544 | 00001A22 | F7D8                      | 	neg	ax
  3545 | 00001A24 | 8946FE                    | 	mov	word [bp-2], ax
  3546 |          |                           | 	; >>>>> Line:	363
  3547 |          |                           | 	; >>>>> isLeft = 1; 
  3548 | 00001A27 | C746FC0100                | 	mov	word [bp-4], 1
  3549 |          |                           | L_simptrisApp_62:
  3550 |          |                           | 	; >>>>> Line:	366
  3551 |          |                           | 	; >>>>> while (vectorMovement > 0) { 
  3552 | 00001A2C | EB35                      | 	jmp	L_simptrisApp_64
  3553 |          |                           | L_simptrisApp_63:
  3554 |          |                           | 	; >>>>> Line:	368
  3555 |          |                           | 	; >>>>> if (isLeft) { 
  3556 | 00001A2E | 8B46FC                    | 	mov	ax, word [bp-4]
  3557 | 00001A31 | 85C0                      | 	test	ax, ax
  3558 | 00001A33 | 7416                      | 	je	L_simptrisApp_66
  3559 |          |                           | 	; >>>>> Line:	373
  3560 |          |                           | 	; >>>>> myPost(&SlidePiece, MyNewPieceID, 0, next); 
  3561 | 00001A35 | FF7606                    | 	push	word [bp+6]
  3562 | 00001A38 | 31C0                      | 	xor	ax, ax
  3563 | 00001A3A | 50                        | 	push	ax
  3564 | 00001A3B | FF36[621D]                | 	push	word [MyNewPieceID]
  3565 | 00001A3F | B8[5E2A]                  | 	mov	ax, SlidePiece
  3566 | 00001A42 | 50                        | 	push	ax
  3567 | 00001A43 | E81202                    | 	call	myPost
  3568 | 00001A46 | 83C408                    | 	add	sp, 8
  3569 | 00001A49 | EB15                      | 	jmp	L_simptrisApp_67
  3570 |          |                           | L_simptrisApp_66:
  3571 |          |                           | 	; >>>>> Line:	379
  3572 |          |                           | 	; >>>>> myPost(&SlidePiece, MyNewPieceID, 1, next); 
  3573 | 00001A4B | FF7606                    | 	push	word [bp+6]
  3574 | 00001A4E | B80100                    | 	mov	ax, 1
  3575 | 00001A51 | 50                        | 	push	ax
  3576 | 00001A52 | FF36[621D]                | 	push	word [MyNewPieceID]
  3577 | 00001A56 | B8[5E2A]                  | 	mov	ax, SlidePiece
  3578 | 00001A59 | 50                        | 	push	ax
  3579 | 00001A5A | E8FB01                    | 	call	myPost
  3580 | 00001A5D | 83C408                    | 	add	sp, 8
  3581 |          |                           | L_simptrisApp_67:
  3582 |          |                           | 	; >>>>> Line:	381
  3583 |          |                           | 	; >>>>>  
  3584 | 00001A60 | FF4EFE                    | 	dec	word [bp-2]
  3585 |          |                           | L_simptrisApp_64:
  3586 | 00001A63 | 837EFE00                  | 	cmp	word [bp-2], 0
  3587 | 00001A67 | 7FC5                      | 	jg	L_simptrisApp_63
  3588 |          |                           | L_simptrisApp_65:
  3589 | 00001A69 | 89EC                      | 	mov	sp, bp
  3590 | 00001A6B | 5D                        | 	pop	bp
  3591 | 00001A6C | C3                        | 	ret
  3592 |          |                           | L_simptrisApp_60:
  3593 | 00001A6D | 55                        | 	push	bp
  3594 | 00001A6E | 89E5                      | 	mov	bp, sp
  3595 | 00001A70 | 83EC04                    | 	sub	sp, 4
  3596 | 00001A73 | EB95                      | 	jmp	L_simptrisApp_61
  3597 | 00001A75 | 90                        | 	ALIGN	2
  3598 |          |                           | rotate:
  3599 |          |                           | 	; >>>>> Line:	385
  3600 |          |                           | 	; >>>>> void rotate(int targetOrientation, unsigned* next) { 
  3601 | 00001A76 | E99C00                    | 	jmp	L_simptrisApp_69
  3602 |          |                           | L_simptrisApp_70:
  3603 |          |                           | 	; >>>>> Line:	424
  3604 |          |                           | 	; >>>>> isClockwise = 0; 
  3605 | 00001A79 | C746FC0000                | 	mov	word [bp-4], 0
  3606 |          |                           | 	; >>>>> Line:	425
  3607 |          |                           | 	; >>>>> vectorRotation = targetOrientation - MyNewPieceOrientation; 
  3608 | 00001A7E | 8B4604                    | 	mov	ax, word [bp+4]
  3609 | 00001A81 | 2B06[661D]                | 	sub	ax, word [MyNewPieceOrientation]
  3610 | 00001A85 | 8946FE                    | 	mov	word [bp-2], ax
  3611 |          |                           | 	; >>>>> Line:	427
  3612 |          |                           | 	; >>>>> if (vectorRotation < 0) { 
  3613 | 00001A88 | 837EFE00                  | 	cmp	word [bp-2], 0
  3614 | 00001A8C | 7D2A                      | 	jge	L_simptrisApp_71
  3615 |          |                           | 	; >>>>> Line:	428
  3616 |          |                           | 	; >>>>> if (vectorRotation == -3) { 
  3617 | 00001A8E | 837EFEFD                  | 	cmp	word [bp-2], -3
  3618 | 00001A92 | 7517                      | 	jne	L_simptrisApp_72
  3619 |          |                           | 	; >>>>> Line:	433
  3620 |          |                           | 	; >>>>> myPost(&RotatePiece, MyNewPieceID, 1, next); 
  3621 | 00001A94 | FF7606                    | 	push	word [bp+6]
  3622 | 00001A97 | B80100                    | 	mov	ax, 1
  3623 | 00001A9A | 50                        | 	push	ax
  3624 | 00001A9B | FF36[621D]                | 	push	word [MyNewPieceID]
  3625 | 00001A9F | B8[712A]                  | 	mov	ax, RotatePiece
  3626 | 00001AA2 | 50                        | 	push	ax
  3627 | 00001AA3 | E8B201                    | 	call	myPost
  3628 | 00001AA6 | 83C408                    | 	add	sp, 8
  3629 |          |                           | 	; >>>>> Line:	434
  3630 |          |                           | 	; >>>>> return; 
  3631 | 00001AA9 | EB66                      | 	jmp	L_simptrisApp_73
  3632 |          |                           | L_simptrisApp_72:
  3633 |          |                           | 	; >>>>> Line:	436
  3634 |          |                           | 	; >>>>> vectorRotation = -vectorRotation; 
  3635 | 00001AAB | 8B46FE                    | 	mov	ax, word [bp-2]
  3636 | 00001AAE | F7D8                      | 	neg	ax
  3637 | 00001AB0 | 8946FE                    | 	mov	word [bp-2], ax
  3638 |          |                           | 	; >>>>> Line:	437
  3639 |          |                           | 	; >>>>> isClockwise = 1; 
  3640 | 00001AB3 | C746FC0100                | 	mov	word [bp-4], 1
  3641 |          |                           | L_simptrisApp_71:
  3642 |          |                           | 	; >>>>> Line:	439
  3643 |          |                           | 	; >>>>> if (vectorRotation == 3) { 
  3644 | 00001AB8 | 837EFE03                  | 	cmp	word [bp-2], 3
  3645 | 00001ABC | 7516                      | 	jne	L_simptrisApp_74
  3646 |          |                           | 	; >>>>> Line:	444
  3647 |          |                           | 	; >>>>> myPost(&RotatePiece 
  3648 | 00001ABE | FF7606                    | 	push	word [bp+6]
  3649 | 00001AC1 | 31C0                      | 	xor	ax, ax
  3650 | 00001AC3 | 50                        | 	push	ax
  3651 | 00001AC4 | FF36[621D]                | 	push	word [MyNewPieceID]
  3652 | 00001AC8 | B8[712A]                  | 	mov	ax, RotatePiece
  3653 | 00001ACB | 50                        | 	push	ax
  3654 | 00001ACC | E88901                    | 	call	myPost
  3655 | 00001ACF | 83C408                    | 	add	sp, 8
  3656 |          |                           | 	; >>>>> Line:	445
  3657 |          |                           | 	; >>>>> return; 
  3658 | 00001AD2 | EB3D                      | 	jmp	L_simptrisApp_73
  3659 |          |                           | L_simptrisApp_74:
  3660 |          |                           | 	; >>>>> Line:	447
  3661 |          |                           | 	; >>>>> while (vectorRotation > 0) { 
  3662 | 00001AD4 | EB35                      | 	jmp	L_simptrisApp_76
  3663 |          |                           | L_simptrisApp_75:
  3664 |          |                           | 	; >>>>> Line:	449
  3665 |          |                           | 	; >>>>> if (isClockwise) { 
  3666 | 00001AD6 | 8B46FC                    | 	mov	ax, word [bp-4]
  3667 | 00001AD9 | 85C0                      | 	test	ax, ax
  3668 | 00001ADB | 7417                      | 	je	L_simptrisApp_78
  3669 |          |                           | 	; >>>>> Line:	454
  3670 |          |                           | 	; >>>>> myPost(&RotatePiece, MyNewPieceID, 1, next); 
  3671 | 00001ADD | FF7606                    | 	push	word [bp+6]
  3672 | 00001AE0 | B80100                    | 	mov	ax, 1
  3673 | 00001AE3 | 50                        | 	push	ax
  3674 | 00001AE4 | FF36[621D]                | 	push	word [MyNewPieceID]
  3675 | 00001AE8 | B8[712A]                  | 	mov	ax, RotatePiece
  3676 | 00001AEB | 50                        | 	push	ax
  3677 | 00001AEC | E86901                    | 	call	myPost
  3678 | 00001AEF | 83C408                    | 	add	sp, 8
  3679 | 00001AF2 | EB14                      | 	jmp	L_simptrisApp_79
  3680 |          |                           | L_simptrisApp_78:
  3681 |          |                           | 	; >>>>> Line:	460
  3682 |          |                           | 	; >>>>> myPost(&RotatePiece, MyNewPieceID, 0, next); 
  3683 | 00001AF4 | FF7606                    | 	push	word [bp+6]
  3684 | 00001AF7 | 31C0                      | 	xor	ax, ax
  3685 | 00001AF9 | 50                        | 	push	ax
  3686 | 00001AFA | FF36[621D]                | 	push	word [MyNewPieceID]
  3687 | 00001AFE | B8[712A]                  | 	mov	ax, RotatePiece
  3688 | 00001B01 | 50                        | 	push	ax
  3689 | 00001B02 | E85301                    | 	call	myPost
  3690 | 00001B05 | 83C408                    | 	add	sp, 8
  3691 |          |                           | L_simptrisApp_79:
  3692 |          |                           | 	; >>>>> Line:	462
  3693 |          |                           | 	; >>>>> vectorRotation--; 
  3694 | 00001B08 | FF4EFE                    | 	dec	word [bp-2]
  3695 |          |                           | L_simptrisApp_76:
  3696 | 00001B0B | 837EFE00                  | 	cmp	word [bp-2], 0
  3697 | 00001B0F | 7FC5                      | 	jg	L_simptrisApp_75
  3698 |          |                           | L_simptrisApp_77:
  3699 |          |                           | L_simptrisApp_73:
  3700 | 00001B11 | 89EC                      | 	mov	sp, bp
  3701 | 00001B13 | 5D                        | 	pop	bp
  3702 | 00001B14 | C3                        | 	ret
  3703 |          |                           | L_simptrisApp_69:
  3704 | 00001B15 | 55                        | 	push	bp
  3705 | 00001B16 | 89E5                      | 	mov	bp, sp
  3706 | 00001B18 | 83EC04                    | 	sub	sp, 4
  3707 | 00001B1B | E95BFF                    | 	jmp	L_simptrisApp_70
  3708 |          |                           | 	ALIGN	2
  3709 |          |                           | getMinValueIndex:
  3710 |          |                           | 	; >>>>> Line:	466
  3711 |          |                           | 	; >>>>> int getMinValueIndex() { 
  3712 | 00001B1E | EB44                      | 	jmp	L_simptrisApp_81
  3713 |          |                           | L_simptrisApp_82:
  3714 |          |                           | 	; >>>>> Line:	471
  3715 |          |                           | 	; >>>>> minVal = 20; 
  3716 | 00001B20 | C746FC1400                | 	mov	word [bp-4], 20
  3717 |          |                           | 	; >>>>> Line:	472
  3718 |          |                           | 	; >>>>> for (i = 0; i < 6; i++) { 
  3719 | 00001B25 | C746FE0000                | 	mov	word [bp-2], 0
  3720 | 00001B2A | EB2B                      | 	jmp	L_simptrisApp_84
  3721 |          |                           | L_simptrisApp_83:
  3722 |          |                           | 	; >>>>> Line:	473
  3723 |          |                           | 	; >>>>> if (columns[i] < minVal) { 
  3724 | 00001B2C | 8B46FE                    | 	mov	ax, word [bp-2]
  3725 | 00001B2F | D1E0                      | 	shl	ax, 1
  3726 | 00001B31 | 89C6                      | 	mov	si, ax
  3727 | 00001B33 | 81C6[7429]                | 	add	si, columns
  3728 | 00001B37 | 8B46FC                    | 	mov	ax, word [bp-4]
  3729 | 00001B3A | 3B04                      | 	cmp	ax, word [si]
  3730 | 00001B3C | 7E16                      | 	jle	L_simptrisApp_87
  3731 |          |                           | 	; >>>>> Line:	474
  3732 |          |                           | 	; >>>>> minVal = columns[i]; 
  3733 | 00001B3E | 8B46FE                    | 	mov	ax, word [bp-2]
  3734 | 00001B41 | D1E0                      | 	shl	ax, 1
  3735 | 00001B43 | 89C6                      | 	mov	si, ax
  3736 | 00001B45 | 81C6[7429]                | 	add	si, columns
  3737 | 00001B49 | 8B04                      | 	mov	ax, word [si]
  3738 | 00001B4B | 8946FC                    | 	mov	word [bp-4], ax
  3739 |          |                           | 	; >>>>> Line:	475
  3740 |          |                           | 	; >>>>> returnIndex = i; 
  3741 | 00001B4E | 8B46FE                    | 	mov	ax, word [bp-2]
  3742 | 00001B51 | 8946FA                    | 	mov	word [bp-6], ax
  3743 |          |                           | L_simptrisApp_87:
  3744 |          |                           | L_simptrisApp_86:
  3745 | 00001B54 | FF46FE                    | 	inc	word [bp-2]
  3746 |          |                           | L_simptrisApp_84:
  3747 | 00001B57 | 837EFE06                  | 	cmp	word [bp-2], 6
  3748 | 00001B5B | 7CCF                      | 	jl	L_simptrisApp_83
  3749 |          |                           | L_simptrisApp_85:
  3750 |          |                           | 	; >>>>> Line:	478
  3751 |          |                           | 	; >>>>> return returnIndex; 
  3752 | 00001B5D | 8B46FA                    | 	mov	ax, word [bp-6]
  3753 |          |                           | L_simptrisApp_88:
  3754 | 00001B60 | 89EC                      | 	mov	sp, bp
  3755 | 00001B62 | 5D                        | 	pop	bp
  3756 | 00001B63 | C3                        | 	ret
  3757 |          |                           | L_simptrisApp_81:
  3758 | 00001B64 | 55                        | 	push	bp
  3759 | 00001B65 | 89E5                      | 	mov	bp, sp
  3760 | 00001B67 | 83EC06                    | 	sub	sp, 6
  3761 | 00001B6A | EBB4                      | 	jmp	L_simptrisApp_82
  3762 |          |                           | L_simptrisApp_92:
  3763 | 00001B6C | 3E0D0A00                  | 	DB	">",0xD,0xA,0
  3764 |          |                           | L_simptrisApp_91:
  3765 | 00001B70 | 2C204350553A2000          | 	DB	", CPU: ",0
  3766 |          |                           | L_simptrisApp_90:
  3767 | 00001B78 | 3C43533A2000              | 	DB	"<CS: ",0
  3768 |          |                           | 	ALIGN	2
  3769 |          |                           | TaskStat:
  3770 |          |                           | 	; >>>>> Line:	482
  3771 |          |                           | 	; >>>>> { 
  3772 | 00001B7E | E9CE00                    | 	jmp	L_simptrisApp_93
  3773 |          |                           | L_simptrisApp_94:
  3774 |          |                           | 	; >>>>> Line:	486
  3775 |          |                           | 	; >>>>> YKDelayTask(1); 
  3776 | 00001B81 | B80100                    | 	mov	ax, 1
  3777 | 00001B84 | 50                        | 	push	ax
  3778 | 00001B85 | E8F2F0                    | 	call	YKDelayTask
  3779 | 00001B88 | 83C402                    | 	add	sp, 2
  3780 |          |                           | 	; >>>>> Line:	489
  3781 |          |                           | 	; >>>>> YKDelayTask(5); 
  3782 | 00001B8B | B80500                    | 	mov	ax, 5
  3783 | 00001B8E | 50                        | 	push	ax
  3784 | 00001B8F | E8E8F0                    | 	call	YKDelayTask
  3785 | 00001B92 | 83C402                    | 	add	sp, 2
  3786 |          |                           | 	; >>>>> Line:	490
  3787 |          |                           | 	; >>>>> max = YKIdleCount / 25; 
  3788 | 00001B95 | A1[360A]                  | 	mov	ax, word [YKIdleCount]
  3789 | 00001B98 | 99                        | 	cwd
  3790 | 00001B99 | B91900                    | 	mov	cx, 25
  3791 | 00001B9C | F7F9                      | 	idiv	cx
  3792 | 00001B9E | 8946FE                    | 	mov	word [bp-2], ax
  3793 |          |                           | 	; >>>>> Line:	491
  3794 |          |                           | 	; >>>>> YKIdleCount = 0; 
  3795 | 00001BA1 | C706[360A]0000            | 	mov	word [YKIdleCount], 0
  3796 |          |                           | 	; >>>>> Line:	493
  3797 |          |                           | 	; >>>>> YKNewTask(communicateTask, (void*)&CommunicateTaskStk[512], 15); 
  3798 | 00001BA7 | B00F                      | 	mov	al, 15
  3799 | 00001BA9 | 50                        | 	push	ax
  3800 | 00001BAA | B8[7425]                  | 	mov	ax, (CommunicateTaskStk+1024)
  3801 | 00001BAD | 50                        | 	push	ax
  3802 | 00001BAE | B8[D21C]                  | 	mov	ax, communicateTask
  3803 | 00001BB1 | 50                        | 	push	ax
  3804 | 00001BB2 | E8CFEE                    | 	call	YKNewTask
  3805 | 00001BB5 | 83C406                    | 	add	sp, 6
  3806 |          |                           | 	; >>>>> Line:	494
  3807 |          |                           | 	; >>>>> YKNewTask(decidePlacementTask, (void*)&NewPieceTaskStk[512], 10); 
  3808 | 00001BB8 | B00A                      | 	mov	al, 10
  3809 | 00001BBA | 50                        | 	push	ax
  3810 | 00001BBB | B8[7429]                  | 	mov	ax, (NewPieceTaskStk+1024)
  3811 | 00001BBE | 50                        | 	push	ax
  3812 | 00001BBF | B8[7017]                  | 	mov	ax, decidePlacementTask
  3813 | 00001BC2 | 50                        | 	push	ax
  3814 | 00001BC3 | E8BEEE                    | 	call	YKNewTask
  3815 | 00001BC6 | 83C406                    | 	add	sp, 6
  3816 |          |                           | 	; >>>>> Line:	495
  3817 |          |                           | 	; >>>>> SeedSimptris(seed); 
  3818 | 00001BC9 | FF36[EE15]                | 	push	word [(seed+2)]
  3819 | 00001BCD | FF36[EC15]                | 	push	word [(seed+0)]
  3820 | 00001BD1 | E8B00E                    | 	call	SeedSimptris
  3821 | 00001BD4 | 83C404                    | 	add	sp, 4
  3822 |          |                           | 	; >>>>> Line:	496
  3823 |          |                           | 	; >>>>> StartSimptris(); 
  3824 | 00001BD7 | E8BF0E                    | 	call	StartSimptris
  3825 |          |                           | 	; >>>>> Line:	498
  3826 |          |                           | 	; >>>>> while (1) 
  3827 | 00001BDA | EB6D                      | 	jmp	L_simptrisApp_96
  3828 |          |                           | L_simptrisApp_95:
  3829 |          |                           | 	; >>>>> Line:	500
  3830 |          |                           | 	; >>>>> YKDelayTask(20); 
  3831 | 00001BDC | B81400                    | 	mov	ax, 20
  3832 | 00001BDF | 50                        | 	push	ax
  3833 | 00001BE0 | E897F0                    | 	call	YKDelayTask
  3834 | 00001BE3 | 83C402                    | 	add	sp, 2
  3835 |          |                           | 	; >>>>> Line:	501
  3836 |          |                           | 	; >>>>> YKEnterMutex(); 
  3837 | 00001BE6 | E811EE                    | 	call	YKEnterMutex
  3838 |          |                           | 	; >>>>> Line:	502
  3839 |          |                           | 	; >>>>> switchCount = YKCtxSwCount; 
  3840 | 00001BE9 | A1[340A]                  | 	mov	ax, word [YKCtxSwCount]
  3841 | 00001BEC | 8946FC                    | 	mov	word [bp-4], ax
  3842 |          |                           | 	; >>>>> Line:	503
  3843 |          |                           | 	; >>>>> ext].directi 
  3844 | 00001BEF | A1[360A]                  | 	mov	ax, word [YKIdleCount]
  3845 | 00001BF2 | 8946FA                    | 	mov	word [bp-6], ax
  3846 |          |                           | 	; >>>>> Line:	504
  3847 |          |                           | 	; >>>>> YKExitMutex(); 
  3848 | 00001BF5 | E804EE                    | 	call	YKExitMutex
  3849 |          |                           | 	; >>>>> Line:	505
  3850 |          |                           | 	; >>>>> printString("<CS: "); 
  3851 | 00001BF8 | B8[781B]                  | 	mov	ax, L_simptrisApp_90
  3852 | 00001BFB | 50                        | 	push	ax
  3853 | 00001BFC | E829E8                    | 	call	printString
  3854 | 00001BFF | 83C402                    | 	add	sp, 2
  3855 |          |                           | 	; >>>>> Line:	506
  3856 |          |                           | 	; >>>>> printInt((int)switchCount); 
  3857 | 00001C02 | FF76FC                    | 	push	word [bp-4]
  3858 | 00001C05 | E844E8                    | 	call	printInt
  3859 | 00001C08 | 83C402                    | 	add	sp, 2
  3860 |          |                           | 	; >>>>> Line:	507
  3861 |          |                           | 	; >>>>> printString(", CPU: "); 
  3862 | 00001C0B | B8[701B]                  | 	mov	ax, L_simptrisApp_91
  3863 | 00001C0E | 50                        | 	push	ax
  3864 | 00001C0F | E816E8                    | 	call	printString
  3865 | 00001C12 | 83C402                    | 	add	sp, 2
  3866 |          |                           | 	; >>>>> Line:	508
  3867 |          |                           | 	; >>>>> tmp = (int) (idleCount/max); 
  3868 | 00001C15 | 8B46FA                    | 	mov	ax, word [bp-6]
  3869 | 00001C18 | 31D2                      | 	xor	dx, dx
  3870 | 00001C1A | F776FE                    | 	div	word [bp-2]
  3871 | 00001C1D | 8946F8                    | 	mov	word [bp-8], ax
  3872 |          |                           | 	; >>>>> Line:	509
  3873 |          |                           | 	; >>>>> printInt(100-tmp); 
  3874 | 00001C20 | B86400                    | 	mov	ax, 100
  3875 | 00001C23 | 2B46F8                    | 	sub	ax, word [bp-8]
  3876 | 00001C26 | 50                        | 	push	ax
  3877 | 00001C27 | E822E8                    | 	call	printInt
  3878 | 00001C2A | 83C402                    | 	add	sp, 2
  3879 |          |                           | 	; >>>>> Line:	510
  3880 |          |                           | 	; >>>>> printString(">\r\n"); 
  3881 | 00001C2D | B8[6C1B]                  | 	mov	ax, L_simptrisApp_92
  3882 | 00001C30 | 50                        | 	push	ax
  3883 | 00001C31 | E8F4E7                    | 	call	printString
  3884 | 00001C34 | 83C402                    | 	add	sp, 2
  3885 |          |                           | 	; >>>>> Line:	512
  3886 |          |                           | 	; >>>>> YKEnterMutex(); 
  3887 | 00001C37 | E8C0ED                    | 	call	YKEnterMutex
  3888 |          |                           | 	; >>>>> Line:	513
  3889 |          |                           | 	; >>>>> YKCtxSwCount = 0; 
  3890 | 00001C3A | C706[340A]0000            | 	mov	word [YKCtxSwCount], 0
  3891 |          |                           | 	; >>>>> Line:	514
  3892 |          |                           | 	; >>>>> YKIdleCount = 0; 
  3893 | 00001C40 | C706[360A]0000            | 	mov	word [YKIdleCount], 0
  3894 |          |                           | 	; >>>>> Line:	515
  3895 |          |                           | 	; >>>>> YKExitMutex(); 
  3896 | 00001C46 | E8B3ED                    | 	call	YKExitMutex
  3897 |          |                           | L_simptrisApp_96:
  3898 | 00001C49 | EB91                      | 	jmp	L_simptrisApp_95
  3899 |          |                           | L_simptrisApp_97:
  3900 | 00001C4B | 89EC                      | 	mov	sp, bp
  3901 | 00001C4D | 5D                        | 	pop	bp
  3902 | 00001C4E | C3                        | 	ret
  3903 |          |                           | L_simptrisApp_93:
  3904 | 00001C4F | 55                        | 	push	bp
  3905 | 00001C50 | 89E5                      | 	mov	bp, sp
  3906 | 00001C52 | 83EC08                    | 	sub	sp, 8
  3907 | 00001C55 | E929FF                    | 	jmp	L_simptrisApp_94
  3908 |          |                           | 	ALIGN	2
  3909 |          |                           | myPost:
  3910 |          |                           | 	; >>>>> Line:	519
  3911 |          |                           | 	; >>>>> void myPost(void (*func)(int, int), int id, int direction, unsigned* next) { 
  3912 | 00001C58 | EB73                      | 	jmp	L_simptrisApp_99
  3913 |          |                           | L_simptrisApp_100:
  3914 |          |                           | 	; >>>>> Line:	520
  3915 |          |                           | 	; >>>>> MsgArray[*next].func = func; 
  3916 | 00001C5A | 8B760A                    | 	mov	si, word [bp+10]
  3917 | 00001C5D | 8B04                      | 	mov	ax, word [si]
  3918 | 00001C5F | B90600                    | 	mov	cx, 6
  3919 | 00001C62 | F7E9                      | 	imul	cx
  3920 | 00001C64 | 89C6                      | 	mov	si, ax
  3921 | 00001C66 | 81C6[AA29]                | 	add	si, MsgArray
  3922 | 00001C6A | 8B4604                    | 	mov	ax, word [bp+4]
  3923 | 00001C6D | 8904                      | 	mov	word [si], ax
  3924 |          |                           | 	; >>>>> Line:	521
  3925 |          |                           | 	; >>>>> MsgArray[*next].id = id; 
  3926 | 00001C6F | 8B760A                    | 	mov	si, word [bp+10]
  3927 | 00001C72 | 8B04                      | 	mov	ax, word [si]
  3928 | 00001C74 | B90600                    | 	mov	cx, 6
  3929 | 00001C77 | F7E9                      | 	imul	cx
  3930 | 00001C79 | 05[AA29]                  | 	add	ax, MsgArray
  3931 | 00001C7C | 89C6                      | 	mov	si, ax
  3932 | 00001C7E | 83C604                    | 	add	si, 4
  3933 | 00001C81 | 8B4606                    | 	mov	ax, word [bp+6]
  3934 | 00001C84 | 8904                      | 	mov	word [si], ax
  3935 |          |                           | 	; >>>>> Line:	522
  3936 |          |                           | 	; >>>>> MsgArray[*next].directi 
  3937 | 00001C86 | 8B760A                    | 	mov	si, word [bp+10]
  3938 | 00001C89 | 8B04                      | 	mov	ax, word [si]
  3939 | 00001C8B | B90600                    | 	mov	cx, 6
  3940 | 00001C8E | F7E9                      | 	imul	cx
  3941 | 00001C90 | 05[AA29]                  | 	add	ax, MsgArray
  3942 | 00001C93 | 89C6                      | 	mov	si, ax
  3943 | 00001C95 | 83C602                    | 	add	si, 2
  3944 | 00001C98 | 8B4608                    | 	mov	ax, word [bp+8]
  3945 | 00001C9B | 8904                      | 	mov	word [si], ax
  3946 |          |                           | 	; >>>>> Line:	526
  3947 |          |                           | 	; >>>>> YKQPost(commandQPtr, (void*)&(MsgArray[*next])); 
  3948 | 00001C9D | 8B760A                    | 	mov	si, word [bp+10]
  3949 | 00001CA0 | 8B04                      | 	mov	ax, word [si]
  3950 | 00001CA2 | B90600                    | 	mov	cx, 6
  3951 | 00001CA5 | F7E9                      | 	imul	cx
  3952 | 00001CA7 | 05[AA29]                  | 	add	ax, MsgArray
  3953 | 00001CAA | 50                        | 	push	ax
  3954 | 00001CAB | FF36[6E1D]                | 	push	word [commandQPtr]
  3955 | 00001CAF | E898F2                    | 	call	YKQPost
  3956 | 00001CB2 | 83C404                    | 	add	sp, 4
  3957 |          |                           | 	; >>>>> Line:	528
  3958 |          |                           | 	; >>>>> *next = (*next +1) % 30; 
  3959 | 00001CB5 | 8B760A                    | 	mov	si, word [bp+10]
  3960 | 00001CB8 | 8B04                      | 	mov	ax, word [si]
  3961 | 00001CBA | 40                        | 	inc	ax
  3962 | 00001CBB | 31D2                      | 	xor	dx, dx
  3963 | 00001CBD | B91E00                    | 	mov	cx, 30
  3964 | 00001CC0 | F7F1                      | 	div	cx
  3965 | 00001CC2 | 89D0                      | 	mov	ax, dx
  3966 | 00001CC4 | 8B760A                    | 	mov	si, word [bp+10]
  3967 | 00001CC7 | 8904                      | 	mov	word [si], ax
  3968 | 00001CC9 | 89EC                      | 	mov	sp, bp
  3969 | 00001CCB | 5D                        | 	pop	bp
  3970 | 00001CCC | C3                        | 	ret
  3971 |          |                           | L_simptrisApp_99:
  3972 | 00001CCD | 55                        | 	push	bp
  3973 | 00001CCE | 89E5                      | 	mov	bp, sp
  3974 | 00001CD0 | EB88                      | 	jmp	L_simptrisApp_100
  3975 |          |                           | 	ALIGN	2
  3976 |          |                           | communicateTask:
  3977 |          |                           | 	; >>>>> Line:	531
  3978 |          |                           | 	; >>>>> void communicateTask() { 
  3979 | 00001CD2 | EB39                      | 	jmp	L_simptrisApp_102
  3980 |          |                           | L_simptrisApp_103:
  3981 |          |                           | 	; >>>>> Line:	535
  3982 |          |                           | 	; >>>>> while(1) { 
  3983 | 00001CD4 | EB31                      | 	jmp	L_simptrisApp_105
  3984 |          |                           | L_simptrisApp_104:
  3985 |          |                           | 	; >>>>> Line:	536
  3986 |          |                           | 	; >>>>> YKSemPend(communicateSem); 
  3987 | 00001CD6 | FF36[701D]                | 	push	word [communicateSem]
  3988 | 00001CDA | E88FF0                    | 	call	YKSemPend
  3989 | 00001CDD | 83C402                    | 	add	sp, 2
  3990 |          |                           | 	; >>>>> Line:	537
  3991 |          |                           | 	; >>>>> cmd = (msg*)YKQPend(commandQPtr); 
  3992 | 00001CE0 | FF36[6E1D]                | 	push	word [commandQPtr]
  3993 | 00001CE4 | E8B3F1                    | 	call	YKQPend
  3994 | 00001CE7 | 83C402                    | 	add	sp, 2
  3995 | 00001CEA | 8946FE                    | 	mov	word [bp-2], ax
  3996 |          |                           | 	; >>>>> Line:	549
  3997 |          |                           | 	; >>>>> (cmd->func)(cmd->id, cmd->direction); 
  3998 | 00001CED | 8B76FE                    | 	mov	si, word [bp-2]
  3999 | 00001CF0 | 83C602                    | 	add	si, 2
  4000 | 00001CF3 | FF34                      | 	push	word [si]
  4001 | 00001CF5 | 8B76FE                    | 	mov	si, word [bp-2]
  4002 | 00001CF8 | 83C604                    | 	add	si, 4
  4003 | 00001CFB | FF34                      | 	push	word [si]
  4004 | 00001CFD | 8B76FE                    | 	mov	si, word [bp-2]
  4005 | 00001D00 | 8B34                      | 	mov	si, word [si]
  4006 | 00001D02 | FFD6                      | 	call	si
  4007 | 00001D04 | 83C404                    | 	add	sp, 4
  4008 |          |                           | L_simptrisApp_105:
  4009 | 00001D07 | EBCD                      | 	jmp	L_simptrisApp_104
  4010 |          |                           | L_simptrisApp_106:
  4011 | 00001D09 | 89EC                      | 	mov	sp, bp
  4012 | 00001D0B | 5D                        | 	pop	bp
  4013 | 00001D0C | C3                        | 	ret
  4014 |          |                           | L_simptrisApp_102:
  4015 | 00001D0D | 55                        | 	push	bp
  4016 | 00001D0E | 89E5                      | 	mov	bp, sp
  4017 | 00001D10 | 83EC06                    | 	sub	sp, 6
  4018 | 00001D13 | EBBF                      | 	jmp	L_simptrisApp_103
  4019 | 00001D15 | 90                        | 	ALIGN	2
  4020 |          |                           | main:
  4021 |          |                           | 	; >>>>> Line:	554
  4022 |          |                           | 	; >>>>> void main() { 
  4023 | 00001D16 | EB45                      | 	jmp	L_simptrisApp_108
  4024 |          |                           | L_simptrisApp_109:
  4025 |          |                           | 	; >>>>> Line:	555
  4026 |          |                           | 	; >>>>> YKInitialize(); 
  4027 | 00001D18 | E82FED                    | 	call	YKInitialize
  4028 |          |                           | 	; >>>>> Line:	558
  4029 |          |                           | 	; >>>>> commandQPtr = YKQCreate(MsgQ, 20); 
  4030 | 00001D1B | B81400                    | 	mov	ax, 20
  4031 | 00001D1E | 50                        | 	push	ax
  4032 | 00001D1F | B8[8029]                  | 	mov	ax, MsgQ
  4033 | 00001D22 | 50                        | 	push	ax
  4034 | 00001D23 | E8F2F0                    | 	call	YKQCreate
  4035 | 00001D26 | 83C404                    | 	add	sp, 4
  4036 | 00001D29 | A3[6E1D]                  | 	mov	word [commandQPtr], ax
  4037 |          |                           | 	; >>>>> Line:	559
  4038 |          |                           | 	; >>>>> newPieceSem = YKSemCreate(0); 
  4039 | 00001D2C | 31C0                      | 	xor	ax, ax
  4040 | 00001D2E | 50                        | 	push	ax
  4041 | 00001D2F | E80AF0                    | 	call	YKSemCreate
  4042 | 00001D32 | 83C402                    | 	add	sp, 2
  4043 | 00001D35 | A3[721D]                  | 	mov	word [newPieceSem], ax
  4044 |          |                           | 	; >>>>> Line:	560
  4045 |          |                           | 	; >>>>> communicateSem = YKSemCreate(1); 
  4046 | 00001D38 | B80100                    | 	mov	ax, 1
  4047 | 00001D3B | 50                        | 	push	ax
  4048 | 00001D3C | E8FDEF                    | 	call	YKSemCreate
  4049 | 00001D3F | 83C402                    | 	add	sp, 2
  4050 | 00001D42 | A3[701D]                  | 	mov	word [communicateSem], ax
  4051 |          |                           | 	; >>>>> Line:	564
  4052 |          |                           | 	; >>>>> YKNewTask(TaskSt 
  4053 | 00001D45 | B014                      | 	mov	al, 20
  4054 | 00001D47 | 50                        | 	push	ax
  4055 | 00001D48 | B8[7421]                  | 	mov	ax, (TaskStatStk+1024)
  4056 | 00001D4B | 50                        | 	push	ax
  4057 | 00001D4C | B8[7E1B]                  | 	mov	ax, TaskStat
  4058 | 00001D4F | 50                        | 	push	ax
  4059 | 00001D50 | E831ED                    | 	call	YKNewTask
  4060 | 00001D53 | 83C406                    | 	add	sp, 6
  4061 |          |                           | 	; >>>>> Line:	566
  4062 |          |                           | 	; >>>>> YKRun(); 
  4063 | 00001D56 | E807EF                    | 	call	YKRun
  4064 | 00001D59 | 89EC                      | 	mov	sp, bp
  4065 | 00001D5B | 5D                        | 	pop	bp
  4066 | 00001D5C | C3                        | 	ret
  4067 |          |                           | L_simptrisApp_108:
  4068 | 00001D5D | 55                        | 	push	bp
  4069 | 00001D5E | 89E5                      | 	mov	bp, sp
  4070 | 00001D60 | EBB6                      | 	jmp	L_simptrisApp_109
  4071 |          |                           | 	ALIGN	2
  4072 |          |                           | MyNewPieceID:
  4073 | 00001D62 | 00<rept>                  | 	TIMES	2 db 0
  4074 |          |                           | MyNewPieceType:
  4075 | 00001D64 | 00<rept>                  | 	TIMES	2 db 0
  4076 |          |                           | MyNewPieceOrientation:
  4077 | 00001D66 | 00<rept>                  | 	TIMES	2 db 0
  4078 |          |                           | MyNewPieceColumn:
  4079 | 00001D68 | 00<rept>                  | 	TIMES	2 db 0
  4080 |          |                           | straightCounter:
  4081 | 00001D6A | 00<rept>                  | 	TIMES	2 db 0
  4082 |          |                           | cornerCounter:
  4083 | 00001D6C | 00<rept>                  | 	TIMES	2 db 0
  4084 |          |                           | commandQPtr:
  4085 | 00001D6E | 00<rept>                  | 	TIMES	2 db 0
  4086 |          |                           | communicateSem:
  4087 | 00001D70 | 00<rept>                  | 	TIMES	2 db 0
  4088 |          |                           | newPieceSem:
  4089 | 00001D72 | 00<rept>                  | 	TIMES	2 db 0
  4090 |          |                           | TaskStatStk:
  4091 | 00001D74 | 00<rept>                  | 	TIMES	1024 db 0
  4092 |          |                           | CommunicateTaskStk:
  4093 | 00002174 | 00<rept>                  | 	TIMES	1024 db 0
  4094 |          |                           | NewPieceTaskStk:
  4095 | 00002574 | 00<rept>                  | 	TIMES	1024 db 0
  4096 |          |                           | columns:
  4097 | 00002974 | 00<rept>                  | 	TIMES	12 db 0
  4098 |          |                           | MsgQ:
  4099 | 00002980 | 00<rept>                  | 	TIMES	40 db 0
  4100 |          |                           | MsgQPtr:
  4101 | 000029A8 | 00<rept>                  | 	TIMES	2 db 0
  4102 |          |                           | MsgArray:
  4103 | 000029AA | 00<rept>                  | 	TIMES	180 db 0
  4104 |          |                           | 	align	2
  4105 |          |                           | SlidePiece:	; void SlidePiece(int ID, int direction)
  4106 | 00002A5E | 55                        | 	push	bp
  4107 | 00002A5F | 89E5                      | 	mov	bp, sp
  4108 | 00002A61 | 50                        | 	push	ax
  4109 | 00002A62 | 52                        | 	push	dx
  4110 | 00002A63 | B400                      |  	mov	ah, 0		; Slide piece operation
  4111 | 00002A65 | 8A4606                    |   	mov	al, [bp+6]	; Move direction (loword only)
  4112 | 00002A68 | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  4113 | 00002A6B | CD1B                      | 	int	1Bh		; Call Simptris services
  4114 | 00002A6D | 5A                        | 	pop	dx
  4115 | 00002A6E | 58                        | 	pop	ax
  4116 | 00002A6F | 5D                        | 	pop	bp
  4117 | 00002A70 | C3                        | 	ret
  4118 |          |                           | RotatePiece:	; void RotatePiece(int ID, int direction)
  4119 | 00002A71 | 55                        | 	push	bp
  4120 | 00002A72 | 89E5                      | 	mov	bp, sp
  4121 | 00002A74 | 50                        | 	push	ax
  4122 | 00002A75 | 52                        | 	push	dx
  4123 | 00002A76 | B401                      |  	mov	ah, 1		; Rotate piece operation
  4124 | 00002A78 | 8A4606                    |  	mov	al, [bp+6]	; Move direction (loword only)
  4125 | 00002A7B | 8B5604                    | 	mov	dx, [bp+4]	; Move id
  4126 | 00002A7E | CD1B                      | 	int	1Bh		; Call Simptris services
  4127 | 00002A80 | 5A                        | 	pop	dx
  4128 | 00002A81 | 58                        | 	pop	ax
  4129 | 00002A82 | 5D                        | 	pop	bp
  4130 | 00002A83 | C3                        | 	ret
  4131 |          |                           | SeedSimptris:	; void SeedSimptris(long seed)
  4132 | 00002A84 | 55                        | 	push	bp
  4133 | 00002A85 | 89E5                      | 	mov	bp, sp
  4134 | 00002A87 | 50                        | 	push	ax
  4135 | 00002A88 | 51                        | 	push	cx
  4136 | 00002A89 | 52                        | 	push    dx
  4137 | 00002A8A | B402                      |  	mov	ah, 2		; Seed operation
  4138 | 00002A8C | 8B5604                    | 	mov	dx, [bp+4]	; Move loword of seed
  4139 | 00002A8F | 8B4E06                    | 	mov	cx, [bp+6]	; Move hiword of seed
  4140 | 00002A92 | CD1B                      | 	int	1Bh		; Call Simptris services
  4141 | 00002A94 | 5A                        | 	pop	dx
  4142 | 00002A95 | 59                        | 	pop	cx
  4143 | 00002A96 | 58                        | 	pop	ax
  4144 | 00002A97 | 5D                        | 	pop	bp
  4145 | 00002A98 | C3                        | 	ret
  4146 |          |                           | StartSimptris:	; void StartSimptris(void)
  4147 | 00002A99 | 50                        | 	push	ax
  4148 | 00002A9A | B403                      |  	mov	ah, 3		; Start Simptris operation
  4149 | 00002A9C | CD1B                      | 	int	1Bh		; Call Simptris services
  4150 | 00002A9E | 58                        | 	pop	ax
  4151 | 00002A9F | C3                        | 	ret
  4152 |          |                           | 
