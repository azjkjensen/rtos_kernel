; Generated by c86 (BYU-NASM) 5.1 (beta) from myinth.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
tickCount:
	DW	1
L_myinth_1:
	DW	0
	ALIGN	2
resetHandler:
	; >>>>> Line:	15
	; >>>>> void resetHandler(){ 
	jmp	L_myinth_2
L_myinth_3:
	; >>>>> Line:	17
	; >>>>> exit(0); 
	xor	al, al
	push	ax
	call	exit
	add	sp, 2
	mov	sp, bp
	pop	bp
	ret
L_myinth_2:
	push	bp
	mov	bp, sp
	jmp	L_myinth_3
	ALIGN	2
L_myinth_5:
	DW	0
L_myinth_6:
	DW	0
	ALIGN	2
tickHandler:
	; >>>>> Line:	20
	; >>>>> void tickHandler(){ 
	jmp	L_myinth_7
L_myinth_8:
	; >>>>> Line:	26
	; >>>>> data = (data + 89) % 100; 
	mov	ax, word [L_myinth_6]
	add	ax, 89
	cwd
	mov	cx, 100
	idiv	cx
	mov	ax, dx
	mov	word [L_myinth_6], ax
	; >>>>> Line:	41
	; >>>>> YKTickHandler(); 
	call	YKTickHandler
	mov	sp, bp
	pop	bp
	ret
L_myinth_7:
	push	bp
	mov	bp, sp
	jmp	L_myinth_8
	ALIGN	2
loopLikeABoss:
	; >>>>> Line:	44
	; >>>>> void loopLikeABoss(){ 
	jmp	L_myinth_10
L_myinth_11:
	; >>>>> Line:	46
	; >>>>> for(; i < 5001; i++){ 
	mov	word [bp-2], 0
	; >>>>> Line:	46
	; >>>>> for(; i < 5001; i++){ 
	jmp	L_myinth_13
L_myinth_12:
	; >>>>> Line:	47
	; >>>>> someLocalVariable++; 
	inc	word [L_myinth_1]
L_myinth_15:
	inc	word [bp-2]
L_myinth_13:
	cmp	word [bp-2], 5001
	jl	L_myinth_12
L_myinth_14:
	mov	sp, bp
	pop	bp
	ret
L_myinth_10:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_myinth_11
	ALIGN	2
keypressHandler:
	; >>>>> Line:	51
	; >>>>> void keypressHandler(){ 
	jmp	L_myinth_17
L_myinth_18:
	; >>>>> Line:	54
	; >>>>> c = KeyBuffer; 
	mov	al, byte [KeyBuffer]
	mov	byte [bp-1], al
	mov	sp, bp
	pop	bp
	ret
L_myinth_17:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_myinth_18
